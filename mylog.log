2017-01-05 23:39:56,866 INFO [main] n.u.NinjaModeHelper [NinjaModeHelper.java:90] Ninja is running in mode dev
2017-01-05 23:39:56,947 INFO [main] n.Bootstrap [Bootstrap.java:245] Successfully configured Logback.
2017-01-05 23:39:56,951 INFO [main] n.Bootstrap [Bootstrap.java:165] Enabling Ninja classic configuration
2017-01-05 23:39:57,695 INFO [main] n.u.SwissKnife [SwissKnife.java:77] Could not load file conf/messages_en.properties (not a bad thing necessarily, but I am returing null)
2017-01-05 23:39:57,696 INFO [main] n.i.MessagesImpl [MessagesImpl.java:205] Did not find conf/messages_en.properties but it was specified in application.conf. Using default language instead.
2017-01-05 23:39:57,778 INFO [main] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:116] -------------------------------------------------------------------
2017-01-05 23:39:57,779 INFO [main] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:117] Registered response template engines
2017-01-05 23:39:57,780 INFO [main] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:118] -------------------------------------------------------------------
2017-01-05 23:39:57,782 INFO [main] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/javascript  =>  ninja.template.TemplateEngineJsonP
2017-01-05 23:39:57,783 INFO [main] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/json        =>  ninja.template.TemplateEngineJson
2017-01-05 23:39:57,784 INFO [main] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/xml         =>  ninja.template.TemplateEngineXml
2017-01-05 23:39:57,785 INFO [main] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/html               =>  ninja.template.TemplateEngineFreemarker
2017-01-05 23:39:57,786 INFO [main] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/plain              =>  ninja.template.TemplateEngineText
2017-01-05 23:39:57,866 INFO [main] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1184] Using default implementation for ThreadExecutor
2017-01-05 23:39:57,870 INFO [main] o.q.s.SimpleThreadPool [SimpleThreadPool.java:268] Job execution threads will use class loader of thread: main
2017-01-05 23:39:57,891 INFO [main] o.q.c.SchedulerSignalerImpl [SchedulerSignalerImpl.java:61] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2017-01-05 23:39:57,893 INFO [main] o.q.c.QuartzScheduler [QuartzScheduler.java:240] Quartz Scheduler v.2.2.1 created.
2017-01-05 23:39:57,895 INFO [main] o.q.s.RAMJobStore [RAMJobStore.java:155] RAMJobStore initialized.
2017-01-05 23:39:57,898 INFO [main] o.q.c.QuartzScheduler [QuartzScheduler.java:305] Scheduler meta-data: Quartz Scheduler (v2.2.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2017-01-05 23:39:57,900 INFO [main] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1339] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2017-01-05 23:39:57,900 INFO [main] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1343] Quartz scheduler version: 2.2.1
2017-01-05 23:39:57,920 INFO [main] h.s.SchedulerManagement [SchedulerManagement.java:49] started clear cache job
2017-01-05 23:39:57,929 INFO [main] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:109] ----------------------------------------------------------------------------
2017-01-05 23:39:57,930 INFO [main] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:110] Registered request bodyparser engines
2017-01-05 23:39:57,931 INFO [main] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:111] ----------------------------------------------------------------------------
2017-01-05 23:39:57,936 INFO [main] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/json                   =>  ninja.bodyparser.BodyParserEngineJson
2017-01-05 23:39:57,937 INFO [main] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/x-www-form-urlencoded  =>  ninja.bodyparser.BodyParserEnginePost
2017-01-05 23:39:57,938 INFO [main] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/xml                    =>  ninja.bodyparser.BodyParserEngineXml
2017-01-05 23:39:57,942 INFO [main] n.Bootstrap [Bootstrap.java:105] Ninja injector started in 988 ms.
2017-01-05 23:39:58,055 INFO [main] n.RouterImpl [RouterImpl.java:425] ------------------------------------------------------------------------------------------------------
2017-01-05 23:39:58,056 INFO [main] n.RouterImpl [RouterImpl.java:426] Registered routes
2017-01-05 23:39:58,056 INFO [main] n.RouterImpl [RouterImpl.java:427] ------------------------------------------------------------------------------------------------------
2017-01-05 23:39:58,056 INFO [main] n.RouterImpl [RouterImpl.java:433] GET  /login                          =>  controllers.LoginLogoutController.login()
2017-01-05 23:39:58,057 INFO [main] n.RouterImpl [RouterImpl.java:433] POST /login                          =>  controllers.LoginLogoutController.loginPost()
2017-01-05 23:39:58,057 INFO [main] n.RouterImpl [RouterImpl.java:433] GET  /logout                         =>  controllers.LoginLogoutController.logout()
2017-01-05 23:39:58,058 INFO [main] n.RouterImpl [RouterImpl.java:433] POST /getUserInfo                    =>  controllers.ApplicationController.getUserInfo()
2017-01-05 23:39:58,058 INFO [main] n.RouterImpl [RouterImpl.java:433] POST /getProjectList                 =>  controllers.ApplicationController.getProjectList()
2017-01-05 23:39:58,058 INFO [main] n.RouterImpl [RouterImpl.java:433] POST /getGadgetList                  =>  controllers.GadgetController.getGadgetList()
2017-01-05 23:39:58,059 INFO [main] n.RouterImpl [RouterImpl.java:433] POST /addNewGadget                   =>  controllers.GadgetController.addNewGadget()
2017-01-05 23:39:58,059 INFO [main] n.RouterImpl [RouterImpl.java:433] POST /updateGadget                   =>  controllers.GadgetController.updateGadget()
2017-01-05 23:39:58,060 INFO [main] n.RouterImpl [RouterImpl.java:433] POST /clearCacheGadget               =>  controllers.GadgetController.clearCacheGadget()
2017-01-05 23:39:58,060 INFO [main] n.RouterImpl [RouterImpl.java:433] POST /deleteGadget                   =>  controllers.GadgetController.deleteGadget()
2017-01-05 23:39:58,060 INFO [main] n.RouterImpl [RouterImpl.java:433] POST /showSonarStatisticGadget       =>  controllers.GadgetController.showSonarStatisticGadget()
2017-01-05 23:39:58,061 INFO [main] n.RouterImpl [RouterImpl.java:433] POST /getIAComponents                =>  controllers.ApplicationController.getIAComponents()
2017-01-05 23:39:58,061 INFO [main] n.RouterImpl [RouterImpl.java:433] POST /getMetrics                     =>  controllers.ApplicationController.getMetricList()
2017-01-05 23:39:58,061 INFO [main] n.RouterImpl [RouterImpl.java:433] POST /getReleaseList                 =>  controllers.ApplicationController.getReleaseList()
2017-01-05 23:39:58,062 INFO [main] n.RouterImpl [RouterImpl.java:433] POST /getPeriodList                  =>  controllers.ApplicationController.getPeriodList()
2017-01-05 23:39:58,062 INFO [main] n.RouterImpl [RouterImpl.java:433] POST /getCruProjectList              =>  controllers.OverdueReviewReportController.getCruProjectList()
2017-01-05 23:39:58,063 INFO [main] n.RouterImpl [RouterImpl.java:433] GET  /release                        =>  controllers.ConfigurationController.release()
2017-01-05 23:39:58,063 INFO [main] n.RouterImpl [RouterImpl.java:433] GET  /release/ialist/{name}          =>  controllers.ConfigurationController.releaseURL()
2017-01-05 23:39:58,063 INFO [main] n.RouterImpl [RouterImpl.java:433] POST /release                        =>  controllers.ConfigurationController.releasePost()
2017-01-05 23:39:58,064 INFO [main] n.RouterImpl [RouterImpl.java:433] POST /release/update                 =>  controllers.ConfigurationController.releaseUpdate()
2017-01-05 23:39:58,064 INFO [main] n.RouterImpl [RouterImpl.java:433] POST /release/delete                 =>  controllers.ConfigurationController.releaseDelete()
2017-01-05 23:39:58,064 INFO [main] n.RouterImpl [RouterImpl.java:433] GET  /metric                         =>  controllers.ConfigurationController.metric()
2017-01-05 23:39:58,065 INFO [main] n.RouterImpl [RouterImpl.java:433] POST /metric                         =>  controllers.ConfigurationController.metricPost()
2017-01-05 23:39:58,066 INFO [main] n.RouterImpl [RouterImpl.java:433] POST /metric/update                  =>  controllers.ConfigurationController.metricUpdate()
2017-01-05 23:39:58,066 INFO [main] n.RouterImpl [RouterImpl.java:433] POST /metric/delete                  =>  controllers.ConfigurationController.metricDelete()
2017-01-05 23:39:58,067 INFO [main] n.RouterImpl [RouterImpl.java:433] GET  /dashboard/new                  =>  controllers.DashboardController.new_dashboard()
2017-01-05 23:39:58,067 INFO [main] n.RouterImpl [RouterImpl.java:433] POST /dashboard/new                  =>  controllers.DashboardController.new_dashboard_post()
2017-01-05 23:39:58,067 INFO [main] n.RouterImpl [RouterImpl.java:433] POST /deleteDashboard                =>  controllers.DashboardController.deleteDashboard()
2017-01-05 23:39:58,068 INFO [main] n.RouterImpl [RouterImpl.java:433] POST /getDashboardInfo               =>  controllers.DashboardController.getDashboardInfo()
2017-01-05 23:39:58,068 INFO [main] n.RouterImpl [RouterImpl.java:433] POST /getDashboardList               =>  controllers.DashboardController.getDashboardList()
2017-01-05 23:39:58,068 INFO [main] n.RouterImpl [RouterImpl.java:433] POST /updateDashboardOption          =>  controllers.DashboardController.updateDashboardOption()
2017-01-05 23:39:58,069 INFO [main] n.RouterImpl [RouterImpl.java:433] GET  /assets/webjars/{fileName: .*}  =>  ninja.AssetsController.serveWebJars()
2017-01-05 23:39:58,070 INFO [main] n.RouterImpl [RouterImpl.java:433] GET  /assets/{fileName: .*}          =>  ninja.AssetsController.serveStatic()
2017-01-05 23:39:58,070 INFO [main] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getData                 =>  controllers.MyGadgetController.getDataGadget()
2017-01-05 23:39:58,071 INFO [main] n.RouterImpl [RouterImpl.java:433] POST /gadget/save                    =>  controllers.MyGadgetController.insertOrUpdateGadget()
2017-01-05 23:39:58,071 INFO [main] n.RouterImpl [RouterImpl.java:433] GET  /gadget/gadgets                 =>  controllers.MyGadgetController.getGadgetsInDashboardId()
2017-01-05 23:39:58,071 INFO [main] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getStoryInEpic          =>  controllers.MyGadgetController.getStoryInEpic()
2017-01-05 23:39:58,072 INFO [main] n.RouterImpl [RouterImpl.java:433] GET  /product                        =>  controllers.ProductController.productPage()
2017-01-05 23:39:58,072 INFO [main] n.RouterImpl [RouterImpl.java:433] POST /product/deleteProduct          =>  controllers.ProductController.deleteProduct()
2017-01-05 23:39:58,072 INFO [main] n.RouterImpl [RouterImpl.java:433] POST /product/insertProduct          =>  controllers.ProductController.addProduct()
2017-01-05 23:39:58,073 INFO [main] n.RouterImpl [RouterImpl.java:433] POST /product/deleteCycle            =>  controllers.ProductController.deleteCycle()
2017-01-05 23:39:58,073 INFO [main] n.RouterImpl [RouterImpl.java:433] POST /product/insertCycle            =>  controllers.ProductController.addCycle()
2017-01-05 23:39:58,074 INFO [main] n.RouterImpl [RouterImpl.java:433] GET  /product/getall                 =>  controllers.ProductController.getAllProduct()
2017-01-05 23:39:58,074 INFO [main] n.RouterImpl [RouterImpl.java:433] GET  /getEpicLinks                   =>  controllers.EpicController.getEpicLinks()
2017-01-05 23:39:58,074 INFO [main] n.RouterImpl [RouterImpl.java:433] GET  /getassignee                    =>  controllers.AssigneeController.getAssigneeList()
2017-01-05 23:39:58,086 INFO [main] n.RouterImpl [RouterImpl.java:433] GET  /listcycle                      =>  controllers.AssigneeController.getListCycleName()
2017-01-05 23:39:58,087 INFO [main] n.RouterImpl [RouterImpl.java:433] GET  /cycleExisting                  =>  controllers.AssigneeController.getListExistingCycle()
2017-01-05 23:39:58,087 INFO [main] n.RouterImpl [RouterImpl.java:433] GET  /listproject                    =>  controllers.MyGadgetController.getProjectList()
2017-01-05 23:39:58,088 INFO [main] n.RouterImpl [RouterImpl.java:433] GET  /.*                             =>  controllers.ApplicationController.index()
2017-01-05 23:39:58,088 INFO [main] n.NinjaDefault [NinjaDefault.java:441] 
 _______  .___ _______        ____.  _____   
 \      \ |   |\      \      |    | /  _  \  
 /   |   \|   |/   |   \     |    |/  /_\  \ 
/    |    \   /    |    \/\__|    /    |    \  http://www.ninjaframework.org
\____|__  /___\____|__  /\________\____|__  /  @ninjaframework
     web\/framework   \/                  \/   5.8.0

2017-01-05 23:39:58,088 INFO [main] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:53] Starting Ninja application...
2017-01-05 23:39:58,090 INFO [main] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:86] Ninja application started in 2ms
2017-01-05 23:40:17,432 INFO [qtp1186254299-15] o.m.d.cluster [SLF4JLogger.java:71] Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2017-01-05 23:40:17,559 INFO [qtp1186254299-15] o.m.d.cluster [SLF4JLogger.java:71] No server chosen by ReadPreferenceServerSelector{readPreference=primary} from cluster description ClusterDescription{type=UNKNOWN, connectionMode=SINGLE, all=[ServerDescription{address=127.0.0.1:27017, type=UNKNOWN, state=CONNECTING}]}. Waiting for 30000 ms before timing out
2017-01-05 23:40:17,577 INFO [cluster-ClusterId{value='586e76f118e18211381c1cd4', description='null'}-127.0.0.1:27017] o.m.d.connection [SLF4JLogger.java:71] Opened connection [connectionId{localValue:1, serverValue:55}] to 127.0.0.1:27017
2017-01-05 23:40:17,579 INFO [cluster-ClusterId{value='586e76f118e18211381c1cd4', description='null'}-127.0.0.1:27017] o.m.d.cluster [SLF4JLogger.java:71] Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 1, 5]}, minWireVersion=0, maxWireVersion=4, maxDocumentSize=16777216, roundTripTimeNanos=1039708}
2017-01-05 23:40:17,594 INFO [qtp1186254299-15] o.m.d.connection [SLF4JLogger.java:71] Opened connection [connectionId{localValue:2, serverValue:56}] to 127.0.0.1:27017
2017-01-05 23:40:17,606 INFO [qtp1186254299-15] c.DashboardController [DashboardController.java:131] DASHBOARDS [{"owner":"hcongle","name":"abc","privacy":{"share":["Everyone"],"status":"public"},"id":"586e67bb18e18285bc408671"}]
2017-01-05 23:40:17,609 INFO [qtp1186254299-15] o.m.d.connection [SLF4JLogger.java:71] Closed connection [connectionId{localValue:2, serverValue:56}] to 127.0.0.1:27017 because the pool has been closed.
2017-01-05 23:40:17,652 INFO [qtp1186254299-22] o.m.d.cluster [SLF4JLogger.java:71] Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2017-01-05 23:40:17,657 INFO [qtp1186254299-22] o.m.d.cluster [SLF4JLogger.java:71] No server chosen by ReadPreferenceServerSelector{readPreference=primary} from cluster description ClusterDescription{type=UNKNOWN, connectionMode=SINGLE, all=[ServerDescription{address=127.0.0.1:27017, type=UNKNOWN, state=CONNECTING}]}. Waiting for 30000 ms before timing out
2017-01-05 23:40:17,662 INFO [cluster-ClusterId{value='586e76f118e18211381c1cd5', description='null'}-127.0.0.1:27017] o.m.d.connection [SLF4JLogger.java:71] Opened connection [connectionId{localValue:3, serverValue:57}] to 127.0.0.1:27017
2017-01-05 23:40:17,663 INFO [cluster-ClusterId{value='586e76f118e18211381c1cd5', description='null'}-127.0.0.1:27017] o.m.d.cluster [SLF4JLogger.java:71] Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 1, 5]}, minWireVersion=0, maxWireVersion=4, maxDocumentSize=16777216, roundTripTimeNanos=558676}
2017-01-05 23:40:17,668 INFO [qtp1186254299-22] o.m.d.connection [SLF4JLogger.java:71] Opened connection [connectionId{localValue:4, serverValue:58}] to 127.0.0.1:27017
2017-01-05 23:40:17,669 INFO [qtp1186254299-22] o.m.d.connection [SLF4JLogger.java:71] Closed connection [connectionId{localValue:4, serverValue:58}] to 127.0.0.1:27017 because the pool has been closed.
2017-01-05 23:41:35,520 INFO [qtp1186254299-22] o.m.d.cluster [SLF4JLogger.java:71] Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2017-01-05 23:41:35,522 INFO [qtp1186254299-22] o.m.d.cluster [SLF4JLogger.java:71] No server chosen by ReadPreferenceServerSelector{readPreference=primary} from cluster description ClusterDescription{type=UNKNOWN, connectionMode=SINGLE, all=[ServerDescription{address=127.0.0.1:27017, type=UNKNOWN, state=CONNECTING}]}. Waiting for 30000 ms before timing out
2017-01-05 23:41:35,533 INFO [cluster-ClusterId{value='586e773f18e18211381c1cd6', description='null'}-127.0.0.1:27017] o.m.d.connection [SLF4JLogger.java:71] Opened connection [connectionId{localValue:5, serverValue:59}] to 127.0.0.1:27017
2017-01-05 23:41:35,534 INFO [cluster-ClusterId{value='586e773f18e18211381c1cd6', description='null'}-127.0.0.1:27017] o.m.d.cluster [SLF4JLogger.java:71] Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 1, 5]}, minWireVersion=0, maxWireVersion=4, maxDocumentSize=16777216, roundTripTimeNanos=707715}
2017-01-05 23:41:35,540 INFO [qtp1186254299-22] o.m.d.connection [SLF4JLogger.java:71] Opened connection [connectionId{localValue:6, serverValue:60}] to 127.0.0.1:27017
2017-01-05 23:41:35,541 INFO [qtp1186254299-22] c.DashboardController [DashboardController.java:131] DASHBOARDS [{"owner":"hcongle","name":"abc","privacy":{"share":["Everyone"],"status":"public"},"id":"586e67bb18e18285bc408671"}]
2017-01-05 23:41:35,542 INFO [qtp1186254299-22] o.m.d.connection [SLF4JLogger.java:71] Closed connection [connectionId{localValue:6, serverValue:60}] to 127.0.0.1:27017 because the pool has been closed.
2017-01-05 23:41:35,658 INFO [qtp1186254299-16] o.m.d.cluster [SLF4JLogger.java:71] Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2017-01-05 23:41:35,660 INFO [qtp1186254299-16] o.m.d.cluster [SLF4JLogger.java:71] No server chosen by ReadPreferenceServerSelector{readPreference=primary} from cluster description ClusterDescription{type=UNKNOWN, connectionMode=SINGLE, all=[ServerDescription{address=127.0.0.1:27017, type=UNKNOWN, state=CONNECTING}]}. Waiting for 30000 ms before timing out
2017-01-05 23:41:35,671 INFO [cluster-ClusterId{value='586e773f18e18211381c1cd7', description='null'}-127.0.0.1:27017] o.m.d.connection [SLF4JLogger.java:71] Opened connection [connectionId{localValue:7, serverValue:61}] to 127.0.0.1:27017
2017-01-05 23:41:35,673 INFO [cluster-ClusterId{value='586e773f18e18211381c1cd7', description='null'}-127.0.0.1:27017] o.m.d.cluster [SLF4JLogger.java:71] Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 1, 5]}, minWireVersion=0, maxWireVersion=4, maxDocumentSize=16777216, roundTripTimeNanos=1749208}
2017-01-05 23:41:35,687 INFO [qtp1186254299-16] o.m.d.connection [SLF4JLogger.java:71] Opened connection [connectionId{localValue:8, serverValue:62}] to 127.0.0.1:27017
2017-01-05 23:41:35,689 INFO [qtp1186254299-16] o.m.d.connection [SLF4JLogger.java:71] Closed connection [connectionId{localValue:8, serverValue:62}] to 127.0.0.1:27017 because the pool has been closed.
2017-01-05 23:42:01,459 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:93] Stopping Ninja application...
2017-01-05 23:42:01,469 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:97] Ninja application stopped in 10ms
2017-01-05 23:42:05,278 INFO [Scanner-0] n.u.NinjaModeHelper [NinjaModeHelper.java:90] Ninja is running in mode dev
2017-01-05 23:42:05,330 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:245] Successfully configured Logback.
2017-01-05 23:42:05,333 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:165] Enabling Ninja classic configuration
2017-01-05 23:42:06,325 INFO [Scanner-0] n.u.SwissKnife [SwissKnife.java:77] Could not load file conf/messages_en.properties (not a bad thing necessarily, but I am returing null)
2017-01-05 23:42:06,326 INFO [Scanner-0] n.i.MessagesImpl [MessagesImpl.java:205] Did not find conf/messages_en.properties but it was specified in application.conf. Using default language instead.
2017-01-05 23:42:06,429 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:116] -------------------------------------------------------------------
2017-01-05 23:42:06,429 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:117] Registered response template engines
2017-01-05 23:42:06,430 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:118] -------------------------------------------------------------------
2017-01-05 23:42:06,430 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/javascript  =>  ninja.template.TemplateEngineJsonP
2017-01-05 23:42:06,430 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/json        =>  ninja.template.TemplateEngineJson
2017-01-05 23:42:06,431 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/xml         =>  ninja.template.TemplateEngineXml
2017-01-05 23:42:06,431 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/html               =>  ninja.template.TemplateEngineFreemarker
2017-01-05 23:42:06,432 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/plain              =>  ninja.template.TemplateEngineText
2017-01-05 23:42:06,488 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1184] Using default implementation for ThreadExecutor
2017-01-05 23:42:06,492 INFO [Scanner-0] o.q.s.SimpleThreadPool [SimpleThreadPool.java:268] Job execution threads will use class loader of thread: Scanner-0
2017-01-05 23:42:06,539 INFO [Scanner-0] o.q.c.SchedulerSignalerImpl [SchedulerSignalerImpl.java:61] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2017-01-05 23:42:06,541 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:240] Quartz Scheduler v.2.2.1 created.
2017-01-05 23:42:06,543 INFO [Scanner-0] o.q.s.RAMJobStore [RAMJobStore.java:155] RAMJobStore initialized.
2017-01-05 23:42:06,544 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:305] Scheduler meta-data: Quartz Scheduler (v2.2.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2017-01-05 23:42:06,545 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1339] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2017-01-05 23:42:06,545 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1343] Quartz scheduler version: 2.2.1
2017-01-05 23:42:06,556 INFO [Scanner-0] h.s.SchedulerManagement [SchedulerManagement.java:49] started clear cache job
2017-01-05 23:42:06,564 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:109] ----------------------------------------------------------------------------
2017-01-05 23:42:06,565 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:110] Registered request bodyparser engines
2017-01-05 23:42:06,565 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:111] ----------------------------------------------------------------------------
2017-01-05 23:42:06,565 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/json                   =>  ninja.bodyparser.BodyParserEngineJson
2017-01-05 23:42:06,565 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/x-www-form-urlencoded  =>  ninja.bodyparser.BodyParserEnginePost
2017-01-05 23:42:06,566 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/xml                    =>  ninja.bodyparser.BodyParserEngineXml
2017-01-05 23:42:06,567 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:105] Ninja injector started in 1230 ms.
2017-01-05 23:42:06,750 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:425] ------------------------------------------------------------------------------------------------------
2017-01-05 23:42:06,750 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:426] Registered routes
2017-01-05 23:42:06,750 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:427] ------------------------------------------------------------------------------------------------------
2017-01-05 23:42:06,751 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /login                          =>  controllers.LoginLogoutController.login()
2017-01-05 23:42:06,751 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /login                          =>  controllers.LoginLogoutController.loginPost()
2017-01-05 23:42:06,751 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /logout                         =>  controllers.LoginLogoutController.logout()
2017-01-05 23:42:06,751 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getUserInfo                    =>  controllers.ApplicationController.getUserInfo()
2017-01-05 23:42:06,752 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getProjectList                 =>  controllers.ApplicationController.getProjectList()
2017-01-05 23:42:06,752 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getGadgetList                  =>  controllers.GadgetController.getGadgetList()
2017-01-05 23:42:06,752 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /addNewGadget                   =>  controllers.GadgetController.addNewGadget()
2017-01-05 23:42:06,752 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateGadget                   =>  controllers.GadgetController.updateGadget()
2017-01-05 23:42:06,753 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /clearCacheGadget               =>  controllers.GadgetController.clearCacheGadget()
2017-01-05 23:42:06,753 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteGadget                   =>  controllers.GadgetController.deleteGadget()
2017-01-05 23:42:06,753 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /showSonarStatisticGadget       =>  controllers.GadgetController.showSonarStatisticGadget()
2017-01-05 23:42:06,753 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getIAComponents                =>  controllers.ApplicationController.getIAComponents()
2017-01-05 23:42:06,753 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getMetrics                     =>  controllers.ApplicationController.getMetricList()
2017-01-05 23:42:06,754 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getReleaseList                 =>  controllers.ApplicationController.getReleaseList()
2017-01-05 23:42:06,754 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getPeriodList                  =>  controllers.ApplicationController.getPeriodList()
2017-01-05 23:42:06,754 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getCruProjectList              =>  controllers.OverdueReviewReportController.getCruProjectList()
2017-01-05 23:42:06,754 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release                        =>  controllers.ConfigurationController.release()
2017-01-05 23:42:06,755 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release/ialist/{name}          =>  controllers.ConfigurationController.releaseURL()
2017-01-05 23:42:06,755 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release                        =>  controllers.ConfigurationController.releasePost()
2017-01-05 23:42:06,755 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/update                 =>  controllers.ConfigurationController.releaseUpdate()
2017-01-05 23:42:06,755 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/delete                 =>  controllers.ConfigurationController.releaseDelete()
2017-01-05 23:42:06,756 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /metric                         =>  controllers.ConfigurationController.metric()
2017-01-05 23:42:06,756 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric                         =>  controllers.ConfigurationController.metricPost()
2017-01-05 23:42:06,756 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/update                  =>  controllers.ConfigurationController.metricUpdate()
2017-01-05 23:42:06,756 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/delete                  =>  controllers.ConfigurationController.metricDelete()
2017-01-05 23:42:06,756 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /dashboard/new                  =>  controllers.DashboardController.new_dashboard()
2017-01-05 23:42:06,756 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /dashboard/new                  =>  controllers.DashboardController.new_dashboard_post()
2017-01-05 23:42:06,756 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteDashboard                =>  controllers.DashboardController.deleteDashboard()
2017-01-05 23:42:06,757 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardInfo               =>  controllers.DashboardController.getDashboardInfo()
2017-01-05 23:42:06,757 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardList               =>  controllers.DashboardController.getDashboardList()
2017-01-05 23:42:06,757 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateDashboardOption          =>  controllers.DashboardController.updateDashboardOption()
2017-01-05 23:42:06,757 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/webjars/{fileName: .*}  =>  ninja.AssetsController.serveWebJars()
2017-01-05 23:42:06,758 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/{fileName: .*}          =>  ninja.AssetsController.serveStatic()
2017-01-05 23:42:06,758 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getData                 =>  controllers.MyGadgetController.getDataGadget()
2017-01-05 23:42:06,758 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /gadget/save                    =>  controllers.MyGadgetController.insertOrUpdateGadget()
2017-01-05 23:42:06,758 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/gadgets                 =>  controllers.MyGadgetController.getGadgetsInDashboardId()
2017-01-05 23:42:06,758 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getStoryInEpic          =>  controllers.MyGadgetController.getStoryInEpic()
2017-01-05 23:42:06,759 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product                        =>  controllers.ProductController.productPage()
2017-01-05 23:42:06,759 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteProduct          =>  controllers.ProductController.deleteProduct()
2017-01-05 23:42:06,759 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertProduct          =>  controllers.ProductController.addProduct()
2017-01-05 23:42:06,759 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteCycle            =>  controllers.ProductController.deleteCycle()
2017-01-05 23:42:06,759 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertCycle            =>  controllers.ProductController.addCycle()
2017-01-05 23:42:06,759 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product/getall                 =>  controllers.ProductController.getAllProduct()
2017-01-05 23:42:06,760 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getEpicLinks                   =>  controllers.EpicController.getEpicLinks()
2017-01-05 23:42:06,760 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getassignee                    =>  controllers.AssigneeController.getAssigneeList()
2017-01-05 23:42:06,760 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listcycle                      =>  controllers.AssigneeController.getListCycleName()
2017-01-05 23:42:06,760 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /cycleExisting                  =>  controllers.AssigneeController.getListExistingCycle()
2017-01-05 23:42:06,760 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listproject                    =>  controllers.MyGadgetController.getProjectList()
2017-01-05 23:42:06,760 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /.*                             =>  controllers.ApplicationController.index()
2017-01-05 23:42:06,761 INFO [Scanner-0] n.NinjaDefault [NinjaDefault.java:441] 
 _______  .___ _______        ____.  _____   
 \      \ |   |\      \      |    | /  _  \  
 /   |   \|   |/   |   \     |    |/  /_\  \ 
/    |    \   /    |    \/\__|    /    |    \  http://www.ninjaframework.org
\____|__  /___\____|__  /\________\____|__  /  @ninjaframework
     web\/framework   \/                  \/   5.8.0

2017-01-05 23:42:06,761 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:53] Starting Ninja application...
2017-01-05 23:42:06,763 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:86] Ninja application started in 2ms
2017-01-05 23:42:17,731 INFO [qtp1186254299-16] o.m.d.cluster [SLF4JLogger.java:71] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2017-01-05 23:42:17,786 INFO [qtp1186254299-16] o.m.d.cluster [SLF4JLogger.java:71] No server chosen by ReadPreferenceServerSelector{readPreference=primary} from cluster description ClusterDescription{type=UNKNOWN, connectionMode=SINGLE, all=[ServerDescription{address=localhost:27017, type=UNKNOWN, state=CONNECTING}]}. Waiting for 30000 ms before timing out
2017-01-05 23:42:17,797 INFO [cluster-ClusterId{value='586e776918e1821138100a75', description='null'}-localhost:27017] o.m.d.connection [SLF4JLogger.java:71] Opened connection [connectionId{localValue:1, serverValue:63}] to localhost:27017
2017-01-05 23:42:17,799 INFO [cluster-ClusterId{value='586e776918e1821138100a75', description='null'}-localhost:27017] o.m.d.cluster [SLF4JLogger.java:71] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 1, 5]}, minWireVersion=0, maxWireVersion=4, maxDocumentSize=16777216, roundTripTimeNanos=502005}
2017-01-05 23:42:17,804 INFO [qtp1186254299-16] o.m.d.connection [SLF4JLogger.java:71] Opened connection [connectionId{localValue:2, serverValue:64}] to localhost:27017
2017-01-05 23:43:28,208 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:93] Stopping Ninja application...
2017-01-05 23:43:28,216 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:97] Ninja application stopped in 8ms
2017-01-05 23:43:30,799 INFO [Scanner-0] n.u.NinjaModeHelper [NinjaModeHelper.java:90] Ninja is running in mode dev
2017-01-05 23:43:30,840 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:245] Successfully configured Logback.
2017-01-05 23:43:30,843 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:165] Enabling Ninja classic configuration
2017-01-05 23:43:31,729 INFO [Scanner-0] n.u.SwissKnife [SwissKnife.java:77] Could not load file conf/messages_en.properties (not a bad thing necessarily, but I am returing null)
2017-01-05 23:43:31,730 INFO [Scanner-0] n.i.MessagesImpl [MessagesImpl.java:205] Did not find conf/messages_en.properties but it was specified in application.conf. Using default language instead.
2017-01-05 23:43:31,811 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:116] -------------------------------------------------------------------
2017-01-05 23:43:31,812 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:117] Registered response template engines
2017-01-05 23:43:31,812 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:118] -------------------------------------------------------------------
2017-01-05 23:43:31,813 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/javascript  =>  ninja.template.TemplateEngineJsonP
2017-01-05 23:43:31,813 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/json        =>  ninja.template.TemplateEngineJson
2017-01-05 23:43:31,813 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/xml         =>  ninja.template.TemplateEngineXml
2017-01-05 23:43:31,814 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/html               =>  ninja.template.TemplateEngineFreemarker
2017-01-05 23:43:31,814 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/plain              =>  ninja.template.TemplateEngineText
2017-01-05 23:43:31,874 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1184] Using default implementation for ThreadExecutor
2017-01-05 23:43:31,878 INFO [Scanner-0] o.q.s.SimpleThreadPool [SimpleThreadPool.java:268] Job execution threads will use class loader of thread: Scanner-0
2017-01-05 23:43:31,940 INFO [Scanner-0] o.q.c.SchedulerSignalerImpl [SchedulerSignalerImpl.java:61] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2017-01-05 23:43:31,945 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:240] Quartz Scheduler v.2.2.1 created.
2017-01-05 23:43:31,948 INFO [Scanner-0] o.q.s.RAMJobStore [RAMJobStore.java:155] RAMJobStore initialized.
2017-01-05 23:43:31,950 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:305] Scheduler meta-data: Quartz Scheduler (v2.2.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2017-01-05 23:43:31,952 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1339] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2017-01-05 23:43:31,953 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1343] Quartz scheduler version: 2.2.1
2017-01-05 23:43:31,967 INFO [Scanner-0] h.s.SchedulerManagement [SchedulerManagement.java:49] started clear cache job
2017-01-05 23:43:31,969 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:109] ----------------------------------------------------------------------------
2017-01-05 23:43:31,970 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:110] Registered request bodyparser engines
2017-01-05 23:43:31,970 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:111] ----------------------------------------------------------------------------
2017-01-05 23:43:31,970 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/json                   =>  ninja.bodyparser.BodyParserEngineJson
2017-01-05 23:43:31,971 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/x-www-form-urlencoded  =>  ninja.bodyparser.BodyParserEnginePost
2017-01-05 23:43:31,971 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/xml                    =>  ninja.bodyparser.BodyParserEngineXml
2017-01-05 23:43:31,973 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:105] Ninja injector started in 1127 ms.
2017-01-05 23:43:32,106 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:425] ------------------------------------------------------------------------------------------------------
2017-01-05 23:43:32,106 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:426] Registered routes
2017-01-05 23:43:32,107 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:427] ------------------------------------------------------------------------------------------------------
2017-01-05 23:43:32,107 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /login                          =>  controllers.LoginLogoutController.login()
2017-01-05 23:43:32,107 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /login                          =>  controllers.LoginLogoutController.loginPost()
2017-01-05 23:43:32,107 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /logout                         =>  controllers.LoginLogoutController.logout()
2017-01-05 23:43:32,108 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getUserInfo                    =>  controllers.ApplicationController.getUserInfo()
2017-01-05 23:43:32,108 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getProjectList                 =>  controllers.ApplicationController.getProjectList()
2017-01-05 23:43:32,108 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getGadgetList                  =>  controllers.GadgetController.getGadgetList()
2017-01-05 23:43:32,108 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /addNewGadget                   =>  controllers.GadgetController.addNewGadget()
2017-01-05 23:43:32,108 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateGadget                   =>  controllers.GadgetController.updateGadget()
2017-01-05 23:43:32,108 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /clearCacheGadget               =>  controllers.GadgetController.clearCacheGadget()
2017-01-05 23:43:32,109 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteGadget                   =>  controllers.GadgetController.deleteGadget()
2017-01-05 23:43:32,109 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /showSonarStatisticGadget       =>  controllers.GadgetController.showSonarStatisticGadget()
2017-01-05 23:43:32,109 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getIAComponents                =>  controllers.ApplicationController.getIAComponents()
2017-01-05 23:43:32,109 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getMetrics                     =>  controllers.ApplicationController.getMetricList()
2017-01-05 23:43:32,109 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getReleaseList                 =>  controllers.ApplicationController.getReleaseList()
2017-01-05 23:43:32,110 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getPeriodList                  =>  controllers.ApplicationController.getPeriodList()
2017-01-05 23:43:32,110 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getCruProjectList              =>  controllers.OverdueReviewReportController.getCruProjectList()
2017-01-05 23:43:32,110 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release                        =>  controllers.ConfigurationController.release()
2017-01-05 23:43:32,111 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release/ialist/{name}          =>  controllers.ConfigurationController.releaseURL()
2017-01-05 23:43:32,111 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release                        =>  controllers.ConfigurationController.releasePost()
2017-01-05 23:43:32,111 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/update                 =>  controllers.ConfigurationController.releaseUpdate()
2017-01-05 23:43:32,111 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/delete                 =>  controllers.ConfigurationController.releaseDelete()
2017-01-05 23:43:32,112 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /metric                         =>  controllers.ConfigurationController.metric()
2017-01-05 23:43:32,112 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric                         =>  controllers.ConfigurationController.metricPost()
2017-01-05 23:43:32,113 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/update                  =>  controllers.ConfigurationController.metricUpdate()
2017-01-05 23:43:32,113 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/delete                  =>  controllers.ConfigurationController.metricDelete()
2017-01-05 23:43:32,113 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /dashboard/new                  =>  controllers.DashboardController.new_dashboard()
2017-01-05 23:43:32,113 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /dashboard/new                  =>  controllers.DashboardController.new_dashboard_post()
2017-01-05 23:43:32,113 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteDashboard                =>  controllers.DashboardController.deleteDashboard()
2017-01-05 23:43:32,113 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardInfo               =>  controllers.DashboardController.getDashboardInfo()
2017-01-05 23:43:32,114 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardList               =>  controllers.DashboardController.getDashboardList()
2017-01-05 23:43:32,114 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateDashboardOption          =>  controllers.DashboardController.updateDashboardOption()
2017-01-05 23:43:32,114 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/webjars/{fileName: .*}  =>  ninja.AssetsController.serveWebJars()
2017-01-05 23:43:32,115 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/{fileName: .*}          =>  ninja.AssetsController.serveStatic()
2017-01-05 23:43:32,115 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getData                 =>  controllers.MyGadgetController.getDataGadget()
2017-01-05 23:43:32,115 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /gadget/save                    =>  controllers.MyGadgetController.insertOrUpdateGadget()
2017-01-05 23:43:32,115 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/gadgets                 =>  controllers.MyGadgetController.getGadgetsInDashboardId()
2017-01-05 23:43:32,116 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getStoryInEpic          =>  controllers.MyGadgetController.getStoryInEpic()
2017-01-05 23:43:32,116 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product                        =>  controllers.ProductController.productPage()
2017-01-05 23:43:32,116 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteProduct          =>  controllers.ProductController.deleteProduct()
2017-01-05 23:43:32,117 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertProduct          =>  controllers.ProductController.addProduct()
2017-01-05 23:43:32,118 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteCycle            =>  controllers.ProductController.deleteCycle()
2017-01-05 23:43:32,118 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertCycle            =>  controllers.ProductController.addCycle()
2017-01-05 23:43:32,119 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product/getall                 =>  controllers.ProductController.getAllProduct()
2017-01-05 23:43:32,119 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getEpicLinks                   =>  controllers.EpicController.getEpicLinks()
2017-01-05 23:43:32,119 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getassignee                    =>  controllers.AssigneeController.getAssigneeList()
2017-01-05 23:43:32,120 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listcycle                      =>  controllers.AssigneeController.getListCycleName()
2017-01-05 23:43:32,120 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /cycleExisting                  =>  controllers.AssigneeController.getListExistingCycle()
2017-01-05 23:43:32,120 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listproject                    =>  controllers.MyGadgetController.getProjectList()
2017-01-05 23:43:32,120 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /.*                             =>  controllers.ApplicationController.index()
2017-01-05 23:43:32,121 INFO [Scanner-0] n.NinjaDefault [NinjaDefault.java:441] 
 _______  .___ _______        ____.  _____   
 \      \ |   |\      \      |    | /  _  \  
 /   |   \|   |/   |   \     |    |/  /_\  \ 
/    |    \   /    |    \/\__|    /    |    \  http://www.ninjaframework.org
\____|__  /___\____|__  /\________\____|__  /  @ninjaframework
     web\/framework   \/                  \/   5.8.0

2017-01-05 23:43:32,122 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:53] Starting Ninja application...
2017-01-05 23:43:32,125 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:86] Ninja application started in 3ms
2017-01-05 23:43:35,776 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:93] Stopping Ninja application...
2017-01-05 23:43:35,779 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:97] Ninja application stopped in 3ms
2017-01-05 23:43:38,485 INFO [Scanner-0] n.u.NinjaModeHelper [NinjaModeHelper.java:90] Ninja is running in mode dev
2017-01-05 23:43:38,539 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:245] Successfully configured Logback.
2017-01-05 23:43:38,542 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:165] Enabling Ninja classic configuration
2017-01-05 23:43:39,947 INFO [Scanner-0] n.u.SwissKnife [SwissKnife.java:77] Could not load file conf/messages_en.properties (not a bad thing necessarily, but I am returing null)
2017-01-05 23:43:39,947 INFO [Scanner-0] n.i.MessagesImpl [MessagesImpl.java:205] Did not find conf/messages_en.properties but it was specified in application.conf. Using default language instead.
2017-01-05 23:43:39,996 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:116] -------------------------------------------------------------------
2017-01-05 23:43:39,997 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:117] Registered response template engines
2017-01-05 23:43:39,997 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:118] -------------------------------------------------------------------
2017-01-05 23:43:39,997 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/javascript  =>  ninja.template.TemplateEngineJsonP
2017-01-05 23:43:39,997 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/json        =>  ninja.template.TemplateEngineJson
2017-01-05 23:43:39,998 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/xml         =>  ninja.template.TemplateEngineXml
2017-01-05 23:43:39,998 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/html               =>  ninja.template.TemplateEngineFreemarker
2017-01-05 23:43:39,998 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/plain              =>  ninja.template.TemplateEngineText
2017-01-05 23:43:40,043 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1184] Using default implementation for ThreadExecutor
2017-01-05 23:43:40,046 INFO [Scanner-0] o.q.s.SimpleThreadPool [SimpleThreadPool.java:268] Job execution threads will use class loader of thread: Scanner-0
2017-01-05 23:43:40,073 INFO [Scanner-0] o.q.c.SchedulerSignalerImpl [SchedulerSignalerImpl.java:61] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2017-01-05 23:43:40,074 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:240] Quartz Scheduler v.2.2.1 created.
2017-01-05 23:43:40,078 INFO [Scanner-0] o.q.s.RAMJobStore [RAMJobStore.java:155] RAMJobStore initialized.
2017-01-05 23:43:40,079 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:305] Scheduler meta-data: Quartz Scheduler (v2.2.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2017-01-05 23:43:40,079 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1339] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2017-01-05 23:43:40,079 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1343] Quartz scheduler version: 2.2.1
2017-01-05 23:43:40,096 INFO [Scanner-0] h.s.SchedulerManagement [SchedulerManagement.java:49] started clear cache job
2017-01-05 23:43:40,099 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:109] ----------------------------------------------------------------------------
2017-01-05 23:43:40,100 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:110] Registered request bodyparser engines
2017-01-05 23:43:40,100 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:111] ----------------------------------------------------------------------------
2017-01-05 23:43:40,100 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/json                   =>  ninja.bodyparser.BodyParserEngineJson
2017-01-05 23:43:40,101 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/x-www-form-urlencoded  =>  ninja.bodyparser.BodyParserEnginePost
2017-01-05 23:43:40,101 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/xml                    =>  ninja.bodyparser.BodyParserEngineXml
2017-01-05 23:43:40,102 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:105] Ninja injector started in 1554 ms.
2017-01-05 23:43:40,196 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:425] ------------------------------------------------------------------------------------------------------
2017-01-05 23:43:40,196 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:426] Registered routes
2017-01-05 23:43:40,196 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:427] ------------------------------------------------------------------------------------------------------
2017-01-05 23:43:40,197 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /login                          =>  controllers.LoginLogoutController.login()
2017-01-05 23:43:40,197 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /login                          =>  controllers.LoginLogoutController.loginPost()
2017-01-05 23:43:40,197 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /logout                         =>  controllers.LoginLogoutController.logout()
2017-01-05 23:43:40,198 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getUserInfo                    =>  controllers.ApplicationController.getUserInfo()
2017-01-05 23:43:40,198 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getProjectList                 =>  controllers.ApplicationController.getProjectList()
2017-01-05 23:43:40,198 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getGadgetList                  =>  controllers.GadgetController.getGadgetList()
2017-01-05 23:43:40,198 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /addNewGadget                   =>  controllers.GadgetController.addNewGadget()
2017-01-05 23:43:40,198 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateGadget                   =>  controllers.GadgetController.updateGadget()
2017-01-05 23:43:40,199 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /clearCacheGadget               =>  controllers.GadgetController.clearCacheGadget()
2017-01-05 23:43:40,199 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteGadget                   =>  controllers.GadgetController.deleteGadget()
2017-01-05 23:43:40,199 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /showSonarStatisticGadget       =>  controllers.GadgetController.showSonarStatisticGadget()
2017-01-05 23:43:40,199 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getIAComponents                =>  controllers.ApplicationController.getIAComponents()
2017-01-05 23:43:40,200 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getMetrics                     =>  controllers.ApplicationController.getMetricList()
2017-01-05 23:43:40,200 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getReleaseList                 =>  controllers.ApplicationController.getReleaseList()
2017-01-05 23:43:40,200 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getPeriodList                  =>  controllers.ApplicationController.getPeriodList()
2017-01-05 23:43:40,200 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getCruProjectList              =>  controllers.OverdueReviewReportController.getCruProjectList()
2017-01-05 23:43:40,200 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release                        =>  controllers.ConfigurationController.release()
2017-01-05 23:43:40,201 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release/ialist/{name}          =>  controllers.ConfigurationController.releaseURL()
2017-01-05 23:43:40,201 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release                        =>  controllers.ConfigurationController.releasePost()
2017-01-05 23:43:40,201 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/update                 =>  controllers.ConfigurationController.releaseUpdate()
2017-01-05 23:43:40,201 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/delete                 =>  controllers.ConfigurationController.releaseDelete()
2017-01-05 23:43:40,201 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /metric                         =>  controllers.ConfigurationController.metric()
2017-01-05 23:43:40,202 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric                         =>  controllers.ConfigurationController.metricPost()
2017-01-05 23:43:40,202 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/update                  =>  controllers.ConfigurationController.metricUpdate()
2017-01-05 23:43:40,202 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/delete                  =>  controllers.ConfigurationController.metricDelete()
2017-01-05 23:43:40,202 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /dashboard/new                  =>  controllers.DashboardController.new_dashboard()
2017-01-05 23:43:40,202 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /dashboard/new                  =>  controllers.DashboardController.new_dashboard_post()
2017-01-05 23:43:40,203 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteDashboard                =>  controllers.DashboardController.deleteDashboard()
2017-01-05 23:43:40,203 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardInfo               =>  controllers.DashboardController.getDashboardInfo()
2017-01-05 23:43:40,203 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardList               =>  controllers.DashboardController.getDashboardList()
2017-01-05 23:43:40,203 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateDashboardOption          =>  controllers.DashboardController.updateDashboardOption()
2017-01-05 23:43:40,204 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/webjars/{fileName: .*}  =>  ninja.AssetsController.serveWebJars()
2017-01-05 23:43:40,204 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/{fileName: .*}          =>  ninja.AssetsController.serveStatic()
2017-01-05 23:43:40,204 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getData                 =>  controllers.MyGadgetController.getDataGadget()
2017-01-05 23:43:40,205 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /gadget/save                    =>  controllers.MyGadgetController.insertOrUpdateGadget()
2017-01-05 23:43:40,205 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/gadgets                 =>  controllers.MyGadgetController.getGadgetsInDashboardId()
2017-01-05 23:43:40,205 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getStoryInEpic          =>  controllers.MyGadgetController.getStoryInEpic()
2017-01-05 23:43:40,205 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product                        =>  controllers.ProductController.productPage()
2017-01-05 23:43:40,205 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteProduct          =>  controllers.ProductController.deleteProduct()
2017-01-05 23:43:40,206 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertProduct          =>  controllers.ProductController.addProduct()
2017-01-05 23:43:40,206 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteCycle            =>  controllers.ProductController.deleteCycle()
2017-01-05 23:43:40,206 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertCycle            =>  controllers.ProductController.addCycle()
2017-01-05 23:43:40,206 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product/getall                 =>  controllers.ProductController.getAllProduct()
2017-01-05 23:43:40,207 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getEpicLinks                   =>  controllers.EpicController.getEpicLinks()
2017-01-05 23:43:40,207 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getassignee                    =>  controllers.AssigneeController.getAssigneeList()
2017-01-05 23:43:40,207 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listcycle                      =>  controllers.AssigneeController.getListCycleName()
2017-01-05 23:43:40,207 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /cycleExisting                  =>  controllers.AssigneeController.getListExistingCycle()
2017-01-05 23:43:40,207 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listproject                    =>  controllers.MyGadgetController.getProjectList()
2017-01-05 23:43:40,208 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /.*                             =>  controllers.ApplicationController.index()
2017-01-05 23:43:40,208 INFO [Scanner-0] n.NinjaDefault [NinjaDefault.java:441] 
 _______  .___ _______        ____.  _____   
 \      \ |   |\      \      |    | /  _  \  
 /   |   \|   |/   |   \     |    |/  /_\  \ 
/    |    \   /    |    \/\__|    /    |    \  http://www.ninjaframework.org
\____|__  /___\____|__  /\________\____|__  /  @ninjaframework
     web\/framework   \/                  \/   5.8.0

2017-01-05 23:43:40,209 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:53] Starting Ninja application...
2017-01-05 23:43:40,210 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:86] Ninja application started in 1ms
2017-01-05 23:43:44,317 INFO [qtp1186254299-15] o.m.d.cluster [SLF4JLogger.java:71] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2017-01-05 23:43:44,380 INFO [qtp1186254299-15] o.m.d.cluster [SLF4JLogger.java:71] No server chosen by ReadPreferenceServerSelector{readPreference=primary} from cluster description ClusterDescription{type=UNKNOWN, connectionMode=SINGLE, all=[ServerDescription{address=localhost:27017, type=UNKNOWN, state=CONNECTING}]}. Waiting for 30000 ms before timing out
2017-01-05 23:43:44,392 INFO [cluster-ClusterId{value='586e77c018e1821138d89f80', description='null'}-localhost:27017] o.m.d.connection [SLF4JLogger.java:71] Opened connection [connectionId{localValue:1, serverValue:65}] to localhost:27017
2017-01-05 23:43:44,393 INFO [cluster-ClusterId{value='586e77c018e1821138d89f80', description='null'}-localhost:27017] o.m.d.cluster [SLF4JLogger.java:71] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 1, 5]}, minWireVersion=0, maxWireVersion=4, maxDocumentSize=16777216, roundTripTimeNanos=749661}
2017-01-05 23:43:44,400 INFO [qtp1186254299-15] o.m.d.connection [SLF4JLogger.java:71] Opened connection [connectionId{localValue:2, serverValue:66}] to localhost:27017
2017-01-05 23:44:15,165 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:93] Stopping Ninja application...
2017-01-05 23:44:15,174 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:97] Ninja application stopped in 9ms
2017-01-05 23:44:17,505 INFO [Scanner-0] n.u.NinjaModeHelper [NinjaModeHelper.java:90] Ninja is running in mode dev
2017-01-05 23:44:17,548 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:245] Successfully configured Logback.
2017-01-05 23:44:17,551 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:165] Enabling Ninja classic configuration
2017-01-05 23:44:18,235 INFO [Scanner-0] n.u.SwissKnife [SwissKnife.java:77] Could not load file conf/messages_en.properties (not a bad thing necessarily, but I am returing null)
2017-01-05 23:44:18,235 INFO [Scanner-0] n.i.MessagesImpl [MessagesImpl.java:205] Did not find conf/messages_en.properties but it was specified in application.conf. Using default language instead.
2017-01-05 23:44:18,286 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:116] -------------------------------------------------------------------
2017-01-05 23:44:18,286 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:117] Registered response template engines
2017-01-05 23:44:18,286 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:118] -------------------------------------------------------------------
2017-01-05 23:44:18,286 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/javascript  =>  ninja.template.TemplateEngineJsonP
2017-01-05 23:44:18,286 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/json        =>  ninja.template.TemplateEngineJson
2017-01-05 23:44:18,286 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/xml         =>  ninja.template.TemplateEngineXml
2017-01-05 23:44:18,286 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/html               =>  ninja.template.TemplateEngineFreemarker
2017-01-05 23:44:18,287 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/plain              =>  ninja.template.TemplateEngineText
2017-01-05 23:44:18,336 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1184] Using default implementation for ThreadExecutor
2017-01-05 23:44:18,343 INFO [Scanner-0] o.q.s.SimpleThreadPool [SimpleThreadPool.java:268] Job execution threads will use class loader of thread: Scanner-0
2017-01-05 23:44:18,394 INFO [Scanner-0] o.q.c.SchedulerSignalerImpl [SchedulerSignalerImpl.java:61] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2017-01-05 23:44:18,396 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:240] Quartz Scheduler v.2.2.1 created.
2017-01-05 23:44:18,398 INFO [Scanner-0] o.q.s.RAMJobStore [RAMJobStore.java:155] RAMJobStore initialized.
2017-01-05 23:44:18,402 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:305] Scheduler meta-data: Quartz Scheduler (v2.2.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2017-01-05 23:44:18,402 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1339] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2017-01-05 23:44:18,403 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1343] Quartz scheduler version: 2.2.1
2017-01-05 23:44:18,416 INFO [Scanner-0] h.s.SchedulerManagement [SchedulerManagement.java:49] started clear cache job
2017-01-05 23:44:18,417 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:109] ----------------------------------------------------------------------------
2017-01-05 23:44:18,417 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:110] Registered request bodyparser engines
2017-01-05 23:44:18,418 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:111] ----------------------------------------------------------------------------
2017-01-05 23:44:18,418 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/json                   =>  ninja.bodyparser.BodyParserEngineJson
2017-01-05 23:44:18,419 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/x-www-form-urlencoded  =>  ninja.bodyparser.BodyParserEnginePost
2017-01-05 23:44:18,420 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/xml                    =>  ninja.bodyparser.BodyParserEngineXml
2017-01-05 23:44:18,424 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:105] Ninja injector started in 867 ms.
2017-01-05 23:44:18,550 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:425] ------------------------------------------------------------------------------------------------------
2017-01-05 23:44:18,551 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:426] Registered routes
2017-01-05 23:44:18,551 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:427] ------------------------------------------------------------------------------------------------------
2017-01-05 23:44:18,552 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /login                          =>  controllers.LoginLogoutController.login()
2017-01-05 23:44:18,552 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /login                          =>  controllers.LoginLogoutController.loginPost()
2017-01-05 23:44:18,552 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /logout                         =>  controllers.LoginLogoutController.logout()
2017-01-05 23:44:18,552 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getUserInfo                    =>  controllers.ApplicationController.getUserInfo()
2017-01-05 23:44:18,552 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getProjectList                 =>  controllers.ApplicationController.getProjectList()
2017-01-05 23:44:18,553 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getGadgetList                  =>  controllers.GadgetController.getGadgetList()
2017-01-05 23:44:18,553 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /addNewGadget                   =>  controllers.GadgetController.addNewGadget()
2017-01-05 23:44:18,553 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateGadget                   =>  controllers.GadgetController.updateGadget()
2017-01-05 23:44:18,553 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /clearCacheGadget               =>  controllers.GadgetController.clearCacheGadget()
2017-01-05 23:44:18,553 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteGadget                   =>  controllers.GadgetController.deleteGadget()
2017-01-05 23:44:18,554 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /showSonarStatisticGadget       =>  controllers.GadgetController.showSonarStatisticGadget()
2017-01-05 23:44:18,554 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getIAComponents                =>  controllers.ApplicationController.getIAComponents()
2017-01-05 23:44:18,554 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getMetrics                     =>  controllers.ApplicationController.getMetricList()
2017-01-05 23:44:18,554 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getReleaseList                 =>  controllers.ApplicationController.getReleaseList()
2017-01-05 23:44:18,554 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getPeriodList                  =>  controllers.ApplicationController.getPeriodList()
2017-01-05 23:44:18,555 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getCruProjectList              =>  controllers.OverdueReviewReportController.getCruProjectList()
2017-01-05 23:44:18,555 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release                        =>  controllers.ConfigurationController.release()
2017-01-05 23:44:18,555 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release/ialist/{name}          =>  controllers.ConfigurationController.releaseURL()
2017-01-05 23:44:18,555 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release                        =>  controllers.ConfigurationController.releasePost()
2017-01-05 23:44:18,556 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/update                 =>  controllers.ConfigurationController.releaseUpdate()
2017-01-05 23:44:18,556 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/delete                 =>  controllers.ConfigurationController.releaseDelete()
2017-01-05 23:44:18,556 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /metric                         =>  controllers.ConfigurationController.metric()
2017-01-05 23:44:18,557 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric                         =>  controllers.ConfigurationController.metricPost()
2017-01-05 23:44:18,557 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/update                  =>  controllers.ConfigurationController.metricUpdate()
2017-01-05 23:44:18,557 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/delete                  =>  controllers.ConfigurationController.metricDelete()
2017-01-05 23:44:18,557 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /dashboard/new                  =>  controllers.DashboardController.new_dashboard()
2017-01-05 23:44:18,557 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /dashboard/new                  =>  controllers.DashboardController.new_dashboard_post()
2017-01-05 23:44:18,558 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteDashboard                =>  controllers.DashboardController.deleteDashboard()
2017-01-05 23:44:18,558 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardInfo               =>  controllers.DashboardController.getDashboardInfo()
2017-01-05 23:44:18,558 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardList               =>  controllers.DashboardController.getDashboardList()
2017-01-05 23:44:18,559 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateDashboardOption          =>  controllers.DashboardController.updateDashboardOption()
2017-01-05 23:44:18,559 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/webjars/{fileName: .*}  =>  ninja.AssetsController.serveWebJars()
2017-01-05 23:44:18,559 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/{fileName: .*}          =>  ninja.AssetsController.serveStatic()
2017-01-05 23:44:18,560 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getData                 =>  controllers.MyGadgetController.getDataGadget()
2017-01-05 23:44:18,560 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /gadget/save                    =>  controllers.MyGadgetController.insertOrUpdateGadget()
2017-01-05 23:44:18,560 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/gadgets                 =>  controllers.MyGadgetController.getGadgetsInDashboardId()
2017-01-05 23:44:18,561 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getStoryInEpic          =>  controllers.MyGadgetController.getStoryInEpic()
2017-01-05 23:44:18,561 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product                        =>  controllers.ProductController.productPage()
2017-01-05 23:44:18,561 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteProduct          =>  controllers.ProductController.deleteProduct()
2017-01-05 23:44:18,562 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertProduct          =>  controllers.ProductController.addProduct()
2017-01-05 23:44:18,562 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteCycle            =>  controllers.ProductController.deleteCycle()
2017-01-05 23:44:18,562 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertCycle            =>  controllers.ProductController.addCycle()
2017-01-05 23:44:18,562 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product/getall                 =>  controllers.ProductController.getAllProduct()
2017-01-05 23:44:18,563 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getEpicLinks                   =>  controllers.EpicController.getEpicLinks()
2017-01-05 23:44:18,563 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getassignee                    =>  controllers.AssigneeController.getAssigneeList()
2017-01-05 23:44:18,563 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listcycle                      =>  controllers.AssigneeController.getListCycleName()
2017-01-05 23:44:18,563 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /cycleExisting                  =>  controllers.AssigneeController.getListExistingCycle()
2017-01-05 23:44:18,563 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listproject                    =>  controllers.MyGadgetController.getProjectList()
2017-01-05 23:44:18,564 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /.*                             =>  controllers.ApplicationController.index()
2017-01-05 23:44:18,564 INFO [Scanner-0] n.NinjaDefault [NinjaDefault.java:441] 
 _______  .___ _______        ____.  _____   
 \      \ |   |\      \      |    | /  _  \  
 /   |   \|   |/   |   \     |    |/  /_\  \ 
/    |    \   /    |    \/\__|    /    |    \  http://www.ninjaframework.org
\____|__  /___\____|__  /\________\____|__  /  @ninjaframework
     web\/framework   \/                  \/   5.8.0

2017-01-05 23:44:18,565 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:53] Starting Ninja application...
2017-01-05 23:44:18,567 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:86] Ninja application started in 2ms
2017-01-05 23:44:20,357 INFO [qtp1186254299-65] o.m.d.cluster [SLF4JLogger.java:71] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2017-01-05 23:44:20,419 INFO [qtp1186254299-65] o.m.d.cluster [SLF4JLogger.java:71] No server chosen by ReadPreferenceServerSelector{readPreference=primary} from cluster description ClusterDescription{type=UNKNOWN, connectionMode=SINGLE, all=[ServerDescription{address=localhost:27017, type=UNKNOWN, state=CONNECTING}]}. Waiting for 30000 ms before timing out
2017-01-05 23:44:20,432 INFO [cluster-ClusterId{value='586e77e418e1821138a881d3', description='null'}-localhost:27017] o.m.d.connection [SLF4JLogger.java:71] Opened connection [connectionId{localValue:1, serverValue:67}] to localhost:27017
2017-01-05 23:44:20,434 INFO [cluster-ClusterId{value='586e77e418e1821138a881d3', description='null'}-localhost:27017] o.m.d.cluster [SLF4JLogger.java:71] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 1, 5]}, minWireVersion=0, maxWireVersion=4, maxDocumentSize=16777216, roundTripTimeNanos=1015612}
2017-01-05 23:44:20,440 INFO [qtp1186254299-65] o.m.d.connection [SLF4JLogger.java:71] Opened connection [connectionId{localValue:2, serverValue:68}] to localhost:27017
2017-01-05 23:46:32,593 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:93] Stopping Ninja application...
2017-01-05 23:46:32,600 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:97] Ninja application stopped in 7ms
2017-01-05 23:46:34,997 INFO [Scanner-0] n.u.NinjaModeHelper [NinjaModeHelper.java:90] Ninja is running in mode dev
2017-01-05 23:46:35,041 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:245] Successfully configured Logback.
2017-01-05 23:46:35,044 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:165] Enabling Ninja classic configuration
2017-01-05 23:46:35,773 INFO [Scanner-0] n.u.SwissKnife [SwissKnife.java:77] Could not load file conf/messages_en.properties (not a bad thing necessarily, but I am returing null)
2017-01-05 23:46:35,773 INFO [Scanner-0] n.i.MessagesImpl [MessagesImpl.java:205] Did not find conf/messages_en.properties but it was specified in application.conf. Using default language instead.
2017-01-05 23:46:35,834 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:116] -------------------------------------------------------------------
2017-01-05 23:46:35,835 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:117] Registered response template engines
2017-01-05 23:46:35,835 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:118] -------------------------------------------------------------------
2017-01-05 23:46:35,835 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/javascript  =>  ninja.template.TemplateEngineJsonP
2017-01-05 23:46:35,836 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/json        =>  ninja.template.TemplateEngineJson
2017-01-05 23:46:35,836 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/xml         =>  ninja.template.TemplateEngineXml
2017-01-05 23:46:35,836 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/html               =>  ninja.template.TemplateEngineFreemarker
2017-01-05 23:46:35,836 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/plain              =>  ninja.template.TemplateEngineText
2017-01-05 23:46:35,878 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1184] Using default implementation for ThreadExecutor
2017-01-05 23:46:35,882 INFO [Scanner-0] o.q.s.SimpleThreadPool [SimpleThreadPool.java:268] Job execution threads will use class loader of thread: Scanner-0
2017-01-05 23:46:35,914 INFO [Scanner-0] o.q.c.SchedulerSignalerImpl [SchedulerSignalerImpl.java:61] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2017-01-05 23:46:35,915 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:240] Quartz Scheduler v.2.2.1 created.
2017-01-05 23:46:35,917 INFO [Scanner-0] o.q.s.RAMJobStore [RAMJobStore.java:155] RAMJobStore initialized.
2017-01-05 23:46:35,919 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:305] Scheduler meta-data: Quartz Scheduler (v2.2.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2017-01-05 23:46:35,919 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1339] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2017-01-05 23:46:35,920 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1343] Quartz scheduler version: 2.2.1
2017-01-05 23:46:35,930 INFO [Scanner-0] h.s.SchedulerManagement [SchedulerManagement.java:49] started clear cache job
2017-01-05 23:46:35,932 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:109] ----------------------------------------------------------------------------
2017-01-05 23:46:35,933 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:110] Registered request bodyparser engines
2017-01-05 23:46:35,933 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:111] ----------------------------------------------------------------------------
2017-01-05 23:46:35,934 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/json                   =>  ninja.bodyparser.BodyParserEngineJson
2017-01-05 23:46:35,934 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/x-www-form-urlencoded  =>  ninja.bodyparser.BodyParserEnginePost
2017-01-05 23:46:35,934 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/xml                    =>  ninja.bodyparser.BodyParserEngineXml
2017-01-05 23:46:35,935 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:105] Ninja injector started in 886 ms.
2017-01-05 23:46:36,044 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:425] ------------------------------------------------------------------------------------------------------
2017-01-05 23:46:36,045 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:426] Registered routes
2017-01-05 23:46:36,045 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:427] ------------------------------------------------------------------------------------------------------
2017-01-05 23:46:36,046 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /login                          =>  controllers.LoginLogoutController.login()
2017-01-05 23:46:36,047 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /login                          =>  controllers.LoginLogoutController.loginPost()
2017-01-05 23:46:36,048 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /logout                         =>  controllers.LoginLogoutController.logout()
2017-01-05 23:46:36,049 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getUserInfo                    =>  controllers.ApplicationController.getUserInfo()
2017-01-05 23:46:36,049 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getProjectList                 =>  controllers.ApplicationController.getProjectList()
2017-01-05 23:46:36,050 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getGadgetList                  =>  controllers.GadgetController.getGadgetList()
2017-01-05 23:46:36,050 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /addNewGadget                   =>  controllers.GadgetController.addNewGadget()
2017-01-05 23:46:36,050 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateGadget                   =>  controllers.GadgetController.updateGadget()
2017-01-05 23:46:36,051 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /clearCacheGadget               =>  controllers.GadgetController.clearCacheGadget()
2017-01-05 23:46:36,051 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteGadget                   =>  controllers.GadgetController.deleteGadget()
2017-01-05 23:46:36,051 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /showSonarStatisticGadget       =>  controllers.GadgetController.showSonarStatisticGadget()
2017-01-05 23:46:36,052 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getIAComponents                =>  controllers.ApplicationController.getIAComponents()
2017-01-05 23:46:36,052 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getMetrics                     =>  controllers.ApplicationController.getMetricList()
2017-01-05 23:46:36,052 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getReleaseList                 =>  controllers.ApplicationController.getReleaseList()
2017-01-05 23:46:36,052 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getPeriodList                  =>  controllers.ApplicationController.getPeriodList()
2017-01-05 23:46:36,053 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getCruProjectList              =>  controllers.OverdueReviewReportController.getCruProjectList()
2017-01-05 23:46:36,053 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release                        =>  controllers.ConfigurationController.release()
2017-01-05 23:46:36,053 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release/ialist/{name}          =>  controllers.ConfigurationController.releaseURL()
2017-01-05 23:46:36,054 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release                        =>  controllers.ConfigurationController.releasePost()
2017-01-05 23:46:36,054 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/update                 =>  controllers.ConfigurationController.releaseUpdate()
2017-01-05 23:46:36,054 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/delete                 =>  controllers.ConfigurationController.releaseDelete()
2017-01-05 23:46:36,055 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /metric                         =>  controllers.ConfigurationController.metric()
2017-01-05 23:46:36,055 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric                         =>  controllers.ConfigurationController.metricPost()
2017-01-05 23:46:36,055 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/update                  =>  controllers.ConfigurationController.metricUpdate()
2017-01-05 23:46:36,056 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/delete                  =>  controllers.ConfigurationController.metricDelete()
2017-01-05 23:46:36,056 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /dashboard/new                  =>  controllers.DashboardController.new_dashboard()
2017-01-05 23:46:36,056 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /dashboard/new                  =>  controllers.DashboardController.new_dashboard_post()
2017-01-05 23:46:36,057 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteDashboard                =>  controllers.DashboardController.deleteDashboard()
2017-01-05 23:46:36,057 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardInfo               =>  controllers.DashboardController.getDashboardInfo()
2017-01-05 23:46:36,057 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardList               =>  controllers.DashboardController.getDashboardList()
2017-01-05 23:46:36,058 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateDashboardOption          =>  controllers.DashboardController.updateDashboardOption()
2017-01-05 23:46:36,058 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/webjars/{fileName: .*}  =>  ninja.AssetsController.serveWebJars()
2017-01-05 23:46:36,059 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/{fileName: .*}          =>  ninja.AssetsController.serveStatic()
2017-01-05 23:46:36,059 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getData                 =>  controllers.MyGadgetController.getDataGadget()
2017-01-05 23:46:36,060 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /gadget/save                    =>  controllers.MyGadgetController.insertOrUpdateGadget()
2017-01-05 23:46:36,060 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/gadgets                 =>  controllers.MyGadgetController.getGadgetsInDashboardId()
2017-01-05 23:46:36,061 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getStoryInEpic          =>  controllers.MyGadgetController.getStoryInEpic()
2017-01-05 23:46:36,062 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product                        =>  controllers.ProductController.productPage()
2017-01-05 23:46:36,063 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteProduct          =>  controllers.ProductController.deleteProduct()
2017-01-05 23:46:36,063 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertProduct          =>  controllers.ProductController.addProduct()
2017-01-05 23:46:36,065 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteCycle            =>  controllers.ProductController.deleteCycle()
2017-01-05 23:46:36,066 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertCycle            =>  controllers.ProductController.addCycle()
2017-01-05 23:46:36,066 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product/getall                 =>  controllers.ProductController.getAllProduct()
2017-01-05 23:46:36,067 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getEpicLinks                   =>  controllers.EpicController.getEpicLinks()
2017-01-05 23:46:36,068 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getassignee                    =>  controllers.AssigneeController.getAssigneeList()
2017-01-05 23:46:36,068 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listcycle                      =>  controllers.AssigneeController.getListCycleName()
2017-01-05 23:46:36,068 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /cycleExisting                  =>  controllers.AssigneeController.getListExistingCycle()
2017-01-05 23:46:36,069 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listproject                    =>  controllers.MyGadgetController.getProjectList()
2017-01-05 23:46:36,069 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /.*                             =>  controllers.ApplicationController.index()
2017-01-05 23:46:36,070 INFO [Scanner-0] n.NinjaDefault [NinjaDefault.java:441] 
 _______  .___ _______        ____.  _____   
 \      \ |   |\      \      |    | /  _  \  
 /   |   \|   |/   |   \     |    |/  /_\  \ 
/    |    \   /    |    \/\__|    /    |    \  http://www.ninjaframework.org
\____|__  /___\____|__  /\________\____|__  /  @ninjaframework
     web\/framework   \/                  \/   5.8.0

2017-01-05 23:46:36,071 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:53] Starting Ninja application...
2017-01-05 23:46:36,074 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:86] Ninja application started in 3ms
2017-01-05 23:46:38,743 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:93] Stopping Ninja application...
2017-01-05 23:46:38,750 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:97] Ninja application stopped in 7ms
2017-01-05 23:46:41,359 INFO [Scanner-0] n.u.NinjaModeHelper [NinjaModeHelper.java:90] Ninja is running in mode dev
2017-01-05 23:46:41,407 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:245] Successfully configured Logback.
2017-01-05 23:46:41,409 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:165] Enabling Ninja classic configuration
2017-01-05 23:46:42,152 INFO [Scanner-0] n.u.SwissKnife [SwissKnife.java:77] Could not load file conf/messages_en.properties (not a bad thing necessarily, but I am returing null)
2017-01-05 23:46:42,152 INFO [Scanner-0] n.i.MessagesImpl [MessagesImpl.java:205] Did not find conf/messages_en.properties but it was specified in application.conf. Using default language instead.
2017-01-05 23:46:42,222 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:116] -------------------------------------------------------------------
2017-01-05 23:46:42,222 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:117] Registered response template engines
2017-01-05 23:46:42,222 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:118] -------------------------------------------------------------------
2017-01-05 23:46:42,222 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/javascript  =>  ninja.template.TemplateEngineJsonP
2017-01-05 23:46:42,222 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/json        =>  ninja.template.TemplateEngineJson
2017-01-05 23:46:42,222 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/xml         =>  ninja.template.TemplateEngineXml
2017-01-05 23:46:42,223 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/html               =>  ninja.template.TemplateEngineFreemarker
2017-01-05 23:46:42,223 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/plain              =>  ninja.template.TemplateEngineText
2017-01-05 23:46:42,292 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1184] Using default implementation for ThreadExecutor
2017-01-05 23:46:42,299 INFO [Scanner-0] o.q.s.SimpleThreadPool [SimpleThreadPool.java:268] Job execution threads will use class loader of thread: Scanner-0
2017-01-05 23:46:42,407 INFO [Scanner-0] o.q.c.SchedulerSignalerImpl [SchedulerSignalerImpl.java:61] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2017-01-05 23:46:42,408 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:240] Quartz Scheduler v.2.2.1 created.
2017-01-05 23:46:42,417 INFO [Scanner-0] o.q.s.RAMJobStore [RAMJobStore.java:155] RAMJobStore initialized.
2017-01-05 23:46:42,419 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:305] Scheduler meta-data: Quartz Scheduler (v2.2.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2017-01-05 23:46:42,423 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1339] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2017-01-05 23:46:42,424 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1343] Quartz scheduler version: 2.2.1
2017-01-05 23:46:42,452 INFO [Scanner-0] h.s.SchedulerManagement [SchedulerManagement.java:49] started clear cache job
2017-01-05 23:46:42,457 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:109] ----------------------------------------------------------------------------
2017-01-05 23:46:42,458 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:110] Registered request bodyparser engines
2017-01-05 23:46:42,458 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:111] ----------------------------------------------------------------------------
2017-01-05 23:46:42,458 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/json                   =>  ninja.bodyparser.BodyParserEngineJson
2017-01-05 23:46:42,459 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/x-www-form-urlencoded  =>  ninja.bodyparser.BodyParserEnginePost
2017-01-05 23:46:42,459 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/xml                    =>  ninja.bodyparser.BodyParserEngineXml
2017-01-05 23:46:42,461 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:105] Ninja injector started in 1048 ms.
2017-01-05 23:46:42,655 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:425] ------------------------------------------------------------------------------------------------------
2017-01-05 23:46:42,655 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:426] Registered routes
2017-01-05 23:46:42,656 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:427] ------------------------------------------------------------------------------------------------------
2017-01-05 23:46:42,656 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /login                          =>  controllers.LoginLogoutController.login()
2017-01-05 23:46:42,656 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /login                          =>  controllers.LoginLogoutController.loginPost()
2017-01-05 23:46:42,656 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /logout                         =>  controllers.LoginLogoutController.logout()
2017-01-05 23:46:42,656 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getUserInfo                    =>  controllers.ApplicationController.getUserInfo()
2017-01-05 23:46:42,657 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getProjectList                 =>  controllers.ApplicationController.getProjectList()
2017-01-05 23:46:42,657 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getGadgetList                  =>  controllers.GadgetController.getGadgetList()
2017-01-05 23:46:42,657 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /addNewGadget                   =>  controllers.GadgetController.addNewGadget()
2017-01-05 23:46:42,657 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateGadget                   =>  controllers.GadgetController.updateGadget()
2017-01-05 23:46:42,657 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /clearCacheGadget               =>  controllers.GadgetController.clearCacheGadget()
2017-01-05 23:46:42,657 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteGadget                   =>  controllers.GadgetController.deleteGadget()
2017-01-05 23:46:42,657 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /showSonarStatisticGadget       =>  controllers.GadgetController.showSonarStatisticGadget()
2017-01-05 23:46:42,658 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getIAComponents                =>  controllers.ApplicationController.getIAComponents()
2017-01-05 23:46:42,658 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getMetrics                     =>  controllers.ApplicationController.getMetricList()
2017-01-05 23:46:42,658 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getReleaseList                 =>  controllers.ApplicationController.getReleaseList()
2017-01-05 23:46:42,658 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getPeriodList                  =>  controllers.ApplicationController.getPeriodList()
2017-01-05 23:46:42,658 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getCruProjectList              =>  controllers.OverdueReviewReportController.getCruProjectList()
2017-01-05 23:46:42,658 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release                        =>  controllers.ConfigurationController.release()
2017-01-05 23:46:42,658 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release/ialist/{name}          =>  controllers.ConfigurationController.releaseURL()
2017-01-05 23:46:42,658 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release                        =>  controllers.ConfigurationController.releasePost()
2017-01-05 23:46:42,658 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/update                 =>  controllers.ConfigurationController.releaseUpdate()
2017-01-05 23:46:42,658 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/delete                 =>  controllers.ConfigurationController.releaseDelete()
2017-01-05 23:46:42,658 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /metric                         =>  controllers.ConfigurationController.metric()
2017-01-05 23:46:42,659 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric                         =>  controllers.ConfigurationController.metricPost()
2017-01-05 23:46:42,659 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/update                  =>  controllers.ConfigurationController.metricUpdate()
2017-01-05 23:46:42,659 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/delete                  =>  controllers.ConfigurationController.metricDelete()
2017-01-05 23:46:42,659 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /dashboard/new                  =>  controllers.DashboardController.new_dashboard()
2017-01-05 23:46:42,659 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /dashboard/new                  =>  controllers.DashboardController.new_dashboard_post()
2017-01-05 23:46:42,659 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteDashboard                =>  controllers.DashboardController.deleteDashboard()
2017-01-05 23:46:42,659 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardInfo               =>  controllers.DashboardController.getDashboardInfo()
2017-01-05 23:46:42,660 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardList               =>  controllers.DashboardController.getDashboardList()
2017-01-05 23:46:42,660 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateDashboardOption          =>  controllers.DashboardController.updateDashboardOption()
2017-01-05 23:46:42,660 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/webjars/{fileName: .*}  =>  ninja.AssetsController.serveWebJars()
2017-01-05 23:46:42,661 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/{fileName: .*}          =>  ninja.AssetsController.serveStatic()
2017-01-05 23:46:42,661 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getData                 =>  controllers.MyGadgetController.getDataGadget()
2017-01-05 23:46:42,662 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /gadget/save                    =>  controllers.MyGadgetController.insertOrUpdateGadget()
2017-01-05 23:46:42,662 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/gadgets                 =>  controllers.MyGadgetController.getGadgetsInDashboardId()
2017-01-05 23:46:42,662 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getStoryInEpic          =>  controllers.MyGadgetController.getStoryInEpic()
2017-01-05 23:46:42,662 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product                        =>  controllers.ProductController.productPage()
2017-01-05 23:46:42,663 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteProduct          =>  controllers.ProductController.deleteProduct()
2017-01-05 23:46:42,663 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertProduct          =>  controllers.ProductController.addProduct()
2017-01-05 23:46:42,663 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteCycle            =>  controllers.ProductController.deleteCycle()
2017-01-05 23:46:42,665 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertCycle            =>  controllers.ProductController.addCycle()
2017-01-05 23:46:42,666 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product/getall                 =>  controllers.ProductController.getAllProduct()
2017-01-05 23:46:42,666 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getEpicLinks                   =>  controllers.EpicController.getEpicLinks()
2017-01-05 23:46:42,666 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getassignee                    =>  controllers.AssigneeController.getAssigneeList()
2017-01-05 23:46:42,666 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listcycle                      =>  controllers.AssigneeController.getListCycleName()
2017-01-05 23:46:42,666 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /cycleExisting                  =>  controllers.AssigneeController.getListExistingCycle()
2017-01-05 23:46:42,667 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listproject                    =>  controllers.MyGadgetController.getProjectList()
2017-01-05 23:46:42,667 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /.*                             =>  controllers.ApplicationController.index()
2017-01-05 23:46:42,668 INFO [Scanner-0] n.NinjaDefault [NinjaDefault.java:441] 
 _______  .___ _______        ____.  _____   
 \      \ |   |\      \      |    | /  _  \  
 /   |   \|   |/   |   \     |    |/  /_\  \ 
/    |    \   /    |    \/\__|    /    |    \  http://www.ninjaframework.org
\____|__  /___\____|__  /\________\____|__  /  @ninjaframework
     web\/framework   \/                  \/   5.8.0

2017-01-05 23:46:42,668 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:53] Starting Ninja application...
2017-01-05 23:46:42,671 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:86] Ninja application started in 3ms
2017-01-05 23:47:05,539 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:93] Stopping Ninja application...
2017-01-05 23:47:05,546 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:97] Ninja application stopped in 7ms
2017-01-05 23:47:08,457 INFO [Scanner-0] n.u.NinjaModeHelper [NinjaModeHelper.java:90] Ninja is running in mode dev
2017-01-05 23:47:08,500 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:245] Successfully configured Logback.
2017-01-05 23:47:08,502 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:165] Enabling Ninja classic configuration
2017-01-05 23:47:09,455 INFO [Scanner-0] n.u.SwissKnife [SwissKnife.java:77] Could not load file conf/messages_en.properties (not a bad thing necessarily, but I am returing null)
2017-01-05 23:47:09,456 INFO [Scanner-0] n.i.MessagesImpl [MessagesImpl.java:205] Did not find conf/messages_en.properties but it was specified in application.conf. Using default language instead.
2017-01-05 23:47:09,528 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:116] -------------------------------------------------------------------
2017-01-05 23:47:09,528 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:117] Registered response template engines
2017-01-05 23:47:09,528 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:118] -------------------------------------------------------------------
2017-01-05 23:47:09,528 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/javascript  =>  ninja.template.TemplateEngineJsonP
2017-01-05 23:47:09,529 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/json        =>  ninja.template.TemplateEngineJson
2017-01-05 23:47:09,529 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/xml         =>  ninja.template.TemplateEngineXml
2017-01-05 23:47:09,529 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/html               =>  ninja.template.TemplateEngineFreemarker
2017-01-05 23:47:09,529 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/plain              =>  ninja.template.TemplateEngineText
2017-01-05 23:47:09,574 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1184] Using default implementation for ThreadExecutor
2017-01-05 23:47:09,578 INFO [Scanner-0] o.q.s.SimpleThreadPool [SimpleThreadPool.java:268] Job execution threads will use class loader of thread: Scanner-0
2017-01-05 23:47:09,612 INFO [Scanner-0] o.q.c.SchedulerSignalerImpl [SchedulerSignalerImpl.java:61] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2017-01-05 23:47:09,614 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:240] Quartz Scheduler v.2.2.1 created.
2017-01-05 23:47:09,615 INFO [Scanner-0] o.q.s.RAMJobStore [RAMJobStore.java:155] RAMJobStore initialized.
2017-01-05 23:47:09,616 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:305] Scheduler meta-data: Quartz Scheduler (v2.2.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2017-01-05 23:47:09,617 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1339] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2017-01-05 23:47:09,617 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1343] Quartz scheduler version: 2.2.1
2017-01-05 23:47:09,635 INFO [Scanner-0] h.s.SchedulerManagement [SchedulerManagement.java:49] started clear cache job
2017-01-05 23:47:09,639 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:109] ----------------------------------------------------------------------------
2017-01-05 23:47:09,644 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:110] Registered request bodyparser engines
2017-01-05 23:47:09,655 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:111] ----------------------------------------------------------------------------
2017-01-05 23:47:09,656 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/json                   =>  ninja.bodyparser.BodyParserEngineJson
2017-01-05 23:47:09,657 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/x-www-form-urlencoded  =>  ninja.bodyparser.BodyParserEnginePost
2017-01-05 23:47:09,657 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/xml                    =>  ninja.bodyparser.BodyParserEngineXml
2017-01-05 23:47:09,659 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:105] Ninja injector started in 1152 ms.
2017-01-05 23:47:09,800 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:425] ------------------------------------------------------------------------------------------------------
2017-01-05 23:47:09,801 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:426] Registered routes
2017-01-05 23:47:09,801 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:427] ------------------------------------------------------------------------------------------------------
2017-01-05 23:47:09,801 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /login                          =>  controllers.LoginLogoutController.login()
2017-01-05 23:47:09,801 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /login                          =>  controllers.LoginLogoutController.loginPost()
2017-01-05 23:47:09,801 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /logout                         =>  controllers.LoginLogoutController.logout()
2017-01-05 23:47:09,802 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getUserInfo                    =>  controllers.ApplicationController.getUserInfo()
2017-01-05 23:47:09,802 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getProjectList                 =>  controllers.ApplicationController.getProjectList()
2017-01-05 23:47:09,802 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getGadgetList                  =>  controllers.GadgetController.getGadgetList()
2017-01-05 23:47:09,802 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /addNewGadget                   =>  controllers.GadgetController.addNewGadget()
2017-01-05 23:47:09,802 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateGadget                   =>  controllers.GadgetController.updateGadget()
2017-01-05 23:47:09,802 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /clearCacheGadget               =>  controllers.GadgetController.clearCacheGadget()
2017-01-05 23:47:09,802 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteGadget                   =>  controllers.GadgetController.deleteGadget()
2017-01-05 23:47:09,803 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /showSonarStatisticGadget       =>  controllers.GadgetController.showSonarStatisticGadget()
2017-01-05 23:47:09,803 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getIAComponents                =>  controllers.ApplicationController.getIAComponents()
2017-01-05 23:47:09,803 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getMetrics                     =>  controllers.ApplicationController.getMetricList()
2017-01-05 23:47:09,803 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getReleaseList                 =>  controllers.ApplicationController.getReleaseList()
2017-01-05 23:47:09,803 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getPeriodList                  =>  controllers.ApplicationController.getPeriodList()
2017-01-05 23:47:09,803 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getCruProjectList              =>  controllers.OverdueReviewReportController.getCruProjectList()
2017-01-05 23:47:09,803 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release                        =>  controllers.ConfigurationController.release()
2017-01-05 23:47:09,804 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release/ialist/{name}          =>  controllers.ConfigurationController.releaseURL()
2017-01-05 23:47:09,804 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release                        =>  controllers.ConfigurationController.releasePost()
2017-01-05 23:47:09,804 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/update                 =>  controllers.ConfigurationController.releaseUpdate()
2017-01-05 23:47:09,804 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/delete                 =>  controllers.ConfigurationController.releaseDelete()
2017-01-05 23:47:09,804 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /metric                         =>  controllers.ConfigurationController.metric()
2017-01-05 23:47:09,804 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric                         =>  controllers.ConfigurationController.metricPost()
2017-01-05 23:47:09,804 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/update                  =>  controllers.ConfigurationController.metricUpdate()
2017-01-05 23:47:09,807 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/delete                  =>  controllers.ConfigurationController.metricDelete()
2017-01-05 23:47:09,815 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /dashboard/new                  =>  controllers.DashboardController.new_dashboard()
2017-01-05 23:47:09,815 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /dashboard/new                  =>  controllers.DashboardController.new_dashboard_post()
2017-01-05 23:47:09,816 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteDashboard                =>  controllers.DashboardController.deleteDashboard()
2017-01-05 23:47:09,816 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardInfo               =>  controllers.DashboardController.getDashboardInfo()
2017-01-05 23:47:09,817 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardList               =>  controllers.DashboardController.getDashboardList()
2017-01-05 23:47:09,818 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateDashboardOption          =>  controllers.DashboardController.updateDashboardOption()
2017-01-05 23:47:09,818 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/webjars/{fileName: .*}  =>  ninja.AssetsController.serveWebJars()
2017-01-05 23:47:09,819 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/{fileName: .*}          =>  ninja.AssetsController.serveStatic()
2017-01-05 23:47:09,820 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getData                 =>  controllers.MyGadgetController.getDataGadget()
2017-01-05 23:47:09,820 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /gadget/save                    =>  controllers.MyGadgetController.insertOrUpdateGadget()
2017-01-05 23:47:09,822 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/gadgets                 =>  controllers.MyGadgetController.getGadgetsInDashboardId()
2017-01-05 23:47:09,823 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getStoryInEpic          =>  controllers.MyGadgetController.getStoryInEpic()
2017-01-05 23:47:09,823 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product                        =>  controllers.ProductController.productPage()
2017-01-05 23:47:09,824 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteProduct          =>  controllers.ProductController.deleteProduct()
2017-01-05 23:47:09,825 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertProduct          =>  controllers.ProductController.addProduct()
2017-01-05 23:47:09,825 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteCycle            =>  controllers.ProductController.deleteCycle()
2017-01-05 23:47:09,825 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertCycle            =>  controllers.ProductController.addCycle()
2017-01-05 23:47:09,827 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product/getall                 =>  controllers.ProductController.getAllProduct()
2017-01-05 23:47:09,828 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getEpicLinks                   =>  controllers.EpicController.getEpicLinks()
2017-01-05 23:47:09,828 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getassignee                    =>  controllers.AssigneeController.getAssigneeList()
2017-01-05 23:47:09,828 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listcycle                      =>  controllers.AssigneeController.getListCycleName()
2017-01-05 23:47:09,829 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /cycleExisting                  =>  controllers.AssigneeController.getListExistingCycle()
2017-01-05 23:47:09,830 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listproject                    =>  controllers.MyGadgetController.getProjectList()
2017-01-05 23:47:09,830 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /.*                             =>  controllers.ApplicationController.index()
2017-01-05 23:47:09,831 INFO [Scanner-0] n.NinjaDefault [NinjaDefault.java:441] 
 _______  .___ _______        ____.  _____   
 \      \ |   |\      \      |    | /  _  \  
 /   |   \|   |/   |   \     |    |/  /_\  \ 
/    |    \   /    |    \/\__|    /    |    \  http://www.ninjaframework.org
\____|__  /___\____|__  /\________\____|__  /  @ninjaframework
     web\/framework   \/                  \/   5.8.0

2017-01-05 23:47:09,832 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:53] Starting Ninja application...
2017-01-05 23:47:09,836 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:86] Ninja application started in 4ms
2017-01-05 23:47:12,977 INFO [qtp1186254299-66] o.m.d.cluster [SLF4JLogger.java:71] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2017-01-05 23:47:13,037 INFO [qtp1186254299-66] o.m.d.cluster [SLF4JLogger.java:71] No server chosen by ReadPreferenceServerSelector{readPreference=primary} from cluster description ClusterDescription{type=UNKNOWN, connectionMode=SINGLE, all=[ServerDescription{address=localhost:27017, type=UNKNOWN, state=CONNECTING}]}. Waiting for 30000 ms before timing out
2017-01-05 23:47:13,046 INFO [cluster-ClusterId{value='586e789018e1821138cee302', description='null'}-localhost:27017] o.m.d.connection [SLF4JLogger.java:71] Opened connection [connectionId{localValue:1, serverValue:69}] to localhost:27017
2017-01-05 23:47:13,047 INFO [cluster-ClusterId{value='586e789018e1821138cee302', description='null'}-localhost:27017] o.m.d.cluster [SLF4JLogger.java:71] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 1, 5]}, minWireVersion=0, maxWireVersion=4, maxDocumentSize=16777216, roundTripTimeNanos=559122}
2017-01-05 23:47:13,053 INFO [qtp1186254299-66] o.m.d.connection [SLF4JLogger.java:71] Opened connection [connectionId{localValue:2, serverValue:70}] to localhost:27017
2017-01-05 23:50:42,663 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:93] Stopping Ninja application...
2017-01-05 23:50:42,672 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:97] Ninja application stopped in 9ms
2017-01-05 23:50:45,729 INFO [Scanner-0] n.u.NinjaModeHelper [NinjaModeHelper.java:90] Ninja is running in mode dev
2017-01-05 23:50:45,810 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:245] Successfully configured Logback.
2017-01-05 23:50:45,813 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:165] Enabling Ninja classic configuration
2017-01-05 23:50:46,568 INFO [Scanner-0] n.u.SwissKnife [SwissKnife.java:77] Could not load file conf/messages_en.properties (not a bad thing necessarily, but I am returing null)
2017-01-05 23:50:46,569 INFO [Scanner-0] n.i.MessagesImpl [MessagesImpl.java:205] Did not find conf/messages_en.properties but it was specified in application.conf. Using default language instead.
2017-01-05 23:50:46,648 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:116] -------------------------------------------------------------------
2017-01-05 23:50:46,648 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:117] Registered response template engines
2017-01-05 23:50:46,649 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:118] -------------------------------------------------------------------
2017-01-05 23:50:46,649 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/javascript  =>  ninja.template.TemplateEngineJsonP
2017-01-05 23:50:46,649 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/json        =>  ninja.template.TemplateEngineJson
2017-01-05 23:50:46,649 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/xml         =>  ninja.template.TemplateEngineXml
2017-01-05 23:50:46,649 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/html               =>  ninja.template.TemplateEngineFreemarker
2017-01-05 23:50:46,650 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/plain              =>  ninja.template.TemplateEngineText
2017-01-05 23:50:46,746 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1184] Using default implementation for ThreadExecutor
2017-01-05 23:50:46,749 INFO [Scanner-0] o.q.s.SimpleThreadPool [SimpleThreadPool.java:268] Job execution threads will use class loader of thread: Scanner-0
2017-01-05 23:50:46,778 INFO [Scanner-0] o.q.c.SchedulerSignalerImpl [SchedulerSignalerImpl.java:61] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2017-01-05 23:50:46,780 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:240] Quartz Scheduler v.2.2.1 created.
2017-01-05 23:50:46,782 INFO [Scanner-0] o.q.s.RAMJobStore [RAMJobStore.java:155] RAMJobStore initialized.
2017-01-05 23:50:46,783 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:305] Scheduler meta-data: Quartz Scheduler (v2.2.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2017-01-05 23:50:46,783 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1339] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2017-01-05 23:50:46,784 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1343] Quartz scheduler version: 2.2.1
2017-01-05 23:50:46,795 INFO [Scanner-0] h.s.SchedulerManagement [SchedulerManagement.java:49] started clear cache job
2017-01-05 23:50:46,797 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:109] ----------------------------------------------------------------------------
2017-01-05 23:50:46,797 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:110] Registered request bodyparser engines
2017-01-05 23:50:46,797 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:111] ----------------------------------------------------------------------------
2017-01-05 23:50:46,798 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/json                   =>  ninja.bodyparser.BodyParserEngineJson
2017-01-05 23:50:46,798 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/x-www-form-urlencoded  =>  ninja.bodyparser.BodyParserEnginePost
2017-01-05 23:50:46,798 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/xml                    =>  ninja.bodyparser.BodyParserEngineXml
2017-01-05 23:50:46,800 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:105] Ninja injector started in 984 ms.
2017-01-05 23:50:46,910 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:425] ------------------------------------------------------------------------------------------------------
2017-01-05 23:50:46,911 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:426] Registered routes
2017-01-05 23:50:46,911 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:427] ------------------------------------------------------------------------------------------------------
2017-01-05 23:50:46,911 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /login                          =>  controllers.LoginLogoutController.login()
2017-01-05 23:50:46,912 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /login                          =>  controllers.LoginLogoutController.loginPost()
2017-01-05 23:50:46,912 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /logout                         =>  controllers.LoginLogoutController.logout()
2017-01-05 23:50:46,912 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getUserInfo                    =>  controllers.ApplicationController.getUserInfo()
2017-01-05 23:50:46,912 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getProjectList                 =>  controllers.ApplicationController.getProjectList()
2017-01-05 23:50:46,913 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getGadgetList                  =>  controllers.GadgetController.getGadgetList()
2017-01-05 23:50:46,913 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /addNewGadget                   =>  controllers.GadgetController.addNewGadget()
2017-01-05 23:50:46,913 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateGadget                   =>  controllers.GadgetController.updateGadget()
2017-01-05 23:50:46,914 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /clearCacheGadget               =>  controllers.GadgetController.clearCacheGadget()
2017-01-05 23:50:46,914 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteGadget                   =>  controllers.GadgetController.deleteGadget()
2017-01-05 23:50:46,914 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /showSonarStatisticGadget       =>  controllers.GadgetController.showSonarStatisticGadget()
2017-01-05 23:50:46,914 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getIAComponents                =>  controllers.ApplicationController.getIAComponents()
2017-01-05 23:50:46,914 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getMetrics                     =>  controllers.ApplicationController.getMetricList()
2017-01-05 23:50:46,915 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getReleaseList                 =>  controllers.ApplicationController.getReleaseList()
2017-01-05 23:50:46,915 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getPeriodList                  =>  controllers.ApplicationController.getPeriodList()
2017-01-05 23:50:46,915 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getCruProjectList              =>  controllers.OverdueReviewReportController.getCruProjectList()
2017-01-05 23:50:46,915 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release                        =>  controllers.ConfigurationController.release()
2017-01-05 23:50:46,915 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release/ialist/{name}          =>  controllers.ConfigurationController.releaseURL()
2017-01-05 23:50:46,915 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release                        =>  controllers.ConfigurationController.releasePost()
2017-01-05 23:50:46,915 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/update                 =>  controllers.ConfigurationController.releaseUpdate()
2017-01-05 23:50:46,916 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/delete                 =>  controllers.ConfigurationController.releaseDelete()
2017-01-05 23:50:46,916 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /metric                         =>  controllers.ConfigurationController.metric()
2017-01-05 23:50:46,916 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric                         =>  controllers.ConfigurationController.metricPost()
2017-01-05 23:50:46,916 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/update                  =>  controllers.ConfigurationController.metricUpdate()
2017-01-05 23:50:46,916 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/delete                  =>  controllers.ConfigurationController.metricDelete()
2017-01-05 23:50:46,916 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /dashboard/new                  =>  controllers.DashboardController.new_dashboard()
2017-01-05 23:50:46,916 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /dashboard/new                  =>  controllers.DashboardController.new_dashboard_post()
2017-01-05 23:50:46,917 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteDashboard                =>  controllers.DashboardController.deleteDashboard()
2017-01-05 23:50:46,917 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardInfo               =>  controllers.DashboardController.getDashboardInfo()
2017-01-05 23:50:46,917 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardList               =>  controllers.DashboardController.getDashboardList()
2017-01-05 23:50:46,917 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateDashboardOption          =>  controllers.DashboardController.updateDashboardOption()
2017-01-05 23:50:46,917 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/webjars/{fileName: .*}  =>  ninja.AssetsController.serveWebJars()
2017-01-05 23:50:46,918 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/{fileName: .*}          =>  ninja.AssetsController.serveStatic()
2017-01-05 23:50:46,918 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getData                 =>  controllers.MyGadgetController.getDataGadget()
2017-01-05 23:50:46,918 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /gadget/save                    =>  controllers.MyGadgetController.insertOrUpdateGadget()
2017-01-05 23:50:46,918 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/gadgets                 =>  controllers.MyGadgetController.getGadgetsInDashboardId()
2017-01-05 23:50:46,918 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getStoryInEpic          =>  controllers.MyGadgetController.getStoryInEpic()
2017-01-05 23:50:46,918 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product                        =>  controllers.ProductController.productPage()
2017-01-05 23:50:46,919 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteProduct          =>  controllers.ProductController.deleteProduct()
2017-01-05 23:50:46,919 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertProduct          =>  controllers.ProductController.addProduct()
2017-01-05 23:50:46,919 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteCycle            =>  controllers.ProductController.deleteCycle()
2017-01-05 23:50:46,919 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertCycle            =>  controllers.ProductController.addCycle()
2017-01-05 23:50:46,919 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product/getall                 =>  controllers.ProductController.getAllProduct()
2017-01-05 23:50:46,919 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getEpicLinks                   =>  controllers.EpicController.getEpicLinks()
2017-01-05 23:50:46,920 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getassignee                    =>  controllers.AssigneeController.getAssigneeList()
2017-01-05 23:50:46,920 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listcycle                      =>  controllers.AssigneeController.getListCycleName()
2017-01-05 23:50:46,920 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /cycleExisting                  =>  controllers.AssigneeController.getListExistingCycle()
2017-01-05 23:50:46,920 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listproject                    =>  controllers.MyGadgetController.getProjectList()
2017-01-05 23:50:46,920 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /.*                             =>  controllers.ApplicationController.index()
2017-01-05 23:50:46,921 INFO [Scanner-0] n.NinjaDefault [NinjaDefault.java:441] 
 _______  .___ _______        ____.  _____   
 \      \ |   |\      \      |    | /  _  \  
 /   |   \|   |/   |   \     |    |/  /_\  \ 
/    |    \   /    |    \/\__|    /    |    \  http://www.ninjaframework.org
\____|__  /___\____|__  /\________\____|__  /  @ninjaframework
     web\/framework   \/                  \/   5.8.0

2017-01-05 23:50:46,921 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:53] Starting Ninja application...
2017-01-05 23:50:46,923 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:86] Ninja application started in 2ms
2017-01-05 23:51:13,839 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:93] Stopping Ninja application...
2017-01-05 23:51:13,845 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:97] Ninja application stopped in 6ms
2017-01-05 23:51:16,327 INFO [Scanner-0] n.u.NinjaModeHelper [NinjaModeHelper.java:90] Ninja is running in mode dev
2017-01-05 23:51:16,403 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:245] Successfully configured Logback.
2017-01-05 23:51:16,406 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:165] Enabling Ninja classic configuration
2017-01-05 23:51:17,467 INFO [Scanner-0] n.u.SwissKnife [SwissKnife.java:77] Could not load file conf/messages_en.properties (not a bad thing necessarily, but I am returing null)
2017-01-05 23:51:17,467 INFO [Scanner-0] n.i.MessagesImpl [MessagesImpl.java:205] Did not find conf/messages_en.properties but it was specified in application.conf. Using default language instead.
2017-01-05 23:51:17,520 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:116] -------------------------------------------------------------------
2017-01-05 23:51:17,520 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:117] Registered response template engines
2017-01-05 23:51:17,520 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:118] -------------------------------------------------------------------
2017-01-05 23:51:17,520 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/javascript  =>  ninja.template.TemplateEngineJsonP
2017-01-05 23:51:17,521 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/json        =>  ninja.template.TemplateEngineJson
2017-01-05 23:51:17,521 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/xml         =>  ninja.template.TemplateEngineXml
2017-01-05 23:51:17,521 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/html               =>  ninja.template.TemplateEngineFreemarker
2017-01-05 23:51:17,521 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/plain              =>  ninja.template.TemplateEngineText
2017-01-05 23:51:17,607 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1184] Using default implementation for ThreadExecutor
2017-01-05 23:51:17,610 INFO [Scanner-0] o.q.s.SimpleThreadPool [SimpleThreadPool.java:268] Job execution threads will use class loader of thread: Scanner-0
2017-01-05 23:51:17,633 INFO [Scanner-0] o.q.c.SchedulerSignalerImpl [SchedulerSignalerImpl.java:61] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2017-01-05 23:51:17,634 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:240] Quartz Scheduler v.2.2.1 created.
2017-01-05 23:51:17,636 INFO [Scanner-0] o.q.s.RAMJobStore [RAMJobStore.java:155] RAMJobStore initialized.
2017-01-05 23:51:17,637 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:305] Scheduler meta-data: Quartz Scheduler (v2.2.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2017-01-05 23:51:17,638 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1339] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2017-01-05 23:51:17,638 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1343] Quartz scheduler version: 2.2.1
2017-01-05 23:51:17,666 INFO [Scanner-0] h.s.SchedulerManagement [SchedulerManagement.java:49] started clear cache job
2017-01-05 23:51:17,668 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:109] ----------------------------------------------------------------------------
2017-01-05 23:51:17,668 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:110] Registered request bodyparser engines
2017-01-05 23:51:17,669 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:111] ----------------------------------------------------------------------------
2017-01-05 23:51:17,669 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/json                   =>  ninja.bodyparser.BodyParserEngineJson
2017-01-05 23:51:17,669 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/x-www-form-urlencoded  =>  ninja.bodyparser.BodyParserEnginePost
2017-01-05 23:51:17,670 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/xml                    =>  ninja.bodyparser.BodyParserEngineXml
2017-01-05 23:51:17,674 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:105] Ninja injector started in 1264 ms.
2017-01-05 23:51:17,889 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:425] ------------------------------------------------------------------------------------------------------
2017-01-05 23:51:17,890 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:426] Registered routes
2017-01-05 23:51:17,890 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:427] ------------------------------------------------------------------------------------------------------
2017-01-05 23:51:17,890 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /login                          =>  controllers.LoginLogoutController.login()
2017-01-05 23:51:17,891 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /login                          =>  controllers.LoginLogoutController.loginPost()
2017-01-05 23:51:17,891 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /logout                         =>  controllers.LoginLogoutController.logout()
2017-01-05 23:51:17,891 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getUserInfo                    =>  controllers.ApplicationController.getUserInfo()
2017-01-05 23:51:17,891 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getProjectList                 =>  controllers.ApplicationController.getProjectList()
2017-01-05 23:51:17,891 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getGadgetList                  =>  controllers.GadgetController.getGadgetList()
2017-01-05 23:51:17,892 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /addNewGadget                   =>  controllers.GadgetController.addNewGadget()
2017-01-05 23:51:17,892 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateGadget                   =>  controllers.GadgetController.updateGadget()
2017-01-05 23:51:17,892 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /clearCacheGadget               =>  controllers.GadgetController.clearCacheGadget()
2017-01-05 23:51:17,892 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteGadget                   =>  controllers.GadgetController.deleteGadget()
2017-01-05 23:51:17,893 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /showSonarStatisticGadget       =>  controllers.GadgetController.showSonarStatisticGadget()
2017-01-05 23:51:17,893 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getIAComponents                =>  controllers.ApplicationController.getIAComponents()
2017-01-05 23:51:17,893 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getMetrics                     =>  controllers.ApplicationController.getMetricList()
2017-01-05 23:51:17,893 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getReleaseList                 =>  controllers.ApplicationController.getReleaseList()
2017-01-05 23:51:17,893 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getPeriodList                  =>  controllers.ApplicationController.getPeriodList()
2017-01-05 23:51:17,894 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getCruProjectList              =>  controllers.OverdueReviewReportController.getCruProjectList()
2017-01-05 23:51:17,894 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release                        =>  controllers.ConfigurationController.release()
2017-01-05 23:51:17,894 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release/ialist/{name}          =>  controllers.ConfigurationController.releaseURL()
2017-01-05 23:51:17,894 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release                        =>  controllers.ConfigurationController.releasePost()
2017-01-05 23:51:17,895 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/update                 =>  controllers.ConfigurationController.releaseUpdate()
2017-01-05 23:51:17,895 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/delete                 =>  controllers.ConfigurationController.releaseDelete()
2017-01-05 23:51:17,895 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /metric                         =>  controllers.ConfigurationController.metric()
2017-01-05 23:51:17,895 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric                         =>  controllers.ConfigurationController.metricPost()
2017-01-05 23:51:17,895 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/update                  =>  controllers.ConfigurationController.metricUpdate()
2017-01-05 23:51:17,896 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/delete                  =>  controllers.ConfigurationController.metricDelete()
2017-01-05 23:51:17,896 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /dashboard/new                  =>  controllers.DashboardController.new_dashboard()
2017-01-05 23:51:17,896 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /dashboard/new                  =>  controllers.DashboardController.new_dashboard_post()
2017-01-05 23:51:17,897 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteDashboard                =>  controllers.DashboardController.deleteDashboard()
2017-01-05 23:51:17,897 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardInfo               =>  controllers.DashboardController.getDashboardInfo()
2017-01-05 23:51:17,898 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardList               =>  controllers.DashboardController.getDashboardList()
2017-01-05 23:51:17,898 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateDashboardOption          =>  controllers.DashboardController.updateDashboardOption()
2017-01-05 23:51:17,898 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/webjars/{fileName: .*}  =>  ninja.AssetsController.serveWebJars()
2017-01-05 23:51:17,899 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/{fileName: .*}          =>  ninja.AssetsController.serveStatic()
2017-01-05 23:51:17,899 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getData                 =>  controllers.MyGadgetController.getDataGadget()
2017-01-05 23:51:17,899 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /gadget/save                    =>  controllers.MyGadgetController.insertOrUpdateGadget()
2017-01-05 23:51:17,899 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/gadgets                 =>  controllers.MyGadgetController.getGadgetsInDashboardId()
2017-01-05 23:51:17,899 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getStoryInEpic          =>  controllers.MyGadgetController.getStoryInEpic()
2017-01-05 23:51:17,900 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product                        =>  controllers.ProductController.productPage()
2017-01-05 23:51:17,901 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteProduct          =>  controllers.ProductController.deleteProduct()
2017-01-05 23:51:17,901 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertProduct          =>  controllers.ProductController.addProduct()
2017-01-05 23:51:17,901 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteCycle            =>  controllers.ProductController.deleteCycle()
2017-01-05 23:51:17,901 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertCycle            =>  controllers.ProductController.addCycle()
2017-01-05 23:51:17,901 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product/getall                 =>  controllers.ProductController.getAllProduct()
2017-01-05 23:51:17,902 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getEpicLinks                   =>  controllers.EpicController.getEpicLinks()
2017-01-05 23:51:17,902 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getassignee                    =>  controllers.AssigneeController.getAssigneeList()
2017-01-05 23:51:17,902 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listcycle                      =>  controllers.AssigneeController.getListCycleName()
2017-01-05 23:51:17,902 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /cycleExisting                  =>  controllers.AssigneeController.getListExistingCycle()
2017-01-05 23:51:17,902 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listproject                    =>  controllers.MyGadgetController.getProjectList()
2017-01-05 23:51:17,903 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /.*                             =>  controllers.ApplicationController.index()
2017-01-05 23:51:17,903 INFO [Scanner-0] n.NinjaDefault [NinjaDefault.java:441] 
 _______  .___ _______        ____.  _____   
 \      \ |   |\      \      |    | /  _  \  
 /   |   \|   |/   |   \     |    |/  /_\  \ 
/    |    \   /    |    \/\__|    /    |    \  http://www.ninjaframework.org
\____|__  /___\____|__  /\________\____|__  /  @ninjaframework
     web\/framework   \/                  \/   5.8.0

2017-01-05 23:51:17,903 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:53] Starting Ninja application...
2017-01-05 23:51:17,905 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:86] Ninja application started in 2ms
2017-01-05 23:51:20,462 INFO [qtp1186254299-110] o.m.d.cluster [SLF4JLogger.java:71] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2017-01-05 23:51:20,518 INFO [qtp1186254299-110] o.m.d.cluster [SLF4JLogger.java:71] No server chosen by ReadPreferenceServerSelector{readPreference=primary} from cluster description ClusterDescription{type=UNKNOWN, connectionMode=SINGLE, all=[ServerDescription{address=localhost:27017, type=UNKNOWN, state=CONNECTING}]}. Waiting for 30000 ms before timing out
2017-01-05 23:51:20,531 INFO [cluster-ClusterId{value='586e798818e1821138afd724', description='null'}-localhost:27017] o.m.d.connection [SLF4JLogger.java:71] Opened connection [connectionId{localValue:1, serverValue:71}] to localhost:27017
2017-01-05 23:51:20,532 INFO [cluster-ClusterId{value='586e798818e1821138afd724', description='null'}-localhost:27017] o.m.d.cluster [SLF4JLogger.java:71] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 1, 5]}, minWireVersion=0, maxWireVersion=4, maxDocumentSize=16777216, roundTripTimeNanos=630072}
2017-01-05 23:51:20,539 INFO [qtp1186254299-110] o.m.d.connection [SLF4JLogger.java:71] Opened connection [connectionId{localValue:2, serverValue:72}] to localhost:27017
2017-01-05 23:52:13,070 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:93] Stopping Ninja application...
2017-01-05 23:52:13,077 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:97] Ninja application stopped in 7ms
2017-01-05 23:52:15,787 INFO [Scanner-0] n.u.NinjaModeHelper [NinjaModeHelper.java:90] Ninja is running in mode dev
2017-01-05 23:52:15,830 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:245] Successfully configured Logback.
2017-01-05 23:52:15,832 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:165] Enabling Ninja classic configuration
2017-01-05 23:52:16,552 INFO [Scanner-0] n.u.SwissKnife [SwissKnife.java:77] Could not load file conf/messages_en.properties (not a bad thing necessarily, but I am returing null)
2017-01-05 23:52:16,552 INFO [Scanner-0] n.i.MessagesImpl [MessagesImpl.java:205] Did not find conf/messages_en.properties but it was specified in application.conf. Using default language instead.
2017-01-05 23:52:16,642 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:116] -------------------------------------------------------------------
2017-01-05 23:52:16,643 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:117] Registered response template engines
2017-01-05 23:52:16,643 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:118] -------------------------------------------------------------------
2017-01-05 23:52:16,644 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/javascript  =>  ninja.template.TemplateEngineJsonP
2017-01-05 23:52:16,644 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/json        =>  ninja.template.TemplateEngineJson
2017-01-05 23:52:16,644 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/xml         =>  ninja.template.TemplateEngineXml
2017-01-05 23:52:16,645 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/html               =>  ninja.template.TemplateEngineFreemarker
2017-01-05 23:52:16,645 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/plain              =>  ninja.template.TemplateEngineText
2017-01-05 23:52:16,749 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1184] Using default implementation for ThreadExecutor
2017-01-05 23:52:16,757 INFO [Scanner-0] o.q.s.SimpleThreadPool [SimpleThreadPool.java:268] Job execution threads will use class loader of thread: Scanner-0
2017-01-05 23:52:16,813 INFO [Scanner-0] o.q.c.SchedulerSignalerImpl [SchedulerSignalerImpl.java:61] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2017-01-05 23:52:16,820 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:240] Quartz Scheduler v.2.2.1 created.
2017-01-05 23:52:16,823 INFO [Scanner-0] o.q.s.RAMJobStore [RAMJobStore.java:155] RAMJobStore initialized.
2017-01-05 23:52:16,825 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:305] Scheduler meta-data: Quartz Scheduler (v2.2.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2017-01-05 23:52:16,826 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1339] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2017-01-05 23:52:16,827 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1343] Quartz scheduler version: 2.2.1
2017-01-05 23:52:16,869 INFO [Scanner-0] h.s.SchedulerManagement [SchedulerManagement.java:49] started clear cache job
2017-01-05 23:52:16,873 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:109] ----------------------------------------------------------------------------
2017-01-05 23:52:16,874 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:110] Registered request bodyparser engines
2017-01-05 23:52:16,874 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:111] ----------------------------------------------------------------------------
2017-01-05 23:52:16,874 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/json                   =>  ninja.bodyparser.BodyParserEngineJson
2017-01-05 23:52:16,875 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/x-www-form-urlencoded  =>  ninja.bodyparser.BodyParserEnginePost
2017-01-05 23:52:16,875 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/xml                    =>  ninja.bodyparser.BodyParserEngineXml
2017-01-05 23:52:16,878 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:105] Ninja injector started in 1041 ms.
2017-01-05 23:52:17,004 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:425] ------------------------------------------------------------------------------------------------------
2017-01-05 23:52:17,005 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:426] Registered routes
2017-01-05 23:52:17,005 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:427] ------------------------------------------------------------------------------------------------------
2017-01-05 23:52:17,005 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /login                          =>  controllers.LoginLogoutController.login()
2017-01-05 23:52:17,005 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /login                          =>  controllers.LoginLogoutController.loginPost()
2017-01-05 23:52:17,005 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /logout                         =>  controllers.LoginLogoutController.logout()
2017-01-05 23:52:17,005 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getUserInfo                    =>  controllers.ApplicationController.getUserInfo()
2017-01-05 23:52:17,005 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getProjectList                 =>  controllers.ApplicationController.getProjectList()
2017-01-05 23:52:17,006 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getGadgetList                  =>  controllers.GadgetController.getGadgetList()
2017-01-05 23:52:17,006 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /addNewGadget                   =>  controllers.GadgetController.addNewGadget()
2017-01-05 23:52:17,006 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateGadget                   =>  controllers.GadgetController.updateGadget()
2017-01-05 23:52:17,006 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /clearCacheGadget               =>  controllers.GadgetController.clearCacheGadget()
2017-01-05 23:52:17,006 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteGadget                   =>  controllers.GadgetController.deleteGadget()
2017-01-05 23:52:17,006 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /showSonarStatisticGadget       =>  controllers.GadgetController.showSonarStatisticGadget()
2017-01-05 23:52:17,006 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getIAComponents                =>  controllers.ApplicationController.getIAComponents()
2017-01-05 23:52:17,006 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getMetrics                     =>  controllers.ApplicationController.getMetricList()
2017-01-05 23:52:17,007 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getReleaseList                 =>  controllers.ApplicationController.getReleaseList()
2017-01-05 23:52:17,007 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getPeriodList                  =>  controllers.ApplicationController.getPeriodList()
2017-01-05 23:52:17,007 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getCruProjectList              =>  controllers.OverdueReviewReportController.getCruProjectList()
2017-01-05 23:52:17,007 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release                        =>  controllers.ConfigurationController.release()
2017-01-05 23:52:17,007 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release/ialist/{name}          =>  controllers.ConfigurationController.releaseURL()
2017-01-05 23:52:17,007 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release                        =>  controllers.ConfigurationController.releasePost()
2017-01-05 23:52:17,008 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/update                 =>  controllers.ConfigurationController.releaseUpdate()
2017-01-05 23:52:17,008 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/delete                 =>  controllers.ConfigurationController.releaseDelete()
2017-01-05 23:52:17,008 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /metric                         =>  controllers.ConfigurationController.metric()
2017-01-05 23:52:17,008 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric                         =>  controllers.ConfigurationController.metricPost()
2017-01-05 23:52:17,008 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/update                  =>  controllers.ConfigurationController.metricUpdate()
2017-01-05 23:52:17,008 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/delete                  =>  controllers.ConfigurationController.metricDelete()
2017-01-05 23:52:17,008 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /dashboard/new                  =>  controllers.DashboardController.new_dashboard()
2017-01-05 23:52:17,009 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /dashboard/new                  =>  controllers.DashboardController.new_dashboard_post()
2017-01-05 23:52:17,009 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteDashboard                =>  controllers.DashboardController.deleteDashboard()
2017-01-05 23:52:17,009 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardInfo               =>  controllers.DashboardController.getDashboardInfo()
2017-01-05 23:52:17,009 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardList               =>  controllers.DashboardController.getDashboardList()
2017-01-05 23:52:17,009 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateDashboardOption          =>  controllers.DashboardController.updateDashboardOption()
2017-01-05 23:52:17,009 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/webjars/{fileName: .*}  =>  ninja.AssetsController.serveWebJars()
2017-01-05 23:52:17,009 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/{fileName: .*}          =>  ninja.AssetsController.serveStatic()
2017-01-05 23:52:17,010 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getData                 =>  controllers.MyGadgetController.getDataGadget()
2017-01-05 23:52:17,010 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /gadget/save                    =>  controllers.MyGadgetController.insertOrUpdateGadget()
2017-01-05 23:52:17,010 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/gadgets                 =>  controllers.MyGadgetController.getGadgetsInDashboardId()
2017-01-05 23:52:17,010 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getStoryInEpic          =>  controllers.MyGadgetController.getStoryInEpic()
2017-01-05 23:52:17,010 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product                        =>  controllers.ProductController.productPage()
2017-01-05 23:52:17,010 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteProduct          =>  controllers.ProductController.deleteProduct()
2017-01-05 23:52:17,011 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertProduct          =>  controllers.ProductController.addProduct()
2017-01-05 23:52:17,011 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteCycle            =>  controllers.ProductController.deleteCycle()
2017-01-05 23:52:17,011 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertCycle            =>  controllers.ProductController.addCycle()
2017-01-05 23:52:17,011 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product/getall                 =>  controllers.ProductController.getAllProduct()
2017-01-05 23:52:17,011 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getEpicLinks                   =>  controllers.EpicController.getEpicLinks()
2017-01-05 23:52:17,011 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getassignee                    =>  controllers.AssigneeController.getAssigneeList()
2017-01-05 23:52:17,011 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listcycle                      =>  controllers.AssigneeController.getListCycleName()
2017-01-05 23:52:17,012 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /cycleExisting                  =>  controllers.AssigneeController.getListExistingCycle()
2017-01-05 23:52:17,012 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listproject                    =>  controllers.MyGadgetController.getProjectList()
2017-01-05 23:52:17,012 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /.*                             =>  controllers.ApplicationController.index()
2017-01-05 23:52:17,012 INFO [Scanner-0] n.NinjaDefault [NinjaDefault.java:441] 
 _______  .___ _______        ____.  _____   
 \      \ |   |\      \      |    | /  _  \  
 /   |   \|   |/   |   \     |    |/  /_\  \ 
/    |    \   /    |    \/\__|    /    |    \  http://www.ninjaframework.org
\____|__  /___\____|__  /\________\____|__  /  @ninjaframework
     web\/framework   \/                  \/   5.8.0

2017-01-05 23:52:17,013 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:53] Starting Ninja application...
2017-01-05 23:52:17,014 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:86] Ninja application started in 2ms
2017-01-05 23:52:18,058 INFO [qtp1186254299-155] o.m.d.cluster [SLF4JLogger.java:71] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2017-01-05 23:52:18,130 INFO [qtp1186254299-155] o.m.d.cluster [SLF4JLogger.java:71] No server chosen by ReadPreferenceServerSelector{readPreference=primary} from cluster description ClusterDescription{type=UNKNOWN, connectionMode=SINGLE, all=[ServerDescription{address=localhost:27017, type=UNKNOWN, state=CONNECTING}]}. Waiting for 30000 ms before timing out
2017-01-05 23:52:18,141 INFO [cluster-ClusterId{value='586e79c218e1821138214cf1', description='null'}-localhost:27017] o.m.d.connection [SLF4JLogger.java:71] Opened connection [connectionId{localValue:1, serverValue:73}] to localhost:27017
2017-01-05 23:52:18,142 INFO [cluster-ClusterId{value='586e79c218e1821138214cf1', description='null'}-localhost:27017] o.m.d.cluster [SLF4JLogger.java:71] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 1, 5]}, minWireVersion=0, maxWireVersion=4, maxDocumentSize=16777216, roundTripTimeNanos=506913}
2017-01-05 23:52:18,148 INFO [qtp1186254299-155] o.m.d.connection [SLF4JLogger.java:71] Opened connection [connectionId{localValue:2, serverValue:74}] to localhost:27017
2017-01-05 23:52:43,909 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:93] Stopping Ninja application...
2017-01-05 23:52:43,984 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:97] Ninja application stopped in 75ms
2017-01-05 23:52:46,287 INFO [Scanner-0] n.u.NinjaModeHelper [NinjaModeHelper.java:90] Ninja is running in mode dev
2017-01-05 23:52:46,332 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:245] Successfully configured Logback.
2017-01-05 23:52:46,334 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:165] Enabling Ninja classic configuration
2017-01-05 23:52:47,017 INFO [Scanner-0] n.u.SwissKnife [SwissKnife.java:77] Could not load file conf/messages_en.properties (not a bad thing necessarily, but I am returing null)
2017-01-05 23:52:47,017 INFO [Scanner-0] n.i.MessagesImpl [MessagesImpl.java:205] Did not find conf/messages_en.properties but it was specified in application.conf. Using default language instead.
2017-01-05 23:52:47,071 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:116] -------------------------------------------------------------------
2017-01-05 23:52:47,071 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:117] Registered response template engines
2017-01-05 23:52:47,071 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:118] -------------------------------------------------------------------
2017-01-05 23:52:47,071 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/javascript  =>  ninja.template.TemplateEngineJsonP
2017-01-05 23:52:47,072 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/json        =>  ninja.template.TemplateEngineJson
2017-01-05 23:52:47,072 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/xml         =>  ninja.template.TemplateEngineXml
2017-01-05 23:52:47,072 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/html               =>  ninja.template.TemplateEngineFreemarker
2017-01-05 23:52:47,072 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/plain              =>  ninja.template.TemplateEngineText
2017-01-05 23:52:47,115 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1184] Using default implementation for ThreadExecutor
2017-01-05 23:52:47,118 INFO [Scanner-0] o.q.s.SimpleThreadPool [SimpleThreadPool.java:268] Job execution threads will use class loader of thread: Scanner-0
2017-01-05 23:52:47,144 INFO [Scanner-0] o.q.c.SchedulerSignalerImpl [SchedulerSignalerImpl.java:61] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2017-01-05 23:52:47,147 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:240] Quartz Scheduler v.2.2.1 created.
2017-01-05 23:52:47,149 INFO [Scanner-0] o.q.s.RAMJobStore [RAMJobStore.java:155] RAMJobStore initialized.
2017-01-05 23:52:47,151 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:305] Scheduler meta-data: Quartz Scheduler (v2.2.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2017-01-05 23:52:47,151 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1339] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2017-01-05 23:52:47,151 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1343] Quartz scheduler version: 2.2.1
2017-01-05 23:52:47,161 INFO [Scanner-0] h.s.SchedulerManagement [SchedulerManagement.java:49] started clear cache job
2017-01-05 23:52:47,163 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:109] ----------------------------------------------------------------------------
2017-01-05 23:52:47,163 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:110] Registered request bodyparser engines
2017-01-05 23:52:47,163 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:111] ----------------------------------------------------------------------------
2017-01-05 23:52:47,164 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/json                   =>  ninja.bodyparser.BodyParserEngineJson
2017-01-05 23:52:47,164 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/x-www-form-urlencoded  =>  ninja.bodyparser.BodyParserEnginePost
2017-01-05 23:52:47,165 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/xml                    =>  ninja.bodyparser.BodyParserEngineXml
2017-01-05 23:52:47,167 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:105] Ninja injector started in 829 ms.
2017-01-05 23:52:47,267 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:425] ------------------------------------------------------------------------------------------------------
2017-01-05 23:52:47,267 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:426] Registered routes
2017-01-05 23:52:47,268 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:427] ------------------------------------------------------------------------------------------------------
2017-01-05 23:52:47,268 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /login                          =>  controllers.LoginLogoutController.login()
2017-01-05 23:52:47,268 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /login                          =>  controllers.LoginLogoutController.loginPost()
2017-01-05 23:52:47,268 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /logout                         =>  controllers.LoginLogoutController.logout()
2017-01-05 23:52:47,268 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getUserInfo                    =>  controllers.ApplicationController.getUserInfo()
2017-01-05 23:52:47,268 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getProjectList                 =>  controllers.ApplicationController.getProjectList()
2017-01-05 23:52:47,269 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getGadgetList                  =>  controllers.GadgetController.getGadgetList()
2017-01-05 23:52:47,269 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /addNewGadget                   =>  controllers.GadgetController.addNewGadget()
2017-01-05 23:52:47,269 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateGadget                   =>  controllers.GadgetController.updateGadget()
2017-01-05 23:52:47,269 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /clearCacheGadget               =>  controllers.GadgetController.clearCacheGadget()
2017-01-05 23:52:47,269 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteGadget                   =>  controllers.GadgetController.deleteGadget()
2017-01-05 23:52:47,269 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /showSonarStatisticGadget       =>  controllers.GadgetController.showSonarStatisticGadget()
2017-01-05 23:52:47,269 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getIAComponents                =>  controllers.ApplicationController.getIAComponents()
2017-01-05 23:52:47,270 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getMetrics                     =>  controllers.ApplicationController.getMetricList()
2017-01-05 23:52:47,270 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getReleaseList                 =>  controllers.ApplicationController.getReleaseList()
2017-01-05 23:52:47,270 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getPeriodList                  =>  controllers.ApplicationController.getPeriodList()
2017-01-05 23:52:47,270 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getCruProjectList              =>  controllers.OverdueReviewReportController.getCruProjectList()
2017-01-05 23:52:47,270 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release                        =>  controllers.ConfigurationController.release()
2017-01-05 23:52:47,270 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release/ialist/{name}          =>  controllers.ConfigurationController.releaseURL()
2017-01-05 23:52:47,270 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release                        =>  controllers.ConfigurationController.releasePost()
2017-01-05 23:52:47,271 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/update                 =>  controllers.ConfigurationController.releaseUpdate()
2017-01-05 23:52:47,271 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/delete                 =>  controllers.ConfigurationController.releaseDelete()
2017-01-05 23:52:47,271 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /metric                         =>  controllers.ConfigurationController.metric()
2017-01-05 23:52:47,271 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric                         =>  controllers.ConfigurationController.metricPost()
2017-01-05 23:52:47,271 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/update                  =>  controllers.ConfigurationController.metricUpdate()
2017-01-05 23:52:47,271 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/delete                  =>  controllers.ConfigurationController.metricDelete()
2017-01-05 23:52:47,271 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /dashboard/new                  =>  controllers.DashboardController.new_dashboard()
2017-01-05 23:52:47,272 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /dashboard/new                  =>  controllers.DashboardController.new_dashboard_post()
2017-01-05 23:52:47,272 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteDashboard                =>  controllers.DashboardController.deleteDashboard()
2017-01-05 23:52:47,272 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardInfo               =>  controllers.DashboardController.getDashboardInfo()
2017-01-05 23:52:47,272 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardList               =>  controllers.DashboardController.getDashboardList()
2017-01-05 23:52:47,272 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateDashboardOption          =>  controllers.DashboardController.updateDashboardOption()
2017-01-05 23:52:47,272 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/webjars/{fileName: .*}  =>  ninja.AssetsController.serveWebJars()
2017-01-05 23:52:47,273 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/{fileName: .*}          =>  ninja.AssetsController.serveStatic()
2017-01-05 23:52:47,273 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getData                 =>  controllers.MyGadgetController.getDataGadget()
2017-01-05 23:52:47,273 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /gadget/save                    =>  controllers.MyGadgetController.insertOrUpdateGadget()
2017-01-05 23:52:47,273 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/gadgets                 =>  controllers.MyGadgetController.getGadgetsInDashboardId()
2017-01-05 23:52:47,274 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getStoryInEpic          =>  controllers.MyGadgetController.getStoryInEpic()
2017-01-05 23:52:47,274 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product                        =>  controllers.ProductController.productPage()
2017-01-05 23:52:47,274 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteProduct          =>  controllers.ProductController.deleteProduct()
2017-01-05 23:52:47,274 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertProduct          =>  controllers.ProductController.addProduct()
2017-01-05 23:52:47,274 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteCycle            =>  controllers.ProductController.deleteCycle()
2017-01-05 23:52:47,274 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertCycle            =>  controllers.ProductController.addCycle()
2017-01-05 23:52:47,274 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product/getall                 =>  controllers.ProductController.getAllProduct()
2017-01-05 23:52:47,275 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getEpicLinks                   =>  controllers.EpicController.getEpicLinks()
2017-01-05 23:52:47,275 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getassignee                    =>  controllers.AssigneeController.getAssigneeList()
2017-01-05 23:52:47,275 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listcycle                      =>  controllers.AssigneeController.getListCycleName()
2017-01-05 23:52:47,275 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /cycleExisting                  =>  controllers.AssigneeController.getListExistingCycle()
2017-01-05 23:52:47,275 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listproject                    =>  controllers.MyGadgetController.getProjectList()
2017-01-05 23:52:47,275 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /.*                             =>  controllers.ApplicationController.index()
2017-01-05 23:52:47,276 INFO [Scanner-0] n.NinjaDefault [NinjaDefault.java:441] 
 _______  .___ _______        ____.  _____   
 \      \ |   |\      \      |    | /  _  \  
 /   |   \|   |/   |   \     |    |/  /_\  \ 
/    |    \   /    |    \/\__|    /    |    \  http://www.ninjaframework.org
\____|__  /___\____|__  /\________\____|__  /  @ninjaframework
     web\/framework   \/                  \/   5.8.0

2017-01-05 23:52:47,276 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:53] Starting Ninja application...
2017-01-05 23:52:47,278 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:86] Ninja application started in 2ms
2017-01-05 23:52:54,942 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:93] Stopping Ninja application...
2017-01-05 23:52:54,953 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:97] Ninja application stopped in 11ms
2017-01-05 23:52:57,535 INFO [Scanner-0] n.u.NinjaModeHelper [NinjaModeHelper.java:90] Ninja is running in mode dev
2017-01-05 23:52:57,585 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:245] Successfully configured Logback.
2017-01-05 23:52:57,587 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:165] Enabling Ninja classic configuration
2017-01-05 23:52:58,301 INFO [Scanner-0] n.u.SwissKnife [SwissKnife.java:77] Could not load file conf/messages_en.properties (not a bad thing necessarily, but I am returing null)
2017-01-05 23:52:58,302 INFO [Scanner-0] n.i.MessagesImpl [MessagesImpl.java:205] Did not find conf/messages_en.properties but it was specified in application.conf. Using default language instead.
2017-01-05 23:52:58,354 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:116] -------------------------------------------------------------------
2017-01-05 23:52:58,354 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:117] Registered response template engines
2017-01-05 23:52:58,354 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:118] -------------------------------------------------------------------
2017-01-05 23:52:58,354 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/javascript  =>  ninja.template.TemplateEngineJsonP
2017-01-05 23:52:58,355 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/json        =>  ninja.template.TemplateEngineJson
2017-01-05 23:52:58,355 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/xml         =>  ninja.template.TemplateEngineXml
2017-01-05 23:52:58,355 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/html               =>  ninja.template.TemplateEngineFreemarker
2017-01-05 23:52:58,355 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/plain              =>  ninja.template.TemplateEngineText
2017-01-05 23:52:58,398 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1184] Using default implementation for ThreadExecutor
2017-01-05 23:52:58,401 INFO [Scanner-0] o.q.s.SimpleThreadPool [SimpleThreadPool.java:268] Job execution threads will use class loader of thread: Scanner-0
2017-01-05 23:52:58,428 INFO [Scanner-0] o.q.c.SchedulerSignalerImpl [SchedulerSignalerImpl.java:61] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2017-01-05 23:52:58,430 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:240] Quartz Scheduler v.2.2.1 created.
2017-01-05 23:52:58,432 INFO [Scanner-0] o.q.s.RAMJobStore [RAMJobStore.java:155] RAMJobStore initialized.
2017-01-05 23:52:58,433 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:305] Scheduler meta-data: Quartz Scheduler (v2.2.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2017-01-05 23:52:58,434 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1339] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2017-01-05 23:52:58,434 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1343] Quartz scheduler version: 2.2.1
2017-01-05 23:52:58,461 INFO [Scanner-0] h.s.SchedulerManagement [SchedulerManagement.java:49] started clear cache job
2017-01-05 23:52:58,463 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:109] ----------------------------------------------------------------------------
2017-01-05 23:52:58,463 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:110] Registered request bodyparser engines
2017-01-05 23:52:58,463 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:111] ----------------------------------------------------------------------------
2017-01-05 23:52:58,464 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/json                   =>  ninja.bodyparser.BodyParserEngineJson
2017-01-05 23:52:58,464 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/x-www-form-urlencoded  =>  ninja.bodyparser.BodyParserEnginePost
2017-01-05 23:52:58,464 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/xml                    =>  ninja.bodyparser.BodyParserEngineXml
2017-01-05 23:52:58,467 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:105] Ninja injector started in 874 ms.
2017-01-05 23:52:58,557 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:425] ------------------------------------------------------------------------------------------------------
2017-01-05 23:52:58,558 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:426] Registered routes
2017-01-05 23:52:58,558 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:427] ------------------------------------------------------------------------------------------------------
2017-01-05 23:52:58,558 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /login                          =>  controllers.LoginLogoutController.login()
2017-01-05 23:52:58,559 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /login                          =>  controllers.LoginLogoutController.loginPost()
2017-01-05 23:52:58,559 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /logout                         =>  controllers.LoginLogoutController.logout()
2017-01-05 23:52:58,559 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getUserInfo                    =>  controllers.ApplicationController.getUserInfo()
2017-01-05 23:52:58,559 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getProjectList                 =>  controllers.ApplicationController.getProjectList()
2017-01-05 23:52:58,559 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getGadgetList                  =>  controllers.GadgetController.getGadgetList()
2017-01-05 23:52:58,560 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /addNewGadget                   =>  controllers.GadgetController.addNewGadget()
2017-01-05 23:52:58,560 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateGadget                   =>  controllers.GadgetController.updateGadget()
2017-01-05 23:52:58,560 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /clearCacheGadget               =>  controllers.GadgetController.clearCacheGadget()
2017-01-05 23:52:58,560 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteGadget                   =>  controllers.GadgetController.deleteGadget()
2017-01-05 23:52:58,561 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /showSonarStatisticGadget       =>  controllers.GadgetController.showSonarStatisticGadget()
2017-01-05 23:52:58,561 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getIAComponents                =>  controllers.ApplicationController.getIAComponents()
2017-01-05 23:52:58,561 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getMetrics                     =>  controllers.ApplicationController.getMetricList()
2017-01-05 23:52:58,561 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getReleaseList                 =>  controllers.ApplicationController.getReleaseList()
2017-01-05 23:52:58,561 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getPeriodList                  =>  controllers.ApplicationController.getPeriodList()
2017-01-05 23:52:58,561 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getCruProjectList              =>  controllers.OverdueReviewReportController.getCruProjectList()
2017-01-05 23:52:58,561 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release                        =>  controllers.ConfigurationController.release()
2017-01-05 23:52:58,562 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release/ialist/{name}          =>  controllers.ConfigurationController.releaseURL()
2017-01-05 23:52:58,562 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release                        =>  controllers.ConfigurationController.releasePost()
2017-01-05 23:52:58,562 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/update                 =>  controllers.ConfigurationController.releaseUpdate()
2017-01-05 23:52:58,562 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/delete                 =>  controllers.ConfigurationController.releaseDelete()
2017-01-05 23:52:58,562 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /metric                         =>  controllers.ConfigurationController.metric()
2017-01-05 23:52:58,562 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric                         =>  controllers.ConfigurationController.metricPost()
2017-01-05 23:52:58,563 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/update                  =>  controllers.ConfigurationController.metricUpdate()
2017-01-05 23:52:58,563 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/delete                  =>  controllers.ConfigurationController.metricDelete()
2017-01-05 23:52:58,563 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /dashboard/new                  =>  controllers.DashboardController.new_dashboard()
2017-01-05 23:52:58,563 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /dashboard/new                  =>  controllers.DashboardController.new_dashboard_post()
2017-01-05 23:52:58,564 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteDashboard                =>  controllers.DashboardController.deleteDashboard()
2017-01-05 23:52:58,564 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardInfo               =>  controllers.DashboardController.getDashboardInfo()
2017-01-05 23:52:58,564 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardList               =>  controllers.DashboardController.getDashboardList()
2017-01-05 23:52:58,564 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateDashboardOption          =>  controllers.DashboardController.updateDashboardOption()
2017-01-05 23:52:58,564 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/webjars/{fileName: .*}  =>  ninja.AssetsController.serveWebJars()
2017-01-05 23:52:58,565 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/{fileName: .*}          =>  ninja.AssetsController.serveStatic()
2017-01-05 23:52:58,565 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getData                 =>  controllers.MyGadgetController.getDataGadget()
2017-01-05 23:52:58,565 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /gadget/save                    =>  controllers.MyGadgetController.insertOrUpdateGadget()
2017-01-05 23:52:58,566 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/gadgets                 =>  controllers.MyGadgetController.getGadgetsInDashboardId()
2017-01-05 23:52:58,566 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getStoryInEpic          =>  controllers.MyGadgetController.getStoryInEpic()
2017-01-05 23:52:58,566 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product                        =>  controllers.ProductController.productPage()
2017-01-05 23:52:58,566 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteProduct          =>  controllers.ProductController.deleteProduct()
2017-01-05 23:52:58,567 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertProduct          =>  controllers.ProductController.addProduct()
2017-01-05 23:52:58,567 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteCycle            =>  controllers.ProductController.deleteCycle()
2017-01-05 23:52:58,567 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertCycle            =>  controllers.ProductController.addCycle()
2017-01-05 23:52:58,567 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product/getall                 =>  controllers.ProductController.getAllProduct()
2017-01-05 23:52:58,567 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getEpicLinks                   =>  controllers.EpicController.getEpicLinks()
2017-01-05 23:52:58,567 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getassignee                    =>  controllers.AssigneeController.getAssigneeList()
2017-01-05 23:52:58,568 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listcycle                      =>  controllers.AssigneeController.getListCycleName()
2017-01-05 23:52:58,568 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /cycleExisting                  =>  controllers.AssigneeController.getListExistingCycle()
2017-01-05 23:52:58,568 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listproject                    =>  controllers.MyGadgetController.getProjectList()
2017-01-05 23:52:58,568 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /.*                             =>  controllers.ApplicationController.index()
2017-01-05 23:52:58,569 INFO [Scanner-0] n.NinjaDefault [NinjaDefault.java:441] 
 _______  .___ _______        ____.  _____   
 \      \ |   |\      \      |    | /  _  \  
 /   |   \|   |/   |   \     |    |/  /_\  \ 
/    |    \   /    |    \/\__|    /    |    \  http://www.ninjaframework.org
\____|__  /___\____|__  /\________\____|__  /  @ninjaframework
     web\/framework   \/                  \/   5.8.0

2017-01-05 23:52:58,569 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:53] Starting Ninja application...
2017-01-05 23:52:58,571 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:86] Ninja application started in 2ms
2017-01-05 23:53:58,780 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:93] Stopping Ninja application...
2017-01-05 23:53:58,788 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:97] Ninja application stopped in 8ms
2017-01-05 23:54:01,531 INFO [Scanner-0] n.u.NinjaModeHelper [NinjaModeHelper.java:90] Ninja is running in mode dev
2017-01-05 23:54:01,587 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:245] Successfully configured Logback.
2017-01-05 23:54:01,590 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:165] Enabling Ninja classic configuration
2017-01-05 23:54:02,258 INFO [Scanner-0] n.u.SwissKnife [SwissKnife.java:77] Could not load file conf/messages_en.properties (not a bad thing necessarily, but I am returing null)
2017-01-05 23:54:02,259 INFO [Scanner-0] n.i.MessagesImpl [MessagesImpl.java:205] Did not find conf/messages_en.properties but it was specified in application.conf. Using default language instead.
2017-01-05 23:54:02,310 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:116] -------------------------------------------------------------------
2017-01-05 23:54:02,310 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:117] Registered response template engines
2017-01-05 23:54:02,310 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:118] -------------------------------------------------------------------
2017-01-05 23:54:02,310 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/javascript  =>  ninja.template.TemplateEngineJsonP
2017-01-05 23:54:02,311 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/json        =>  ninja.template.TemplateEngineJson
2017-01-05 23:54:02,311 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/xml         =>  ninja.template.TemplateEngineXml
2017-01-05 23:54:02,311 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/html               =>  ninja.template.TemplateEngineFreemarker
2017-01-05 23:54:02,311 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/plain              =>  ninja.template.TemplateEngineText
2017-01-05 23:54:02,350 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1184] Using default implementation for ThreadExecutor
2017-01-05 23:54:02,353 INFO [Scanner-0] o.q.s.SimpleThreadPool [SimpleThreadPool.java:268] Job execution threads will use class loader of thread: Scanner-0
2017-01-05 23:54:02,379 INFO [Scanner-0] o.q.c.SchedulerSignalerImpl [SchedulerSignalerImpl.java:61] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2017-01-05 23:54:02,380 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:240] Quartz Scheduler v.2.2.1 created.
2017-01-05 23:54:02,383 INFO [Scanner-0] o.q.s.RAMJobStore [RAMJobStore.java:155] RAMJobStore initialized.
2017-01-05 23:54:02,384 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:305] Scheduler meta-data: Quartz Scheduler (v2.2.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2017-01-05 23:54:02,385 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1339] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2017-01-05 23:54:02,385 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1343] Quartz scheduler version: 2.2.1
2017-01-05 23:54:02,402 INFO [Scanner-0] h.s.SchedulerManagement [SchedulerManagement.java:49] started clear cache job
2017-01-05 23:54:02,403 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:109] ----------------------------------------------------------------------------
2017-01-05 23:54:02,404 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:110] Registered request bodyparser engines
2017-01-05 23:54:02,404 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:111] ----------------------------------------------------------------------------
2017-01-05 23:54:02,404 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/json                   =>  ninja.bodyparser.BodyParserEngineJson
2017-01-05 23:54:02,404 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/x-www-form-urlencoded  =>  ninja.bodyparser.BodyParserEnginePost
2017-01-05 23:54:02,404 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/xml                    =>  ninja.bodyparser.BodyParserEngineXml
2017-01-05 23:54:02,407 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:105] Ninja injector started in 812 ms.
2017-01-05 23:54:02,495 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:425] ------------------------------------------------------------------------------------------------------
2017-01-05 23:54:02,495 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:426] Registered routes
2017-01-05 23:54:02,495 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:427] ------------------------------------------------------------------------------------------------------
2017-01-05 23:54:02,496 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /login                          =>  controllers.LoginLogoutController.login()
2017-01-05 23:54:02,496 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /login                          =>  controllers.LoginLogoutController.loginPost()
2017-01-05 23:54:02,496 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /logout                         =>  controllers.LoginLogoutController.logout()
2017-01-05 23:54:02,496 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getUserInfo                    =>  controllers.ApplicationController.getUserInfo()
2017-01-05 23:54:02,496 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getProjectList                 =>  controllers.ApplicationController.getProjectList()
2017-01-05 23:54:02,496 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getGadgetList                  =>  controllers.GadgetController.getGadgetList()
2017-01-05 23:54:02,496 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /addNewGadget                   =>  controllers.GadgetController.addNewGadget()
2017-01-05 23:54:02,497 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateGadget                   =>  controllers.GadgetController.updateGadget()
2017-01-05 23:54:02,497 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /clearCacheGadget               =>  controllers.GadgetController.clearCacheGadget()
2017-01-05 23:54:02,497 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteGadget                   =>  controllers.GadgetController.deleteGadget()
2017-01-05 23:54:02,497 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /showSonarStatisticGadget       =>  controllers.GadgetController.showSonarStatisticGadget()
2017-01-05 23:54:02,497 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getIAComponents                =>  controllers.ApplicationController.getIAComponents()
2017-01-05 23:54:02,497 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getMetrics                     =>  controllers.ApplicationController.getMetricList()
2017-01-05 23:54:02,497 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getReleaseList                 =>  controllers.ApplicationController.getReleaseList()
2017-01-05 23:54:02,498 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getPeriodList                  =>  controllers.ApplicationController.getPeriodList()
2017-01-05 23:54:02,498 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getCruProjectList              =>  controllers.OverdueReviewReportController.getCruProjectList()
2017-01-05 23:54:02,498 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release                        =>  controllers.ConfigurationController.release()
2017-01-05 23:54:02,498 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release/ialist/{name}          =>  controllers.ConfigurationController.releaseURL()
2017-01-05 23:54:02,498 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release                        =>  controllers.ConfigurationController.releasePost()
2017-01-05 23:54:02,498 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/update                 =>  controllers.ConfigurationController.releaseUpdate()
2017-01-05 23:54:02,499 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/delete                 =>  controllers.ConfigurationController.releaseDelete()
2017-01-05 23:54:02,499 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /metric                         =>  controllers.ConfigurationController.metric()
2017-01-05 23:54:02,499 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric                         =>  controllers.ConfigurationController.metricPost()
2017-01-05 23:54:02,499 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/update                  =>  controllers.ConfigurationController.metricUpdate()
2017-01-05 23:54:02,499 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/delete                  =>  controllers.ConfigurationController.metricDelete()
2017-01-05 23:54:02,500 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /dashboard/new                  =>  controllers.DashboardController.new_dashboard()
2017-01-05 23:54:02,500 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /dashboard/new                  =>  controllers.DashboardController.new_dashboard_post()
2017-01-05 23:54:02,500 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteDashboard                =>  controllers.DashboardController.deleteDashboard()
2017-01-05 23:54:02,500 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardInfo               =>  controllers.DashboardController.getDashboardInfo()
2017-01-05 23:54:02,500 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardList               =>  controllers.DashboardController.getDashboardList()
2017-01-05 23:54:02,500 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateDashboardOption          =>  controllers.DashboardController.updateDashboardOption()
2017-01-05 23:54:02,501 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/webjars/{fileName: .*}  =>  ninja.AssetsController.serveWebJars()
2017-01-05 23:54:02,501 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/{fileName: .*}          =>  ninja.AssetsController.serveStatic()
2017-01-05 23:54:02,501 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getData                 =>  controllers.MyGadgetController.getDataGadget()
2017-01-05 23:54:02,501 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /gadget/save                    =>  controllers.MyGadgetController.insertOrUpdateGadget()
2017-01-05 23:54:02,502 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/gadgets                 =>  controllers.MyGadgetController.getGadgetsInDashboardId()
2017-01-05 23:54:02,502 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getStoryInEpic          =>  controllers.MyGadgetController.getStoryInEpic()
2017-01-05 23:54:02,502 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product                        =>  controllers.ProductController.productPage()
2017-01-05 23:54:02,503 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteProduct          =>  controllers.ProductController.deleteProduct()
2017-01-05 23:54:02,503 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertProduct          =>  controllers.ProductController.addProduct()
2017-01-05 23:54:02,503 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteCycle            =>  controllers.ProductController.deleteCycle()
2017-01-05 23:54:02,503 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertCycle            =>  controllers.ProductController.addCycle()
2017-01-05 23:54:02,504 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product/getall                 =>  controllers.ProductController.getAllProduct()
2017-01-05 23:54:02,504 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getEpicLinks                   =>  controllers.EpicController.getEpicLinks()
2017-01-05 23:54:02,504 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getassignee                    =>  controllers.AssigneeController.getAssigneeList()
2017-01-05 23:54:02,504 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listcycle                      =>  controllers.AssigneeController.getListCycleName()
2017-01-05 23:54:02,505 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /cycleExisting                  =>  controllers.AssigneeController.getListExistingCycle()
2017-01-05 23:54:02,505 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listproject                    =>  controllers.MyGadgetController.getProjectList()
2017-01-05 23:54:02,505 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /.*                             =>  controllers.ApplicationController.index()
2017-01-05 23:54:02,506 INFO [Scanner-0] n.NinjaDefault [NinjaDefault.java:441] 
 _______  .___ _______        ____.  _____   
 \      \ |   |\      \      |    | /  _  \  
 /   |   \|   |/   |   \     |    |/  /_\  \ 
/    |    \   /    |    \/\__|    /    |    \  http://www.ninjaframework.org
\____|__  /___\____|__  /\________\____|__  /  @ninjaframework
     web\/framework   \/                  \/   5.8.0

2017-01-05 23:54:02,506 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:53] Starting Ninja application...
2017-01-05 23:54:02,508 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:86] Ninja application started in 2ms
2017-01-05 23:54:22,297 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:93] Stopping Ninja application...
2017-01-05 23:54:22,307 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:97] Ninja application stopped in 10ms
2017-01-05 23:54:24,593 INFO [Scanner-0] n.u.NinjaModeHelper [NinjaModeHelper.java:90] Ninja is running in mode dev
2017-01-05 23:54:24,634 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:245] Successfully configured Logback.
2017-01-05 23:54:24,636 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:165] Enabling Ninja classic configuration
2017-01-05 23:54:25,313 INFO [Scanner-0] n.u.SwissKnife [SwissKnife.java:77] Could not load file conf/messages_en.properties (not a bad thing necessarily, but I am returing null)
2017-01-05 23:54:25,314 INFO [Scanner-0] n.i.MessagesImpl [MessagesImpl.java:205] Did not find conf/messages_en.properties but it was specified in application.conf. Using default language instead.
2017-01-05 23:54:25,367 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:116] -------------------------------------------------------------------
2017-01-05 23:54:25,368 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:117] Registered response template engines
2017-01-05 23:54:25,368 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:118] -------------------------------------------------------------------
2017-01-05 23:54:25,368 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/javascript  =>  ninja.template.TemplateEngineJsonP
2017-01-05 23:54:25,368 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/json        =>  ninja.template.TemplateEngineJson
2017-01-05 23:54:25,369 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/xml         =>  ninja.template.TemplateEngineXml
2017-01-05 23:54:25,369 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/html               =>  ninja.template.TemplateEngineFreemarker
2017-01-05 23:54:25,369 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/plain              =>  ninja.template.TemplateEngineText
2017-01-05 23:54:25,410 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1184] Using default implementation for ThreadExecutor
2017-01-05 23:54:25,413 INFO [Scanner-0] o.q.s.SimpleThreadPool [SimpleThreadPool.java:268] Job execution threads will use class loader of thread: Scanner-0
2017-01-05 23:54:25,437 INFO [Scanner-0] o.q.c.SchedulerSignalerImpl [SchedulerSignalerImpl.java:61] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2017-01-05 23:54:25,440 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:240] Quartz Scheduler v.2.2.1 created.
2017-01-05 23:54:25,451 INFO [Scanner-0] o.q.s.RAMJobStore [RAMJobStore.java:155] RAMJobStore initialized.
2017-01-05 23:54:25,453 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:305] Scheduler meta-data: Quartz Scheduler (v2.2.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2017-01-05 23:54:25,453 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1339] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2017-01-05 23:54:25,454 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1343] Quartz scheduler version: 2.2.1
2017-01-05 23:54:25,465 INFO [Scanner-0] h.s.SchedulerManagement [SchedulerManagement.java:49] started clear cache job
2017-01-05 23:54:25,467 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:109] ----------------------------------------------------------------------------
2017-01-05 23:54:25,468 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:110] Registered request bodyparser engines
2017-01-05 23:54:25,468 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:111] ----------------------------------------------------------------------------
2017-01-05 23:54:25,468 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/json                   =>  ninja.bodyparser.BodyParserEngineJson
2017-01-05 23:54:25,468 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/x-www-form-urlencoded  =>  ninja.bodyparser.BodyParserEnginePost
2017-01-05 23:54:25,468 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/xml                    =>  ninja.bodyparser.BodyParserEngineXml
2017-01-05 23:54:25,469 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:105] Ninja injector started in 828 ms.
2017-01-05 23:54:25,568 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:425] ------------------------------------------------------------------------------------------------------
2017-01-05 23:54:25,568 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:426] Registered routes
2017-01-05 23:54:25,568 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:427] ------------------------------------------------------------------------------------------------------
2017-01-05 23:54:25,568 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /login                          =>  controllers.LoginLogoutController.login()
2017-01-05 23:54:25,568 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /login                          =>  controllers.LoginLogoutController.loginPost()
2017-01-05 23:54:25,569 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /logout                         =>  controllers.LoginLogoutController.logout()
2017-01-05 23:54:25,569 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getUserInfo                    =>  controllers.ApplicationController.getUserInfo()
2017-01-05 23:54:25,569 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getProjectList                 =>  controllers.ApplicationController.getProjectList()
2017-01-05 23:54:25,569 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getGadgetList                  =>  controllers.GadgetController.getGadgetList()
2017-01-05 23:54:25,569 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /addNewGadget                   =>  controllers.GadgetController.addNewGadget()
2017-01-05 23:54:25,570 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateGadget                   =>  controllers.GadgetController.updateGadget()
2017-01-05 23:54:25,570 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /clearCacheGadget               =>  controllers.GadgetController.clearCacheGadget()
2017-01-05 23:54:25,570 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteGadget                   =>  controllers.GadgetController.deleteGadget()
2017-01-05 23:54:25,570 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /showSonarStatisticGadget       =>  controllers.GadgetController.showSonarStatisticGadget()
2017-01-05 23:54:25,570 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getIAComponents                =>  controllers.ApplicationController.getIAComponents()
2017-01-05 23:54:25,570 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getMetrics                     =>  controllers.ApplicationController.getMetricList()
2017-01-05 23:54:25,570 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getReleaseList                 =>  controllers.ApplicationController.getReleaseList()
2017-01-05 23:54:25,570 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getPeriodList                  =>  controllers.ApplicationController.getPeriodList()
2017-01-05 23:54:25,571 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getCruProjectList              =>  controllers.OverdueReviewReportController.getCruProjectList()
2017-01-05 23:54:25,571 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release                        =>  controllers.ConfigurationController.release()
2017-01-05 23:54:25,571 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release/ialist/{name}          =>  controllers.ConfigurationController.releaseURL()
2017-01-05 23:54:25,571 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release                        =>  controllers.ConfigurationController.releasePost()
2017-01-05 23:54:25,572 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/update                 =>  controllers.ConfigurationController.releaseUpdate()
2017-01-05 23:54:25,572 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/delete                 =>  controllers.ConfigurationController.releaseDelete()
2017-01-05 23:54:25,572 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /metric                         =>  controllers.ConfigurationController.metric()
2017-01-05 23:54:25,572 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric                         =>  controllers.ConfigurationController.metricPost()
2017-01-05 23:54:25,572 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/update                  =>  controllers.ConfigurationController.metricUpdate()
2017-01-05 23:54:25,573 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/delete                  =>  controllers.ConfigurationController.metricDelete()
2017-01-05 23:54:25,573 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /dashboard/new                  =>  controllers.DashboardController.new_dashboard()
2017-01-05 23:54:25,573 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /dashboard/new                  =>  controllers.DashboardController.new_dashboard_post()
2017-01-05 23:54:25,573 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteDashboard                =>  controllers.DashboardController.deleteDashboard()
2017-01-05 23:54:25,573 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardInfo               =>  controllers.DashboardController.getDashboardInfo()
2017-01-05 23:54:25,574 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardList               =>  controllers.DashboardController.getDashboardList()
2017-01-05 23:54:25,574 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateDashboardOption          =>  controllers.DashboardController.updateDashboardOption()
2017-01-05 23:54:25,574 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/webjars/{fileName: .*}  =>  ninja.AssetsController.serveWebJars()
2017-01-05 23:54:25,574 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/{fileName: .*}          =>  ninja.AssetsController.serveStatic()
2017-01-05 23:54:25,574 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getData                 =>  controllers.MyGadgetController.getDataGadget()
2017-01-05 23:54:25,575 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /gadget/save                    =>  controllers.MyGadgetController.insertOrUpdateGadget()
2017-01-05 23:54:25,575 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/gadgets                 =>  controllers.MyGadgetController.getGadgetsInDashboardId()
2017-01-05 23:54:25,575 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getStoryInEpic          =>  controllers.MyGadgetController.getStoryInEpic()
2017-01-05 23:54:25,575 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product                        =>  controllers.ProductController.productPage()
2017-01-05 23:54:25,576 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteProduct          =>  controllers.ProductController.deleteProduct()
2017-01-05 23:54:25,576 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertProduct          =>  controllers.ProductController.addProduct()
2017-01-05 23:54:25,576 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteCycle            =>  controllers.ProductController.deleteCycle()
2017-01-05 23:54:25,576 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertCycle            =>  controllers.ProductController.addCycle()
2017-01-05 23:54:25,577 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product/getall                 =>  controllers.ProductController.getAllProduct()
2017-01-05 23:54:25,577 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getEpicLinks                   =>  controllers.EpicController.getEpicLinks()
2017-01-05 23:54:25,577 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getassignee                    =>  controllers.AssigneeController.getAssigneeList()
2017-01-05 23:54:25,577 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listcycle                      =>  controllers.AssigneeController.getListCycleName()
2017-01-05 23:54:25,577 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /cycleExisting                  =>  controllers.AssigneeController.getListExistingCycle()
2017-01-05 23:54:25,578 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listproject                    =>  controllers.MyGadgetController.getProjectList()
2017-01-05 23:54:25,578 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /.*                             =>  controllers.ApplicationController.index()
2017-01-05 23:54:25,578 INFO [Scanner-0] n.NinjaDefault [NinjaDefault.java:441] 
 _______  .___ _______        ____.  _____   
 \      \ |   |\      \      |    | /  _  \  
 /   |   \|   |/   |   \     |    |/  /_\  \ 
/    |    \   /    |    \/\__|    /    |    \  http://www.ninjaframework.org
\____|__  /___\____|__  /\________\____|__  /  @ninjaframework
     web\/framework   \/                  \/   5.8.0

2017-01-05 23:54:25,579 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:53] Starting Ninja application...
2017-01-05 23:54:25,580 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:86] Ninja application started in 1ms
2017-01-05 23:54:30,233 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:93] Stopping Ninja application...
2017-01-05 23:54:30,240 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:97] Ninja application stopped in 7ms
2017-01-05 23:54:32,835 INFO [Scanner-0] n.u.NinjaModeHelper [NinjaModeHelper.java:90] Ninja is running in mode dev
2017-01-05 23:54:33,392 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:245] Successfully configured Logback.
2017-01-05 23:54:33,395 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:165] Enabling Ninja classic configuration
2017-01-05 23:54:34,087 INFO [Scanner-0] n.u.SwissKnife [SwissKnife.java:77] Could not load file conf/messages_en.properties (not a bad thing necessarily, but I am returing null)
2017-01-05 23:54:34,088 INFO [Scanner-0] n.i.MessagesImpl [MessagesImpl.java:205] Did not find conf/messages_en.properties but it was specified in application.conf. Using default language instead.
2017-01-05 23:54:34,141 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:116] -------------------------------------------------------------------
2017-01-05 23:54:34,142 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:117] Registered response template engines
2017-01-05 23:54:34,142 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:118] -------------------------------------------------------------------
2017-01-05 23:54:34,142 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/javascript  =>  ninja.template.TemplateEngineJsonP
2017-01-05 23:54:34,142 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/json        =>  ninja.template.TemplateEngineJson
2017-01-05 23:54:34,142 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/xml         =>  ninja.template.TemplateEngineXml
2017-01-05 23:54:34,143 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/html               =>  ninja.template.TemplateEngineFreemarker
2017-01-05 23:54:34,143 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/plain              =>  ninja.template.TemplateEngineText
2017-01-05 23:54:34,182 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1184] Using default implementation for ThreadExecutor
2017-01-05 23:54:34,185 INFO [Scanner-0] o.q.s.SimpleThreadPool [SimpleThreadPool.java:268] Job execution threads will use class loader of thread: Scanner-0
2017-01-05 23:54:34,217 INFO [Scanner-0] o.q.c.SchedulerSignalerImpl [SchedulerSignalerImpl.java:61] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2017-01-05 23:54:34,218 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:240] Quartz Scheduler v.2.2.1 created.
2017-01-05 23:54:34,220 INFO [Scanner-0] o.q.s.RAMJobStore [RAMJobStore.java:155] RAMJobStore initialized.
2017-01-05 23:54:34,221 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:305] Scheduler meta-data: Quartz Scheduler (v2.2.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2017-01-05 23:54:34,221 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1339] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2017-01-05 23:54:34,222 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1343] Quartz scheduler version: 2.2.1
2017-01-05 23:54:34,236 INFO [Scanner-0] h.s.SchedulerManagement [SchedulerManagement.java:49] started clear cache job
2017-01-05 23:54:34,238 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:109] ----------------------------------------------------------------------------
2017-01-05 23:54:34,238 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:110] Registered request bodyparser engines
2017-01-05 23:54:34,239 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:111] ----------------------------------------------------------------------------
2017-01-05 23:54:34,239 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/json                   =>  ninja.bodyparser.BodyParserEngineJson
2017-01-05 23:54:34,239 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/x-www-form-urlencoded  =>  ninja.bodyparser.BodyParserEnginePost
2017-01-05 23:54:34,239 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/xml                    =>  ninja.bodyparser.BodyParserEngineXml
2017-01-05 23:54:34,241 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:105] Ninja injector started in 840 ms.
2017-01-05 23:54:34,336 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:425] ------------------------------------------------------------------------------------------------------
2017-01-05 23:54:34,336 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:426] Registered routes
2017-01-05 23:54:34,336 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:427] ------------------------------------------------------------------------------------------------------
2017-01-05 23:54:34,336 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /login                          =>  controllers.LoginLogoutController.login()
2017-01-05 23:54:34,336 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /login                          =>  controllers.LoginLogoutController.loginPost()
2017-01-05 23:54:34,337 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /logout                         =>  controllers.LoginLogoutController.logout()
2017-01-05 23:54:34,337 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getUserInfo                    =>  controllers.ApplicationController.getUserInfo()
2017-01-05 23:54:34,337 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getProjectList                 =>  controllers.ApplicationController.getProjectList()
2017-01-05 23:54:34,337 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getGadgetList                  =>  controllers.GadgetController.getGadgetList()
2017-01-05 23:54:34,337 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /addNewGadget                   =>  controllers.GadgetController.addNewGadget()
2017-01-05 23:54:34,337 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateGadget                   =>  controllers.GadgetController.updateGadget()
2017-01-05 23:54:34,337 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /clearCacheGadget               =>  controllers.GadgetController.clearCacheGadget()
2017-01-05 23:54:34,337 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteGadget                   =>  controllers.GadgetController.deleteGadget()
2017-01-05 23:54:34,337 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /showSonarStatisticGadget       =>  controllers.GadgetController.showSonarStatisticGadget()
2017-01-05 23:54:34,337 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getIAComponents                =>  controllers.ApplicationController.getIAComponents()
2017-01-05 23:54:34,337 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getMetrics                     =>  controllers.ApplicationController.getMetricList()
2017-01-05 23:54:34,337 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getReleaseList                 =>  controllers.ApplicationController.getReleaseList()
2017-01-05 23:54:34,337 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getPeriodList                  =>  controllers.ApplicationController.getPeriodList()
2017-01-05 23:54:34,337 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getCruProjectList              =>  controllers.OverdueReviewReportController.getCruProjectList()
2017-01-05 23:54:34,338 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release                        =>  controllers.ConfigurationController.release()
2017-01-05 23:54:34,338 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release/ialist/{name}          =>  controllers.ConfigurationController.releaseURL()
2017-01-05 23:54:34,338 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release                        =>  controllers.ConfigurationController.releasePost()
2017-01-05 23:54:34,338 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/update                 =>  controllers.ConfigurationController.releaseUpdate()
2017-01-05 23:54:34,338 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/delete                 =>  controllers.ConfigurationController.releaseDelete()
2017-01-05 23:54:34,338 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /metric                         =>  controllers.ConfigurationController.metric()
2017-01-05 23:54:34,338 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric                         =>  controllers.ConfigurationController.metricPost()
2017-01-05 23:54:34,338 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/update                  =>  controllers.ConfigurationController.metricUpdate()
2017-01-05 23:54:34,339 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/delete                  =>  controllers.ConfigurationController.metricDelete()
2017-01-05 23:54:34,339 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /dashboard/new                  =>  controllers.DashboardController.new_dashboard()
2017-01-05 23:54:34,339 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /dashboard/new                  =>  controllers.DashboardController.new_dashboard_post()
2017-01-05 23:54:34,339 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteDashboard                =>  controllers.DashboardController.deleteDashboard()
2017-01-05 23:54:34,339 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardInfo               =>  controllers.DashboardController.getDashboardInfo()
2017-01-05 23:54:34,339 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardList               =>  controllers.DashboardController.getDashboardList()
2017-01-05 23:54:34,339 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateDashboardOption          =>  controllers.DashboardController.updateDashboardOption()
2017-01-05 23:54:34,340 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/webjars/{fileName: .*}  =>  ninja.AssetsController.serveWebJars()
2017-01-05 23:54:34,340 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/{fileName: .*}          =>  ninja.AssetsController.serveStatic()
2017-01-05 23:54:34,340 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getData                 =>  controllers.MyGadgetController.getDataGadget()
2017-01-05 23:54:34,340 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /gadget/save                    =>  controllers.MyGadgetController.insertOrUpdateGadget()
2017-01-05 23:54:34,341 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/gadgets                 =>  controllers.MyGadgetController.getGadgetsInDashboardId()
2017-01-05 23:54:34,341 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getStoryInEpic          =>  controllers.MyGadgetController.getStoryInEpic()
2017-01-05 23:54:34,341 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product                        =>  controllers.ProductController.productPage()
2017-01-05 23:54:34,341 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteProduct          =>  controllers.ProductController.deleteProduct()
2017-01-05 23:54:34,341 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertProduct          =>  controllers.ProductController.addProduct()
2017-01-05 23:54:34,341 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteCycle            =>  controllers.ProductController.deleteCycle()
2017-01-05 23:54:34,341 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertCycle            =>  controllers.ProductController.addCycle()
2017-01-05 23:54:34,342 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product/getall                 =>  controllers.ProductController.getAllProduct()
2017-01-05 23:54:34,342 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getEpicLinks                   =>  controllers.EpicController.getEpicLinks()
2017-01-05 23:54:34,342 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getassignee                    =>  controllers.AssigneeController.getAssigneeList()
2017-01-05 23:54:34,342 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listcycle                      =>  controllers.AssigneeController.getListCycleName()
2017-01-05 23:54:34,342 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /cycleExisting                  =>  controllers.AssigneeController.getListExistingCycle()
2017-01-05 23:54:34,342 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listproject                    =>  controllers.MyGadgetController.getProjectList()
2017-01-05 23:54:34,342 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /.*                             =>  controllers.ApplicationController.index()
2017-01-05 23:54:34,343 INFO [Scanner-0] n.NinjaDefault [NinjaDefault.java:441] 
 _______  .___ _______        ____.  _____   
 \      \ |   |\      \      |    | /  _  \  
 /   |   \|   |/   |   \     |    |/  /_\  \ 
/    |    \   /    |    \/\__|    /    |    \  http://www.ninjaframework.org
\____|__  /___\____|__  /\________\____|__  /  @ninjaframework
     web\/framework   \/                  \/   5.8.0

2017-01-05 23:54:34,343 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:53] Starting Ninja application...
2017-01-05 23:54:34,345 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:86] Ninja application started in 2ms
2017-01-05 23:54:36,676 INFO [qtp1186254299-65] o.m.d.cluster [SLF4JLogger.java:71] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2017-01-05 23:54:36,735 INFO [qtp1186254299-65] o.m.d.cluster [SLF4JLogger.java:71] No server chosen by ReadPreferenceServerSelector{readPreference=primary} from cluster description ClusterDescription{type=UNKNOWN, connectionMode=SINGLE, all=[ServerDescription{address=localhost:27017, type=UNKNOWN, state=CONNECTING}]}. Waiting for 30000 ms before timing out
2017-01-05 23:54:36,745 INFO [cluster-ClusterId{value='586e7a4c18e18211386ea11a', description='null'}-localhost:27017] o.m.d.connection [SLF4JLogger.java:71] Opened connection [connectionId{localValue:1, serverValue:75}] to localhost:27017
2017-01-05 23:54:36,746 INFO [cluster-ClusterId{value='586e7a4c18e18211386ea11a', description='null'}-localhost:27017] o.m.d.cluster [SLF4JLogger.java:71] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 1, 5]}, minWireVersion=0, maxWireVersion=4, maxDocumentSize=16777216, roundTripTimeNanos=486387}
2017-01-05 23:54:36,754 INFO [qtp1186254299-65] o.m.d.connection [SLF4JLogger.java:71] Opened connection [connectionId{localValue:2, serverValue:76}] to localhost:27017
2017-01-05 23:55:30,525 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:93] Stopping Ninja application...
2017-01-05 23:55:30,535 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:97] Ninja application stopped in 10ms
2017-01-05 23:55:33,024 INFO [Scanner-0] n.u.NinjaModeHelper [NinjaModeHelper.java:90] Ninja is running in mode dev
2017-01-05 23:55:33,079 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:245] Successfully configured Logback.
2017-01-05 23:55:33,082 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:165] Enabling Ninja classic configuration
2017-01-05 23:55:33,763 INFO [Scanner-0] n.u.SwissKnife [SwissKnife.java:77] Could not load file conf/messages_en.properties (not a bad thing necessarily, but I am returing null)
2017-01-05 23:55:33,763 INFO [Scanner-0] n.i.MessagesImpl [MessagesImpl.java:205] Did not find conf/messages_en.properties but it was specified in application.conf. Using default language instead.
2017-01-05 23:55:33,817 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:116] -------------------------------------------------------------------
2017-01-05 23:55:33,817 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:117] Registered response template engines
2017-01-05 23:55:33,817 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:118] -------------------------------------------------------------------
2017-01-05 23:55:33,817 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/javascript  =>  ninja.template.TemplateEngineJsonP
2017-01-05 23:55:33,818 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/json        =>  ninja.template.TemplateEngineJson
2017-01-05 23:55:33,818 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/xml         =>  ninja.template.TemplateEngineXml
2017-01-05 23:55:33,818 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/html               =>  ninja.template.TemplateEngineFreemarker
2017-01-05 23:55:33,818 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/plain              =>  ninja.template.TemplateEngineText
2017-01-05 23:55:33,860 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1184] Using default implementation for ThreadExecutor
2017-01-05 23:55:33,863 INFO [Scanner-0] o.q.s.SimpleThreadPool [SimpleThreadPool.java:268] Job execution threads will use class loader of thread: Scanner-0
2017-01-05 23:55:33,883 INFO [Scanner-0] o.q.c.SchedulerSignalerImpl [SchedulerSignalerImpl.java:61] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2017-01-05 23:55:33,885 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:240] Quartz Scheduler v.2.2.1 created.
2017-01-05 23:55:33,886 INFO [Scanner-0] o.q.s.RAMJobStore [RAMJobStore.java:155] RAMJobStore initialized.
2017-01-05 23:55:33,888 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:305] Scheduler meta-data: Quartz Scheduler (v2.2.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2017-01-05 23:55:33,888 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1339] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2017-01-05 23:55:33,889 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1343] Quartz scheduler version: 2.2.1
2017-01-05 23:55:33,908 INFO [Scanner-0] h.s.SchedulerManagement [SchedulerManagement.java:49] started clear cache job
2017-01-05 23:55:33,909 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:109] ----------------------------------------------------------------------------
2017-01-05 23:55:33,910 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:110] Registered request bodyparser engines
2017-01-05 23:55:33,910 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:111] ----------------------------------------------------------------------------
2017-01-05 23:55:33,910 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/json                   =>  ninja.bodyparser.BodyParserEngineJson
2017-01-05 23:55:33,910 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/x-www-form-urlencoded  =>  ninja.bodyparser.BodyParserEnginePost
2017-01-05 23:55:33,911 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/xml                    =>  ninja.bodyparser.BodyParserEngineXml
2017-01-05 23:55:33,915 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:105] Ninja injector started in 829 ms.
2017-01-05 23:55:34,015 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:425] ------------------------------------------------------------------------------------------------------
2017-01-05 23:55:34,015 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:426] Registered routes
2017-01-05 23:55:34,015 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:427] ------------------------------------------------------------------------------------------------------
2017-01-05 23:55:34,015 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /login                          =>  controllers.LoginLogoutController.login()
2017-01-05 23:55:34,016 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /login                          =>  controllers.LoginLogoutController.loginPost()
2017-01-05 23:55:34,016 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /logout                         =>  controllers.LoginLogoutController.logout()
2017-01-05 23:55:34,016 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getUserInfo                    =>  controllers.ApplicationController.getUserInfo()
2017-01-05 23:55:34,016 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getProjectList                 =>  controllers.ApplicationController.getProjectList()
2017-01-05 23:55:34,016 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getGadgetList                  =>  controllers.GadgetController.getGadgetList()
2017-01-05 23:55:34,016 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /addNewGadget                   =>  controllers.GadgetController.addNewGadget()
2017-01-05 23:55:34,017 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateGadget                   =>  controllers.GadgetController.updateGadget()
2017-01-05 23:55:34,017 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /clearCacheGadget               =>  controllers.GadgetController.clearCacheGadget()
2017-01-05 23:55:34,017 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteGadget                   =>  controllers.GadgetController.deleteGadget()
2017-01-05 23:55:34,017 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /showSonarStatisticGadget       =>  controllers.GadgetController.showSonarStatisticGadget()
2017-01-05 23:55:34,017 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getIAComponents                =>  controllers.ApplicationController.getIAComponents()
2017-01-05 23:55:34,017 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getMetrics                     =>  controllers.ApplicationController.getMetricList()
2017-01-05 23:55:34,017 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getReleaseList                 =>  controllers.ApplicationController.getReleaseList()
2017-01-05 23:55:34,018 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getPeriodList                  =>  controllers.ApplicationController.getPeriodList()
2017-01-05 23:55:34,018 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getCruProjectList              =>  controllers.OverdueReviewReportController.getCruProjectList()
2017-01-05 23:55:34,018 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release                        =>  controllers.ConfigurationController.release()
2017-01-05 23:55:34,018 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release/ialist/{name}          =>  controllers.ConfigurationController.releaseURL()
2017-01-05 23:55:34,018 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release                        =>  controllers.ConfigurationController.releasePost()
2017-01-05 23:55:34,018 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/update                 =>  controllers.ConfigurationController.releaseUpdate()
2017-01-05 23:55:34,018 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/delete                 =>  controllers.ConfigurationController.releaseDelete()
2017-01-05 23:55:34,019 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /metric                         =>  controllers.ConfigurationController.metric()
2017-01-05 23:55:34,019 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric                         =>  controllers.ConfigurationController.metricPost()
2017-01-05 23:55:34,019 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/update                  =>  controllers.ConfigurationController.metricUpdate()
2017-01-05 23:55:34,019 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/delete                  =>  controllers.ConfigurationController.metricDelete()
2017-01-05 23:55:34,019 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /dashboard/new                  =>  controllers.DashboardController.new_dashboard()
2017-01-05 23:55:34,019 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /dashboard/new                  =>  controllers.DashboardController.new_dashboard_post()
2017-01-05 23:55:34,019 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteDashboard                =>  controllers.DashboardController.deleteDashboard()
2017-01-05 23:55:34,020 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardInfo               =>  controllers.DashboardController.getDashboardInfo()
2017-01-05 23:55:34,020 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardList               =>  controllers.DashboardController.getDashboardList()
2017-01-05 23:55:34,020 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateDashboardOption          =>  controllers.DashboardController.updateDashboardOption()
2017-01-05 23:55:34,020 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/webjars/{fileName: .*}  =>  ninja.AssetsController.serveWebJars()
2017-01-05 23:55:34,021 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/{fileName: .*}          =>  ninja.AssetsController.serveStatic()
2017-01-05 23:55:34,021 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getData                 =>  controllers.MyGadgetController.getDataGadget()
2017-01-05 23:55:34,021 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /gadget/save                    =>  controllers.MyGadgetController.insertOrUpdateGadget()
2017-01-05 23:55:34,022 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/gadgets                 =>  controllers.MyGadgetController.getGadgetsInDashboardId()
2017-01-05 23:55:34,022 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getStoryInEpic          =>  controllers.MyGadgetController.getStoryInEpic()
2017-01-05 23:55:34,022 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product                        =>  controllers.ProductController.productPage()
2017-01-05 23:55:34,022 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteProduct          =>  controllers.ProductController.deleteProduct()
2017-01-05 23:55:34,022 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertProduct          =>  controllers.ProductController.addProduct()
2017-01-05 23:55:34,023 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteCycle            =>  controllers.ProductController.deleteCycle()
2017-01-05 23:55:34,023 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertCycle            =>  controllers.ProductController.addCycle()
2017-01-05 23:55:34,023 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product/getall                 =>  controllers.ProductController.getAllProduct()
2017-01-05 23:55:34,023 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getEpicLinks                   =>  controllers.EpicController.getEpicLinks()
2017-01-05 23:55:34,024 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getassignee                    =>  controllers.AssigneeController.getAssigneeList()
2017-01-05 23:55:34,025 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listcycle                      =>  controllers.AssigneeController.getListCycleName()
2017-01-05 23:55:34,026 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /cycleExisting                  =>  controllers.AssigneeController.getListExistingCycle()
2017-01-05 23:55:34,026 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listproject                    =>  controllers.MyGadgetController.getProjectList()
2017-01-05 23:55:34,026 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /.*                             =>  controllers.ApplicationController.index()
2017-01-05 23:55:34,027 INFO [Scanner-0] n.NinjaDefault [NinjaDefault.java:441] 
 _______  .___ _______        ____.  _____   
 \      \ |   |\      \      |    | /  _  \  
 /   |   \|   |/   |   \     |    |/  /_\  \ 
/    |    \   /    |    \/\__|    /    |    \  http://www.ninjaframework.org
\____|__  /___\____|__  /\________\____|__  /  @ninjaframework
     web\/framework   \/                  \/   5.8.0

2017-01-05 23:55:34,027 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:53] Starting Ninja application...
2017-01-05 23:55:34,030 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:86] Ninja application started in 3ms
2017-01-05 23:55:48,793 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:93] Stopping Ninja application...
2017-01-05 23:55:48,797 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:97] Ninja application stopped in 4ms
2017-01-05 23:55:51,817 INFO [Scanner-0] n.u.NinjaModeHelper [NinjaModeHelper.java:90] Ninja is running in mode dev
2017-01-05 23:55:51,876 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:245] Successfully configured Logback.
2017-01-05 23:55:51,878 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:165] Enabling Ninja classic configuration
2017-01-05 23:55:52,545 INFO [Scanner-0] n.u.SwissKnife [SwissKnife.java:77] Could not load file conf/messages_en.properties (not a bad thing necessarily, but I am returing null)
2017-01-05 23:55:52,546 INFO [Scanner-0] n.i.MessagesImpl [MessagesImpl.java:205] Did not find conf/messages_en.properties but it was specified in application.conf. Using default language instead.
2017-01-05 23:55:52,597 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:116] -------------------------------------------------------------------
2017-01-05 23:55:52,598 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:117] Registered response template engines
2017-01-05 23:55:52,598 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:118] -------------------------------------------------------------------
2017-01-05 23:55:52,598 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/javascript  =>  ninja.template.TemplateEngineJsonP
2017-01-05 23:55:52,598 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/json        =>  ninja.template.TemplateEngineJson
2017-01-05 23:55:52,599 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/xml         =>  ninja.template.TemplateEngineXml
2017-01-05 23:55:52,599 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/html               =>  ninja.template.TemplateEngineFreemarker
2017-01-05 23:55:52,599 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/plain              =>  ninja.template.TemplateEngineText
2017-01-05 23:55:52,647 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1184] Using default implementation for ThreadExecutor
2017-01-05 23:55:52,651 INFO [Scanner-0] o.q.s.SimpleThreadPool [SimpleThreadPool.java:268] Job execution threads will use class loader of thread: Scanner-0
2017-01-05 23:55:52,681 INFO [Scanner-0] o.q.c.SchedulerSignalerImpl [SchedulerSignalerImpl.java:61] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2017-01-05 23:55:52,683 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:240] Quartz Scheduler v.2.2.1 created.
2017-01-05 23:55:52,686 INFO [Scanner-0] o.q.s.RAMJobStore [RAMJobStore.java:155] RAMJobStore initialized.
2017-01-05 23:55:52,689 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:305] Scheduler meta-data: Quartz Scheduler (v2.2.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2017-01-05 23:55:52,689 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1339] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2017-01-05 23:55:52,690 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1343] Quartz scheduler version: 2.2.1
2017-01-05 23:55:52,711 INFO [Scanner-0] h.s.SchedulerManagement [SchedulerManagement.java:49] started clear cache job
2017-01-05 23:55:52,713 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:109] ----------------------------------------------------------------------------
2017-01-05 23:55:52,713 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:110] Registered request bodyparser engines
2017-01-05 23:55:52,714 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:111] ----------------------------------------------------------------------------
2017-01-05 23:55:52,714 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/json                   =>  ninja.bodyparser.BodyParserEngineJson
2017-01-05 23:55:52,714 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/x-www-form-urlencoded  =>  ninja.bodyparser.BodyParserEnginePost
2017-01-05 23:55:52,715 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/xml                    =>  ninja.bodyparser.BodyParserEngineXml
2017-01-05 23:55:52,718 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:105] Ninja injector started in 836 ms.
2017-01-05 23:55:52,857 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:425] ------------------------------------------------------------------------------------------------------
2017-01-05 23:55:52,857 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:426] Registered routes
2017-01-05 23:55:52,857 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:427] ------------------------------------------------------------------------------------------------------
2017-01-05 23:55:52,857 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /login                          =>  controllers.LoginLogoutController.login()
2017-01-05 23:55:52,857 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /login                          =>  controllers.LoginLogoutController.loginPost()
2017-01-05 23:55:52,858 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /logout                         =>  controllers.LoginLogoutController.logout()
2017-01-05 23:55:52,858 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getUserInfo                    =>  controllers.ApplicationController.getUserInfo()
2017-01-05 23:55:52,858 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getProjectList                 =>  controllers.ApplicationController.getProjectList()
2017-01-05 23:55:52,858 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getGadgetList                  =>  controllers.GadgetController.getGadgetList()
2017-01-05 23:55:52,858 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /addNewGadget                   =>  controllers.GadgetController.addNewGadget()
2017-01-05 23:55:52,858 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateGadget                   =>  controllers.GadgetController.updateGadget()
2017-01-05 23:55:52,858 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /clearCacheGadget               =>  controllers.GadgetController.clearCacheGadget()
2017-01-05 23:55:52,859 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteGadget                   =>  controllers.GadgetController.deleteGadget()
2017-01-05 23:55:52,859 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /showSonarStatisticGadget       =>  controllers.GadgetController.showSonarStatisticGadget()
2017-01-05 23:55:52,859 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getIAComponents                =>  controllers.ApplicationController.getIAComponents()
2017-01-05 23:55:52,859 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getMetrics                     =>  controllers.ApplicationController.getMetricList()
2017-01-05 23:55:52,859 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getReleaseList                 =>  controllers.ApplicationController.getReleaseList()
2017-01-05 23:55:52,859 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getPeriodList                  =>  controllers.ApplicationController.getPeriodList()
2017-01-05 23:55:52,860 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getCruProjectList              =>  controllers.OverdueReviewReportController.getCruProjectList()
2017-01-05 23:55:52,860 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release                        =>  controllers.ConfigurationController.release()
2017-01-05 23:55:52,860 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release/ialist/{name}          =>  controllers.ConfigurationController.releaseURL()
2017-01-05 23:55:52,860 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release                        =>  controllers.ConfigurationController.releasePost()
2017-01-05 23:55:52,861 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/update                 =>  controllers.ConfigurationController.releaseUpdate()
2017-01-05 23:55:52,861 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/delete                 =>  controllers.ConfigurationController.releaseDelete()
2017-01-05 23:55:52,861 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /metric                         =>  controllers.ConfigurationController.metric()
2017-01-05 23:55:52,861 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric                         =>  controllers.ConfigurationController.metricPost()
2017-01-05 23:55:52,861 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/update                  =>  controllers.ConfigurationController.metricUpdate()
2017-01-05 23:55:52,862 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/delete                  =>  controllers.ConfigurationController.metricDelete()
2017-01-05 23:55:52,862 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /dashboard/new                  =>  controllers.DashboardController.new_dashboard()
2017-01-05 23:55:52,862 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /dashboard/new                  =>  controllers.DashboardController.new_dashboard_post()
2017-01-05 23:55:52,862 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteDashboard                =>  controllers.DashboardController.deleteDashboard()
2017-01-05 23:55:52,862 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardInfo               =>  controllers.DashboardController.getDashboardInfo()
2017-01-05 23:55:52,863 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardList               =>  controllers.DashboardController.getDashboardList()
2017-01-05 23:55:52,863 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateDashboardOption          =>  controllers.DashboardController.updateDashboardOption()
2017-01-05 23:55:52,863 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/webjars/{fileName: .*}  =>  ninja.AssetsController.serveWebJars()
2017-01-05 23:55:52,864 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/{fileName: .*}          =>  ninja.AssetsController.serveStatic()
2017-01-05 23:55:52,864 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getData                 =>  controllers.MyGadgetController.getDataGadget()
2017-01-05 23:55:52,865 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /gadget/save                    =>  controllers.MyGadgetController.insertOrUpdateGadget()
2017-01-05 23:55:52,865 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/gadgets                 =>  controllers.MyGadgetController.getGadgetsInDashboardId()
2017-01-05 23:55:52,865 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getStoryInEpic          =>  controllers.MyGadgetController.getStoryInEpic()
2017-01-05 23:55:52,865 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product                        =>  controllers.ProductController.productPage()
2017-01-05 23:55:52,865 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteProduct          =>  controllers.ProductController.deleteProduct()
2017-01-05 23:55:52,865 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertProduct          =>  controllers.ProductController.addProduct()
2017-01-05 23:55:52,865 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteCycle            =>  controllers.ProductController.deleteCycle()
2017-01-05 23:55:52,866 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertCycle            =>  controllers.ProductController.addCycle()
2017-01-05 23:55:52,866 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product/getall                 =>  controllers.ProductController.getAllProduct()
2017-01-05 23:55:52,866 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getEpicLinks                   =>  controllers.EpicController.getEpicLinks()
2017-01-05 23:55:52,866 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getassignee                    =>  controllers.AssigneeController.getAssigneeList()
2017-01-05 23:55:52,866 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listcycle                      =>  controllers.AssigneeController.getListCycleName()
2017-01-05 23:55:52,866 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /cycleExisting                  =>  controllers.AssigneeController.getListExistingCycle()
2017-01-05 23:55:52,867 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listproject                    =>  controllers.MyGadgetController.getProjectList()
2017-01-05 23:55:52,867 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /.*                             =>  controllers.ApplicationController.index()
2017-01-05 23:55:52,868 INFO [Scanner-0] n.NinjaDefault [NinjaDefault.java:441] 
 _______  .___ _______        ____.  _____   
 \      \ |   |\      \      |    | /  _  \  
 /   |   \|   |/   |   \     |    |/  /_\  \ 
/    |    \   /    |    \/\__|    /    |    \  http://www.ninjaframework.org
\____|__  /___\____|__  /\________\____|__  /  @ninjaframework
     web\/framework   \/                  \/   5.8.0

2017-01-05 23:55:52,868 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:53] Starting Ninja application...
2017-01-05 23:55:52,870 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:86] Ninja application started in 2ms
2017-01-05 23:55:55,900 INFO [qtp1186254299-65] o.m.d.cluster [SLF4JLogger.java:71] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2017-01-05 23:55:55,960 INFO [qtp1186254299-65] o.m.d.cluster [SLF4JLogger.java:71] No server chosen by ReadPreferenceServerSelector{readPreference=primary} from cluster description ClusterDescription{type=UNKNOWN, connectionMode=SINGLE, all=[ServerDescription{address=localhost:27017, type=UNKNOWN, state=CONNECTING}]}. Waiting for 30000 ms before timing out
2017-01-05 23:55:55,974 INFO [cluster-ClusterId{value='586e7a9b18e1821138b830d9', description='null'}-localhost:27017] o.m.d.connection [SLF4JLogger.java:71] Opened connection [connectionId{localValue:1, serverValue:77}] to localhost:27017
2017-01-05 23:55:55,976 INFO [cluster-ClusterId{value='586e7a9b18e1821138b830d9', description='null'}-localhost:27017] o.m.d.cluster [SLF4JLogger.java:71] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 1, 5]}, minWireVersion=0, maxWireVersion=4, maxDocumentSize=16777216, roundTripTimeNanos=630518}
2017-01-05 23:55:55,983 INFO [qtp1186254299-65] o.m.d.connection [SLF4JLogger.java:71] Opened connection [connectionId{localValue:2, serverValue:78}] to localhost:27017
2017-01-05 23:59:07,454 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:93] Stopping Ninja application...
2017-01-05 23:59:07,457 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:97] Ninja application stopped in 3ms
2017-01-05 23:59:10,289 INFO [Scanner-0] n.u.NinjaModeHelper [NinjaModeHelper.java:90] Ninja is running in mode dev
2017-01-05 23:59:10,335 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:245] Successfully configured Logback.
2017-01-05 23:59:10,337 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:165] Enabling Ninja classic configuration
2017-01-05 23:59:11,069 INFO [Scanner-0] n.u.SwissKnife [SwissKnife.java:77] Could not load file conf/messages_en.properties (not a bad thing necessarily, but I am returing null)
2017-01-05 23:59:11,069 INFO [Scanner-0] n.i.MessagesImpl [MessagesImpl.java:205] Did not find conf/messages_en.properties but it was specified in application.conf. Using default language instead.
2017-01-05 23:59:11,131 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:116] -------------------------------------------------------------------
2017-01-05 23:59:11,131 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:117] Registered response template engines
2017-01-05 23:59:11,132 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:118] -------------------------------------------------------------------
2017-01-05 23:59:11,132 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/javascript  =>  ninja.template.TemplateEngineJsonP
2017-01-05 23:59:11,132 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/json        =>  ninja.template.TemplateEngineJson
2017-01-05 23:59:11,132 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/xml         =>  ninja.template.TemplateEngineXml
2017-01-05 23:59:11,133 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/html               =>  ninja.template.TemplateEngineFreemarker
2017-01-05 23:59:11,133 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/plain              =>  ninja.template.TemplateEngineText
2017-01-05 23:59:11,174 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1184] Using default implementation for ThreadExecutor
2017-01-05 23:59:11,177 INFO [Scanner-0] o.q.s.SimpleThreadPool [SimpleThreadPool.java:268] Job execution threads will use class loader of thread: Scanner-0
2017-01-05 23:59:11,203 INFO [Scanner-0] o.q.c.SchedulerSignalerImpl [SchedulerSignalerImpl.java:61] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2017-01-05 23:59:11,208 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:240] Quartz Scheduler v.2.2.1 created.
2017-01-05 23:59:11,210 INFO [Scanner-0] o.q.s.RAMJobStore [RAMJobStore.java:155] RAMJobStore initialized.
2017-01-05 23:59:11,212 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:305] Scheduler meta-data: Quartz Scheduler (v2.2.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2017-01-05 23:59:11,212 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1339] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2017-01-05 23:59:11,213 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1343] Quartz scheduler version: 2.2.1
2017-01-05 23:59:11,230 INFO [Scanner-0] h.s.SchedulerManagement [SchedulerManagement.java:49] started clear cache job
2017-01-05 23:59:11,232 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:109] ----------------------------------------------------------------------------
2017-01-05 23:59:11,233 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:110] Registered request bodyparser engines
2017-01-05 23:59:11,233 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:111] ----------------------------------------------------------------------------
2017-01-05 23:59:11,234 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/json                   =>  ninja.bodyparser.BodyParserEngineJson
2017-01-05 23:59:11,234 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/x-www-form-urlencoded  =>  ninja.bodyparser.BodyParserEnginePost
2017-01-05 23:59:11,234 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/xml                    =>  ninja.bodyparser.BodyParserEngineXml
2017-01-05 23:59:11,237 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:105] Ninja injector started in 895 ms.
2017-01-05 23:59:11,336 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:425] ------------------------------------------------------------------------------------------------------
2017-01-05 23:59:11,336 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:426] Registered routes
2017-01-05 23:59:11,336 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:427] ------------------------------------------------------------------------------------------------------
2017-01-05 23:59:11,336 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /login                          =>  controllers.LoginLogoutController.login()
2017-01-05 23:59:11,336 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /login                          =>  controllers.LoginLogoutController.loginPost()
2017-01-05 23:59:11,337 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /logout                         =>  controllers.LoginLogoutController.logout()
2017-01-05 23:59:11,337 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getUserInfo                    =>  controllers.ApplicationController.getUserInfo()
2017-01-05 23:59:11,337 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getProjectList                 =>  controllers.ApplicationController.getProjectList()
2017-01-05 23:59:11,337 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getGadgetList                  =>  controllers.GadgetController.getGadgetList()
2017-01-05 23:59:11,337 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /addNewGadget                   =>  controllers.GadgetController.addNewGadget()
2017-01-05 23:59:11,337 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateGadget                   =>  controllers.GadgetController.updateGadget()
2017-01-05 23:59:11,337 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /clearCacheGadget               =>  controllers.GadgetController.clearCacheGadget()
2017-01-05 23:59:11,338 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteGadget                   =>  controllers.GadgetController.deleteGadget()
2017-01-05 23:59:11,338 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /showSonarStatisticGadget       =>  controllers.GadgetController.showSonarStatisticGadget()
2017-01-05 23:59:11,338 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getIAComponents                =>  controllers.ApplicationController.getIAComponents()
2017-01-05 23:59:11,338 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getMetrics                     =>  controllers.ApplicationController.getMetricList()
2017-01-05 23:59:11,338 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getReleaseList                 =>  controllers.ApplicationController.getReleaseList()
2017-01-05 23:59:11,338 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getPeriodList                  =>  controllers.ApplicationController.getPeriodList()
2017-01-05 23:59:11,338 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getCruProjectList              =>  controllers.OverdueReviewReportController.getCruProjectList()
2017-01-05 23:59:11,338 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release                        =>  controllers.ConfigurationController.release()
2017-01-05 23:59:11,339 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release/ialist/{name}          =>  controllers.ConfigurationController.releaseURL()
2017-01-05 23:59:11,339 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release                        =>  controllers.ConfigurationController.releasePost()
2017-01-05 23:59:11,339 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/update                 =>  controllers.ConfigurationController.releaseUpdate()
2017-01-05 23:59:11,339 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/delete                 =>  controllers.ConfigurationController.releaseDelete()
2017-01-05 23:59:11,339 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /metric                         =>  controllers.ConfigurationController.metric()
2017-01-05 23:59:11,339 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric                         =>  controllers.ConfigurationController.metricPost()
2017-01-05 23:59:11,339 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/update                  =>  controllers.ConfigurationController.metricUpdate()
2017-01-05 23:59:11,340 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/delete                  =>  controllers.ConfigurationController.metricDelete()
2017-01-05 23:59:11,340 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /dashboard/new                  =>  controllers.DashboardController.new_dashboard()
2017-01-05 23:59:11,340 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /dashboard/new                  =>  controllers.DashboardController.new_dashboard_post()
2017-01-05 23:59:11,340 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteDashboard                =>  controllers.DashboardController.deleteDashboard()
2017-01-05 23:59:11,340 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardInfo               =>  controllers.DashboardController.getDashboardInfo()
2017-01-05 23:59:11,340 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardList               =>  controllers.DashboardController.getDashboardList()
2017-01-05 23:59:11,340 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateDashboardOption          =>  controllers.DashboardController.updateDashboardOption()
2017-01-05 23:59:11,341 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/webjars/{fileName: .*}  =>  ninja.AssetsController.serveWebJars()
2017-01-05 23:59:11,341 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/{fileName: .*}          =>  ninja.AssetsController.serveStatic()
2017-01-05 23:59:11,341 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getData                 =>  controllers.MyGadgetController.getDataGadget()
2017-01-05 23:59:11,341 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /gadget/save                    =>  controllers.MyGadgetController.insertOrUpdateGadget()
2017-01-05 23:59:11,341 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/gadgets                 =>  controllers.MyGadgetController.getGadgetsInDashboardId()
2017-01-05 23:59:11,341 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getStoryInEpic          =>  controllers.MyGadgetController.getStoryInEpic()
2017-01-05 23:59:11,342 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product                        =>  controllers.ProductController.productPage()
2017-01-05 23:59:11,342 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteProduct          =>  controllers.ProductController.deleteProduct()
2017-01-05 23:59:11,342 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertProduct          =>  controllers.ProductController.addProduct()
2017-01-05 23:59:11,342 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteCycle            =>  controllers.ProductController.deleteCycle()
2017-01-05 23:59:11,342 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertCycle            =>  controllers.ProductController.addCycle()
2017-01-05 23:59:11,343 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product/getall                 =>  controllers.ProductController.getAllProduct()
2017-01-05 23:59:11,343 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getEpicLinks                   =>  controllers.EpicController.getEpicLinks()
2017-01-05 23:59:11,343 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getassignee                    =>  controllers.AssigneeController.getAssigneeList()
2017-01-05 23:59:11,343 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listcycle                      =>  controllers.AssigneeController.getListCycleName()
2017-01-05 23:59:11,343 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /cycleExisting                  =>  controllers.AssigneeController.getListExistingCycle()
2017-01-05 23:59:11,343 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listproject                    =>  controllers.MyGadgetController.getProjectList()
2017-01-05 23:59:11,343 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /.*                             =>  controllers.ApplicationController.index()
2017-01-05 23:59:11,344 INFO [Scanner-0] n.NinjaDefault [NinjaDefault.java:441] 
 _______  .___ _______        ____.  _____   
 \      \ |   |\      \      |    | /  _  \  
 /   |   \|   |/   |   \     |    |/  /_\  \ 
/    |    \   /    |    \/\__|    /    |    \  http://www.ninjaframework.org
\____|__  /___\____|__  /\________\____|__  /  @ninjaframework
     web\/framework   \/                  \/   5.8.0

2017-01-05 23:59:11,344 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:53] Starting Ninja application...
2017-01-05 23:59:11,345 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:86] Ninja application started in 1ms
2017-01-05 23:59:45,287 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:93] Stopping Ninja application...
2017-01-05 23:59:45,294 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:97] Ninja application stopped in 7ms
2017-01-05 23:59:48,134 INFO [Scanner-0] n.u.NinjaModeHelper [NinjaModeHelper.java:90] Ninja is running in mode dev
2017-01-05 23:59:48,187 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:245] Successfully configured Logback.
2017-01-05 23:59:48,190 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:165] Enabling Ninja classic configuration
2017-01-05 23:59:49,256 INFO [Scanner-0] n.u.SwissKnife [SwissKnife.java:77] Could not load file conf/messages_en.properties (not a bad thing necessarily, but I am returing null)
2017-01-05 23:59:49,257 INFO [Scanner-0] n.i.MessagesImpl [MessagesImpl.java:205] Did not find conf/messages_en.properties but it was specified in application.conf. Using default language instead.
2017-01-05 23:59:49,322 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:116] -------------------------------------------------------------------
2017-01-05 23:59:49,322 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:117] Registered response template engines
2017-01-05 23:59:49,322 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:118] -------------------------------------------------------------------
2017-01-05 23:59:49,323 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/javascript  =>  ninja.template.TemplateEngineJsonP
2017-01-05 23:59:49,323 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/json        =>  ninja.template.TemplateEngineJson
2017-01-05 23:59:49,323 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/xml         =>  ninja.template.TemplateEngineXml
2017-01-05 23:59:49,323 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/html               =>  ninja.template.TemplateEngineFreemarker
2017-01-05 23:59:49,323 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/plain              =>  ninja.template.TemplateEngineText
2017-01-05 23:59:49,364 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1184] Using default implementation for ThreadExecutor
2017-01-05 23:59:49,367 INFO [Scanner-0] o.q.s.SimpleThreadPool [SimpleThreadPool.java:268] Job execution threads will use class loader of thread: Scanner-0
2017-01-05 23:59:49,391 INFO [Scanner-0] o.q.c.SchedulerSignalerImpl [SchedulerSignalerImpl.java:61] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2017-01-05 23:59:49,392 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:240] Quartz Scheduler v.2.2.1 created.
2017-01-05 23:59:49,394 INFO [Scanner-0] o.q.s.RAMJobStore [RAMJobStore.java:155] RAMJobStore initialized.
2017-01-05 23:59:49,395 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:305] Scheduler meta-data: Quartz Scheduler (v2.2.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2017-01-05 23:59:49,395 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1339] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2017-01-05 23:59:49,396 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1343] Quartz scheduler version: 2.2.1
2017-01-05 23:59:49,406 INFO [Scanner-0] h.s.SchedulerManagement [SchedulerManagement.java:49] started clear cache job
2017-01-05 23:59:49,407 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:109] ----------------------------------------------------------------------------
2017-01-05 23:59:49,407 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:110] Registered request bodyparser engines
2017-01-05 23:59:49,408 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:111] ----------------------------------------------------------------------------
2017-01-05 23:59:49,408 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/json                   =>  ninja.bodyparser.BodyParserEngineJson
2017-01-05 23:59:49,408 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/x-www-form-urlencoded  =>  ninja.bodyparser.BodyParserEnginePost
2017-01-05 23:59:49,409 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/xml                    =>  ninja.bodyparser.BodyParserEngineXml
2017-01-05 23:59:49,411 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:105] Ninja injector started in 1217 ms.
2017-01-05 23:59:49,540 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:425] ------------------------------------------------------------------------------------------------------
2017-01-05 23:59:49,541 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:426] Registered routes
2017-01-05 23:59:49,541 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:427] ------------------------------------------------------------------------------------------------------
2017-01-05 23:59:49,541 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /login                          =>  controllers.LoginLogoutController.login()
2017-01-05 23:59:49,541 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /login                          =>  controllers.LoginLogoutController.loginPost()
2017-01-05 23:59:49,541 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /logout                         =>  controllers.LoginLogoutController.logout()
2017-01-05 23:59:49,541 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getUserInfo                    =>  controllers.ApplicationController.getUserInfo()
2017-01-05 23:59:49,542 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getProjectList                 =>  controllers.ApplicationController.getProjectList()
2017-01-05 23:59:49,542 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getGadgetList                  =>  controllers.GadgetController.getGadgetList()
2017-01-05 23:59:49,542 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /addNewGadget                   =>  controllers.GadgetController.addNewGadget()
2017-01-05 23:59:49,542 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateGadget                   =>  controllers.GadgetController.updateGadget()
2017-01-05 23:59:49,542 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /clearCacheGadget               =>  controllers.GadgetController.clearCacheGadget()
2017-01-05 23:59:49,542 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteGadget                   =>  controllers.GadgetController.deleteGadget()
2017-01-05 23:59:49,543 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /showSonarStatisticGadget       =>  controllers.GadgetController.showSonarStatisticGadget()
2017-01-05 23:59:49,543 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getIAComponents                =>  controllers.ApplicationController.getIAComponents()
2017-01-05 23:59:49,543 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getMetrics                     =>  controllers.ApplicationController.getMetricList()
2017-01-05 23:59:49,543 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getReleaseList                 =>  controllers.ApplicationController.getReleaseList()
2017-01-05 23:59:49,543 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getPeriodList                  =>  controllers.ApplicationController.getPeriodList()
2017-01-05 23:59:49,544 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getCruProjectList              =>  controllers.OverdueReviewReportController.getCruProjectList()
2017-01-05 23:59:49,544 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release                        =>  controllers.ConfigurationController.release()
2017-01-05 23:59:49,544 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release/ialist/{name}          =>  controllers.ConfigurationController.releaseURL()
2017-01-05 23:59:49,544 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release                        =>  controllers.ConfigurationController.releasePost()
2017-01-05 23:59:49,544 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/update                 =>  controllers.ConfigurationController.releaseUpdate()
2017-01-05 23:59:49,544 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/delete                 =>  controllers.ConfigurationController.releaseDelete()
2017-01-05 23:59:49,544 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /metric                         =>  controllers.ConfigurationController.metric()
2017-01-05 23:59:49,545 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric                         =>  controllers.ConfigurationController.metricPost()
2017-01-05 23:59:49,545 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/update                  =>  controllers.ConfigurationController.metricUpdate()
2017-01-05 23:59:49,545 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/delete                  =>  controllers.ConfigurationController.metricDelete()
2017-01-05 23:59:49,545 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /dashboard/new                  =>  controllers.DashboardController.new_dashboard()
2017-01-05 23:59:49,545 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /dashboard/new                  =>  controllers.DashboardController.new_dashboard_post()
2017-01-05 23:59:49,545 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteDashboard                =>  controllers.DashboardController.deleteDashboard()
2017-01-05 23:59:49,545 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardInfo               =>  controllers.DashboardController.getDashboardInfo()
2017-01-05 23:59:49,546 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardList               =>  controllers.DashboardController.getDashboardList()
2017-01-05 23:59:49,546 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateDashboardOption          =>  controllers.DashboardController.updateDashboardOption()
2017-01-05 23:59:49,547 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/webjars/{fileName: .*}  =>  ninja.AssetsController.serveWebJars()
2017-01-05 23:59:49,547 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/{fileName: .*}          =>  ninja.AssetsController.serveStatic()
2017-01-05 23:59:49,548 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getData                 =>  controllers.MyGadgetController.getDataGadget()
2017-01-05 23:59:49,548 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /gadget/save                    =>  controllers.MyGadgetController.insertOrUpdateGadget()
2017-01-05 23:59:49,549 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/gadgets                 =>  controllers.MyGadgetController.getGadgetsInDashboardId()
2017-01-05 23:59:49,549 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getStoryInEpic          =>  controllers.MyGadgetController.getStoryInEpic()
2017-01-05 23:59:49,549 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product                        =>  controllers.ProductController.productPage()
2017-01-05 23:59:49,550 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteProduct          =>  controllers.ProductController.deleteProduct()
2017-01-05 23:59:49,550 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertProduct          =>  controllers.ProductController.addProduct()
2017-01-05 23:59:49,550 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteCycle            =>  controllers.ProductController.deleteCycle()
2017-01-05 23:59:49,550 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertCycle            =>  controllers.ProductController.addCycle()
2017-01-05 23:59:49,551 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product/getall                 =>  controllers.ProductController.getAllProduct()
2017-01-05 23:59:49,551 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getEpicLinks                   =>  controllers.EpicController.getEpicLinks()
2017-01-05 23:59:49,551 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getassignee                    =>  controllers.AssigneeController.getAssigneeList()
2017-01-05 23:59:49,552 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listcycle                      =>  controllers.AssigneeController.getListCycleName()
2017-01-05 23:59:49,552 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /cycleExisting                  =>  controllers.AssigneeController.getListExistingCycle()
2017-01-05 23:59:49,552 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listproject                    =>  controllers.MyGadgetController.getProjectList()
2017-01-05 23:59:49,553 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /.*                             =>  controllers.ApplicationController.index()
2017-01-05 23:59:49,553 INFO [Scanner-0] n.NinjaDefault [NinjaDefault.java:441] 
 _______  .___ _______        ____.  _____   
 \      \ |   |\      \      |    | /  _  \  
 /   |   \|   |/   |   \     |    |/  /_\  \ 
/    |    \   /    |    \/\__|    /    |    \  http://www.ninjaframework.org
\____|__  /___\____|__  /\________\____|__  /  @ninjaframework
     web\/framework   \/                  \/   5.8.0

2017-01-05 23:59:49,554 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:53] Starting Ninja application...
2017-01-05 23:59:49,558 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:86] Ninja application started in 4ms
2017-01-05 23:59:54,680 INFO [qtp1186254299-110] o.m.d.cluster [SLF4JLogger.java:71] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2017-01-05 23:59:54,752 INFO [qtp1186254299-110] o.m.d.cluster [SLF4JLogger.java:71] No server chosen by ReadPreferenceServerSelector{readPreference=primary} from cluster description ClusterDescription{type=UNKNOWN, connectionMode=SINGLE, all=[ServerDescription{address=localhost:27017, type=UNKNOWN, state=CONNECTING}]}. Waiting for 30000 ms before timing out
2017-01-05 23:59:54,766 INFO [cluster-ClusterId{value='586e7b8a18e182113831fc12', description='null'}-localhost:27017] o.m.d.connection [SLF4JLogger.java:71] Opened connection [connectionId{localValue:1, serverValue:79}] to localhost:27017
2017-01-05 23:59:54,768 INFO [cluster-ClusterId{value='586e7b8a18e182113831fc12', description='null'}-localhost:27017] o.m.d.cluster [SLF4JLogger.java:71] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 1, 5]}, minWireVersion=0, maxWireVersion=4, maxDocumentSize=16777216, roundTripTimeNanos=633195}
2017-01-05 23:59:54,775 INFO [qtp1186254299-110] o.m.d.connection [SLF4JLogger.java:71] Opened connection [connectionId{localValue:2, serverValue:80}] to localhost:27017
2017-01-06 00:00:09,880 INFO [Scanner-0] n.u.NinjaModeHelper [NinjaModeHelper.java:90] Ninja is running in mode dev
2017-01-06 00:00:09,935 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:245] Successfully configured Logback.
2017-01-06 00:00:09,937 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:165] Enabling Ninja classic configuration
2017-01-06 00:00:10,640 INFO [Scanner-0] n.u.SwissKnife [SwissKnife.java:77] Could not load file conf/messages_en.properties (not a bad thing necessarily, but I am returing null)
2017-01-06 00:00:10,641 INFO [Scanner-0] n.i.MessagesImpl [MessagesImpl.java:205] Did not find conf/messages_en.properties but it was specified in application.conf. Using default language instead.
2017-01-06 00:00:10,696 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:116] -------------------------------------------------------------------
2017-01-06 00:00:10,697 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:117] Registered response template engines
2017-01-06 00:00:10,697 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:118] -------------------------------------------------------------------
2017-01-06 00:00:10,697 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/javascript  =>  ninja.template.TemplateEngineJsonP
2017-01-06 00:00:10,697 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/json        =>  ninja.template.TemplateEngineJson
2017-01-06 00:00:10,698 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/xml         =>  ninja.template.TemplateEngineXml
2017-01-06 00:00:10,698 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/html               =>  ninja.template.TemplateEngineFreemarker
2017-01-06 00:00:10,698 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/plain              =>  ninja.template.TemplateEngineText
2017-01-06 00:00:10,746 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1184] Using default implementation for ThreadExecutor
2017-01-06 00:00:10,751 INFO [Scanner-0] o.q.s.SimpleThreadPool [SimpleThreadPool.java:268] Job execution threads will use class loader of thread: Scanner-0
2017-01-06 00:00:10,781 INFO [Scanner-0] o.q.c.SchedulerSignalerImpl [SchedulerSignalerImpl.java:61] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2017-01-06 00:00:10,783 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:240] Quartz Scheduler v.2.2.1 created.
2017-01-06 00:00:10,788 INFO [Scanner-0] o.q.s.RAMJobStore [RAMJobStore.java:155] RAMJobStore initialized.
2017-01-06 00:00:10,790 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:305] Scheduler meta-data: Quartz Scheduler (v2.2.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2017-01-06 00:00:10,790 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1339] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2017-01-06 00:00:10,791 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1343] Quartz scheduler version: 2.2.1
2017-01-06 00:00:10,808 INFO [Scanner-0] h.s.SchedulerManagement [SchedulerManagement.java:49] started clear cache job
2017-01-06 00:00:10,813 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:109] ----------------------------------------------------------------------------
2017-01-06 00:00:10,814 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:110] Registered request bodyparser engines
2017-01-06 00:00:10,814 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:111] ----------------------------------------------------------------------------
2017-01-06 00:00:10,814 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/json                   =>  ninja.bodyparser.BodyParserEngineJson
2017-01-06 00:00:10,814 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/x-www-form-urlencoded  =>  ninja.bodyparser.BodyParserEnginePost
2017-01-06 00:00:10,815 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/xml                    =>  ninja.bodyparser.BodyParserEngineXml
2017-01-06 00:00:10,817 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:105] Ninja injector started in 872 ms.
2017-01-06 00:00:10,960 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:425] ------------------------------------------------------------------------------------------------------
2017-01-06 00:00:10,960 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:426] Registered routes
2017-01-06 00:00:10,960 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:427] ------------------------------------------------------------------------------------------------------
2017-01-06 00:00:10,960 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /login                          =>  controllers.LoginLogoutController.login()
2017-01-06 00:00:10,961 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /login                          =>  controllers.LoginLogoutController.loginPost()
2017-01-06 00:00:10,961 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /logout                         =>  controllers.LoginLogoutController.logout()
2017-01-06 00:00:10,961 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getUserInfo                    =>  controllers.ApplicationController.getUserInfo()
2017-01-06 00:00:10,961 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getProjectList                 =>  controllers.ApplicationController.getProjectList()
2017-01-06 00:00:10,961 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getGadgetList                  =>  controllers.GadgetController.getGadgetList()
2017-01-06 00:00:10,961 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /addNewGadget                   =>  controllers.GadgetController.addNewGadget()
2017-01-06 00:00:10,961 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateGadget                   =>  controllers.GadgetController.updateGadget()
2017-01-06 00:00:10,962 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /clearCacheGadget               =>  controllers.GadgetController.clearCacheGadget()
2017-01-06 00:00:10,962 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteGadget                   =>  controllers.GadgetController.deleteGadget()
2017-01-06 00:00:10,962 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /showSonarStatisticGadget       =>  controllers.GadgetController.showSonarStatisticGadget()
2017-01-06 00:00:10,962 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getIAComponents                =>  controllers.ApplicationController.getIAComponents()
2017-01-06 00:00:10,962 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getMetrics                     =>  controllers.ApplicationController.getMetricList()
2017-01-06 00:00:10,962 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getReleaseList                 =>  controllers.ApplicationController.getReleaseList()
2017-01-06 00:00:10,962 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getPeriodList                  =>  controllers.ApplicationController.getPeriodList()
2017-01-06 00:00:10,962 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getCruProjectList              =>  controllers.OverdueReviewReportController.getCruProjectList()
2017-01-06 00:00:10,963 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release                        =>  controllers.ConfigurationController.release()
2017-01-06 00:00:10,963 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release/ialist/{name}          =>  controllers.ConfigurationController.releaseURL()
2017-01-06 00:00:10,963 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release                        =>  controllers.ConfigurationController.releasePost()
2017-01-06 00:00:10,963 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/update                 =>  controllers.ConfigurationController.releaseUpdate()
2017-01-06 00:00:10,963 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/delete                 =>  controllers.ConfigurationController.releaseDelete()
2017-01-06 00:00:10,963 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /metric                         =>  controllers.ConfigurationController.metric()
2017-01-06 00:00:10,963 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric                         =>  controllers.ConfigurationController.metricPost()
2017-01-06 00:00:10,964 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/update                  =>  controllers.ConfigurationController.metricUpdate()
2017-01-06 00:00:10,964 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/delete                  =>  controllers.ConfigurationController.metricDelete()
2017-01-06 00:00:10,964 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /dashboard/new                  =>  controllers.DashboardController.new_dashboard()
2017-01-06 00:00:10,964 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /dashboard/new                  =>  controllers.DashboardController.new_dashboard_post()
2017-01-06 00:00:10,964 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteDashboard                =>  controllers.DashboardController.deleteDashboard()
2017-01-06 00:00:10,964 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardInfo               =>  controllers.DashboardController.getDashboardInfo()
2017-01-06 00:00:10,964 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardList               =>  controllers.DashboardController.getDashboardList()
2017-01-06 00:00:10,965 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateDashboardOption          =>  controllers.DashboardController.updateDashboardOption()
2017-01-06 00:00:10,965 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/webjars/{fileName: .*}  =>  ninja.AssetsController.serveWebJars()
2017-01-06 00:00:10,965 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/{fileName: .*}          =>  ninja.AssetsController.serveStatic()
2017-01-06 00:00:10,965 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getData                 =>  controllers.MyGadgetController.getDataGadget()
2017-01-06 00:00:10,965 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /gadget/save                    =>  controllers.MyGadgetController.insertOrUpdateGadget()
2017-01-06 00:00:10,965 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/gadgets                 =>  controllers.MyGadgetController.getGadgetsInDashboardId()
2017-01-06 00:00:10,965 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getStoryInEpic          =>  controllers.MyGadgetController.getStoryInEpic()
2017-01-06 00:00:10,966 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product                        =>  controllers.ProductController.productPage()
2017-01-06 00:00:10,966 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteProduct          =>  controllers.ProductController.deleteProduct()
2017-01-06 00:00:10,966 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertProduct          =>  controllers.ProductController.addProduct()
2017-01-06 00:00:10,966 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteCycle            =>  controllers.ProductController.deleteCycle()
2017-01-06 00:00:10,967 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertCycle            =>  controllers.ProductController.addCycle()
2017-01-06 00:00:10,967 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product/getall                 =>  controllers.ProductController.getAllProduct()
2017-01-06 00:00:10,967 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getEpicLinks                   =>  controllers.EpicController.getEpicLinks()
2017-01-06 00:00:10,967 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getassignee                    =>  controllers.AssigneeController.getAssigneeList()
2017-01-06 00:00:10,967 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listcycle                      =>  controllers.AssigneeController.getListCycleName()
2017-01-06 00:00:10,967 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /cycleExisting                  =>  controllers.AssigneeController.getListExistingCycle()
2017-01-06 00:00:10,968 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listproject                    =>  controllers.MyGadgetController.getProjectList()
2017-01-06 00:00:10,968 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /.*                             =>  controllers.ApplicationController.index()
2017-01-06 00:00:10,969 INFO [Scanner-0] n.NinjaDefault [NinjaDefault.java:441] 
 _______  .___ _______        ____.  _____   
 \      \ |   |\      \      |    | /  _  \  
 /   |   \|   |/   |   \     |    |/  /_\  \ 
/    |    \   /    |    \/\__|    /    |    \  http://www.ninjaframework.org
\____|__  /___\____|__  /\________\____|__  /  @ninjaframework
     web\/framework   \/                  \/   5.8.0

2017-01-06 00:00:10,970 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:53] Starting Ninja application...
2017-01-06 00:00:10,972 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:86] Ninja application started in 2ms
2017-01-06 00:00:12,973 INFO [qtp1186254299-299] o.m.d.cluster [SLF4JLogger.java:71] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2017-01-06 00:00:13,035 INFO [qtp1186254299-299] o.m.d.cluster [SLF4JLogger.java:71] No server chosen by ReadPreferenceServerSelector{readPreference=primary} from cluster description ClusterDescription{type=UNKNOWN, connectionMode=SINGLE, all=[ServerDescription{address=localhost:27017, type=UNKNOWN, state=CONNECTING}]}. Waiting for 30000 ms before timing out
2017-01-06 00:00:13,049 INFO [cluster-ClusterId{value='586e7b9c18e18211387e9480', description='null'}-localhost:27017] o.m.d.connection [SLF4JLogger.java:71] Opened connection [connectionId{localValue:1, serverValue:81}] to localhost:27017
2017-01-06 00:00:13,051 INFO [cluster-ClusterId{value='586e7b9c18e18211387e9480', description='null'}-localhost:27017] o.m.d.cluster [SLF4JLogger.java:71] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 1, 5]}, minWireVersion=0, maxWireVersion=4, maxDocumentSize=16777216, roundTripTimeNanos=623825}
2017-01-06 00:00:13,057 INFO [qtp1186254299-299] o.m.d.connection [SLF4JLogger.java:71] Opened connection [connectionId{localValue:2, serverValue:82}] to localhost:27017
2017-01-06 00:04:03,990 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:93] Stopping Ninja application...
2017-01-06 00:04:04,000 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:97] Ninja application stopped in 10ms
2017-01-06 00:04:06,905 INFO [Scanner-0] n.u.NinjaModeHelper [NinjaModeHelper.java:90] Ninja is running in mode dev
2017-01-06 00:04:06,950 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:245] Successfully configured Logback.
2017-01-06 00:04:06,952 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:165] Enabling Ninja classic configuration
2017-01-06 00:04:07,656 INFO [Scanner-0] n.u.SwissKnife [SwissKnife.java:77] Could not load file conf/messages_en.properties (not a bad thing necessarily, but I am returing null)
2017-01-06 00:04:07,657 INFO [Scanner-0] n.i.MessagesImpl [MessagesImpl.java:205] Did not find conf/messages_en.properties but it was specified in application.conf. Using default language instead.
2017-01-06 00:04:07,712 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:116] -------------------------------------------------------------------
2017-01-06 00:04:07,713 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:117] Registered response template engines
2017-01-06 00:04:07,713 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:118] -------------------------------------------------------------------
2017-01-06 00:04:07,713 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/javascript  =>  ninja.template.TemplateEngineJsonP
2017-01-06 00:04:07,713 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/json        =>  ninja.template.TemplateEngineJson
2017-01-06 00:04:07,714 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/xml         =>  ninja.template.TemplateEngineXml
2017-01-06 00:04:07,714 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/html               =>  ninja.template.TemplateEngineFreemarker
2017-01-06 00:04:07,714 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/plain              =>  ninja.template.TemplateEngineText
2017-01-06 00:04:07,757 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1184] Using default implementation for ThreadExecutor
2017-01-06 00:04:07,760 INFO [Scanner-0] o.q.s.SimpleThreadPool [SimpleThreadPool.java:268] Job execution threads will use class loader of thread: Scanner-0
2017-01-06 00:04:07,785 INFO [Scanner-0] o.q.c.SchedulerSignalerImpl [SchedulerSignalerImpl.java:61] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2017-01-06 00:04:07,786 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:240] Quartz Scheduler v.2.2.1 created.
2017-01-06 00:04:07,789 INFO [Scanner-0] o.q.s.RAMJobStore [RAMJobStore.java:155] RAMJobStore initialized.
2017-01-06 00:04:07,791 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:305] Scheduler meta-data: Quartz Scheduler (v2.2.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2017-01-06 00:04:07,791 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1339] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2017-01-06 00:04:07,791 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1343] Quartz scheduler version: 2.2.1
2017-01-06 00:04:07,813 INFO [Scanner-0] h.s.SchedulerManagement [SchedulerManagement.java:49] started clear cache job
2017-01-06 00:04:07,816 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:109] ----------------------------------------------------------------------------
2017-01-06 00:04:07,817 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:110] Registered request bodyparser engines
2017-01-06 00:04:07,817 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:111] ----------------------------------------------------------------------------
2017-01-06 00:04:07,817 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/json                   =>  ninja.bodyparser.BodyParserEngineJson
2017-01-06 00:04:07,818 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/x-www-form-urlencoded  =>  ninja.bodyparser.BodyParserEnginePost
2017-01-06 00:04:07,818 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/xml                    =>  ninja.bodyparser.BodyParserEngineXml
2017-01-06 00:04:07,820 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:105] Ninja injector started in 864 ms.
2017-01-06 00:04:07,917 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:425] ------------------------------------------------------------------------------------------------------
2017-01-06 00:04:07,917 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:426] Registered routes
2017-01-06 00:04:07,917 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:427] ------------------------------------------------------------------------------------------------------
2017-01-06 00:04:07,918 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /login                          =>  controllers.LoginLogoutController.login()
2017-01-06 00:04:07,918 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /login                          =>  controllers.LoginLogoutController.loginPost()
2017-01-06 00:04:07,918 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /logout                         =>  controllers.LoginLogoutController.logout()
2017-01-06 00:04:07,918 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getUserInfo                    =>  controllers.ApplicationController.getUserInfo()
2017-01-06 00:04:07,919 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getProjectList                 =>  controllers.ApplicationController.getProjectList()
2017-01-06 00:04:07,919 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getGadgetList                  =>  controllers.GadgetController.getGadgetList()
2017-01-06 00:04:07,919 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /addNewGadget                   =>  controllers.GadgetController.addNewGadget()
2017-01-06 00:04:07,919 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateGadget                   =>  controllers.GadgetController.updateGadget()
2017-01-06 00:04:07,919 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /clearCacheGadget               =>  controllers.GadgetController.clearCacheGadget()
2017-01-06 00:04:07,919 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteGadget                   =>  controllers.GadgetController.deleteGadget()
2017-01-06 00:04:07,920 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /showSonarStatisticGadget       =>  controllers.GadgetController.showSonarStatisticGadget()
2017-01-06 00:04:07,920 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getIAComponents                =>  controllers.ApplicationController.getIAComponents()
2017-01-06 00:04:07,920 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getMetrics                     =>  controllers.ApplicationController.getMetricList()
2017-01-06 00:04:07,920 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getReleaseList                 =>  controllers.ApplicationController.getReleaseList()
2017-01-06 00:04:07,920 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getPeriodList                  =>  controllers.ApplicationController.getPeriodList()
2017-01-06 00:04:07,920 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getCruProjectList              =>  controllers.OverdueReviewReportController.getCruProjectList()
2017-01-06 00:04:07,920 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release                        =>  controllers.ConfigurationController.release()
2017-01-06 00:04:07,921 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release/ialist/{name}          =>  controllers.ConfigurationController.releaseURL()
2017-01-06 00:04:07,921 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release                        =>  controllers.ConfigurationController.releasePost()
2017-01-06 00:04:07,921 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/update                 =>  controllers.ConfigurationController.releaseUpdate()
2017-01-06 00:04:07,921 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/delete                 =>  controllers.ConfigurationController.releaseDelete()
2017-01-06 00:04:07,921 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /metric                         =>  controllers.ConfigurationController.metric()
2017-01-06 00:04:07,921 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric                         =>  controllers.ConfigurationController.metricPost()
2017-01-06 00:04:07,922 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/update                  =>  controllers.ConfigurationController.metricUpdate()
2017-01-06 00:04:07,922 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/delete                  =>  controllers.ConfigurationController.metricDelete()
2017-01-06 00:04:07,922 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /dashboard/new                  =>  controllers.DashboardController.new_dashboard()
2017-01-06 00:04:07,922 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /dashboard/new                  =>  controllers.DashboardController.new_dashboard_post()
2017-01-06 00:04:07,922 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteDashboard                =>  controllers.DashboardController.deleteDashboard()
2017-01-06 00:04:07,922 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardInfo               =>  controllers.DashboardController.getDashboardInfo()
2017-01-06 00:04:07,922 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardList               =>  controllers.DashboardController.getDashboardList()
2017-01-06 00:04:07,923 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateDashboardOption          =>  controllers.DashboardController.updateDashboardOption()
2017-01-06 00:04:07,923 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/webjars/{fileName: .*}  =>  ninja.AssetsController.serveWebJars()
2017-01-06 00:04:07,923 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/{fileName: .*}          =>  ninja.AssetsController.serveStatic()
2017-01-06 00:04:07,923 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getData                 =>  controllers.MyGadgetController.getDataGadget()
2017-01-06 00:04:07,923 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /gadget/save                    =>  controllers.MyGadgetController.insertOrUpdateGadget()
2017-01-06 00:04:07,923 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/gadgets                 =>  controllers.MyGadgetController.getGadgetsInDashboardId()
2017-01-06 00:04:07,924 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getStoryInEpic          =>  controllers.MyGadgetController.getStoryInEpic()
2017-01-06 00:04:07,924 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product                        =>  controllers.ProductController.productPage()
2017-01-06 00:04:07,924 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteProduct          =>  controllers.ProductController.deleteProduct()
2017-01-06 00:04:07,924 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertProduct          =>  controllers.ProductController.addProduct()
2017-01-06 00:04:07,924 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteCycle            =>  controllers.ProductController.deleteCycle()
2017-01-06 00:04:07,924 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertCycle            =>  controllers.ProductController.addCycle()
2017-01-06 00:04:07,924 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product/getall                 =>  controllers.ProductController.getAllProduct()
2017-01-06 00:04:07,925 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getEpicLinks                   =>  controllers.EpicController.getEpicLinks()
2017-01-06 00:04:07,925 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getassignee                    =>  controllers.AssigneeController.getAssigneeList()
2017-01-06 00:04:07,925 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listcycle                      =>  controllers.AssigneeController.getListCycleName()
2017-01-06 00:04:07,925 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /cycleExisting                  =>  controllers.AssigneeController.getListExistingCycle()
2017-01-06 00:04:07,925 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listproject                    =>  controllers.MyGadgetController.getProjectList()
2017-01-06 00:04:07,925 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /.*                             =>  controllers.ApplicationController.index()
2017-01-06 00:04:07,926 INFO [Scanner-0] n.NinjaDefault [NinjaDefault.java:441] 
 _______  .___ _______        ____.  _____   
 \      \ |   |\      \      |    | /  _  \  
 /   |   \|   |/   |   \     |    |/  /_\  \ 
/    |    \   /    |    \/\__|    /    |    \  http://www.ninjaframework.org
\____|__  /___\____|__  /\________\____|__  /  @ninjaframework
     web\/framework   \/                  \/   5.8.0

2017-01-06 00:04:07,926 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:53] Starting Ninja application...
2017-01-06 00:04:07,928 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:86] Ninja application started in 2ms
2017-01-06 00:04:09,580 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:93] Stopping Ninja application...
2017-01-06 00:04:09,592 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:97] Ninja application stopped in 12ms
2017-01-06 00:04:12,432 INFO [Scanner-0] n.u.NinjaModeHelper [NinjaModeHelper.java:90] Ninja is running in mode dev
2017-01-06 00:04:12,476 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:245] Successfully configured Logback.
2017-01-06 00:04:12,478 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:165] Enabling Ninja classic configuration
2017-01-06 00:04:13,157 INFO [Scanner-0] n.u.SwissKnife [SwissKnife.java:77] Could not load file conf/messages_en.properties (not a bad thing necessarily, but I am returing null)
2017-01-06 00:04:13,158 INFO [Scanner-0] n.i.MessagesImpl [MessagesImpl.java:205] Did not find conf/messages_en.properties but it was specified in application.conf. Using default language instead.
2017-01-06 00:04:13,212 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:116] -------------------------------------------------------------------
2017-01-06 00:04:13,212 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:117] Registered response template engines
2017-01-06 00:04:13,213 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:118] -------------------------------------------------------------------
2017-01-06 00:04:13,213 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/javascript  =>  ninja.template.TemplateEngineJsonP
2017-01-06 00:04:13,213 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/json        =>  ninja.template.TemplateEngineJson
2017-01-06 00:04:13,213 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/xml         =>  ninja.template.TemplateEngineXml
2017-01-06 00:04:13,213 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/html               =>  ninja.template.TemplateEngineFreemarker
2017-01-06 00:04:13,214 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/plain              =>  ninja.template.TemplateEngineText
2017-01-06 00:04:13,257 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1184] Using default implementation for ThreadExecutor
2017-01-06 00:04:13,260 INFO [Scanner-0] o.q.s.SimpleThreadPool [SimpleThreadPool.java:268] Job execution threads will use class loader of thread: Scanner-0
2017-01-06 00:04:13,288 INFO [Scanner-0] o.q.c.SchedulerSignalerImpl [SchedulerSignalerImpl.java:61] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2017-01-06 00:04:13,289 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:240] Quartz Scheduler v.2.2.1 created.
2017-01-06 00:04:13,292 INFO [Scanner-0] o.q.s.RAMJobStore [RAMJobStore.java:155] RAMJobStore initialized.
2017-01-06 00:04:13,293 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:305] Scheduler meta-data: Quartz Scheduler (v2.2.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2017-01-06 00:04:13,294 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1339] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2017-01-06 00:04:13,294 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1343] Quartz scheduler version: 2.2.1
2017-01-06 00:04:13,313 INFO [Scanner-0] h.s.SchedulerManagement [SchedulerManagement.java:49] started clear cache job
2017-01-06 00:04:13,315 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:109] ----------------------------------------------------------------------------
2017-01-06 00:04:13,316 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:110] Registered request bodyparser engines
2017-01-06 00:04:13,316 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:111] ----------------------------------------------------------------------------
2017-01-06 00:04:13,316 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/json                   =>  ninja.bodyparser.BodyParserEngineJson
2017-01-06 00:04:13,316 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/x-www-form-urlencoded  =>  ninja.bodyparser.BodyParserEnginePost
2017-01-06 00:04:13,317 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/xml                    =>  ninja.bodyparser.BodyParserEngineXml
2017-01-06 00:04:13,318 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:105] Ninja injector started in 837 ms.
2017-01-06 00:04:13,416 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:425] ------------------------------------------------------------------------------------------------------
2017-01-06 00:04:13,416 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:426] Registered routes
2017-01-06 00:04:13,416 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:427] ------------------------------------------------------------------------------------------------------
2017-01-06 00:04:13,416 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /login                          =>  controllers.LoginLogoutController.login()
2017-01-06 00:04:13,417 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /login                          =>  controllers.LoginLogoutController.loginPost()
2017-01-06 00:04:13,417 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /logout                         =>  controllers.LoginLogoutController.logout()
2017-01-06 00:04:13,417 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getUserInfo                    =>  controllers.ApplicationController.getUserInfo()
2017-01-06 00:04:13,417 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getProjectList                 =>  controllers.ApplicationController.getProjectList()
2017-01-06 00:04:13,417 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getGadgetList                  =>  controllers.GadgetController.getGadgetList()
2017-01-06 00:04:13,417 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /addNewGadget                   =>  controllers.GadgetController.addNewGadget()
2017-01-06 00:04:13,418 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateGadget                   =>  controllers.GadgetController.updateGadget()
2017-01-06 00:04:13,418 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /clearCacheGadget               =>  controllers.GadgetController.clearCacheGadget()
2017-01-06 00:04:13,418 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteGadget                   =>  controllers.GadgetController.deleteGadget()
2017-01-06 00:04:13,418 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /showSonarStatisticGadget       =>  controllers.GadgetController.showSonarStatisticGadget()
2017-01-06 00:04:13,419 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getIAComponents                =>  controllers.ApplicationController.getIAComponents()
2017-01-06 00:04:13,419 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getMetrics                     =>  controllers.ApplicationController.getMetricList()
2017-01-06 00:04:13,419 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getReleaseList                 =>  controllers.ApplicationController.getReleaseList()
2017-01-06 00:04:13,419 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getPeriodList                  =>  controllers.ApplicationController.getPeriodList()
2017-01-06 00:04:13,420 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getCruProjectList              =>  controllers.OverdueReviewReportController.getCruProjectList()
2017-01-06 00:04:13,420 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release                        =>  controllers.ConfigurationController.release()
2017-01-06 00:04:13,420 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release/ialist/{name}          =>  controllers.ConfigurationController.releaseURL()
2017-01-06 00:04:13,420 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release                        =>  controllers.ConfigurationController.releasePost()
2017-01-06 00:04:13,422 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/update                 =>  controllers.ConfigurationController.releaseUpdate()
2017-01-06 00:04:13,423 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/delete                 =>  controllers.ConfigurationController.releaseDelete()
2017-01-06 00:04:13,423 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /metric                         =>  controllers.ConfigurationController.metric()
2017-01-06 00:04:13,423 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric                         =>  controllers.ConfigurationController.metricPost()
2017-01-06 00:04:13,423 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/update                  =>  controllers.ConfigurationController.metricUpdate()
2017-01-06 00:04:13,423 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/delete                  =>  controllers.ConfigurationController.metricDelete()
2017-01-06 00:04:13,424 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /dashboard/new                  =>  controllers.DashboardController.new_dashboard()
2017-01-06 00:04:13,424 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /dashboard/new                  =>  controllers.DashboardController.new_dashboard_post()
2017-01-06 00:04:13,424 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteDashboard                =>  controllers.DashboardController.deleteDashboard()
2017-01-06 00:04:13,424 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardInfo               =>  controllers.DashboardController.getDashboardInfo()
2017-01-06 00:04:13,424 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardList               =>  controllers.DashboardController.getDashboardList()
2017-01-06 00:04:13,425 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateDashboardOption          =>  controllers.DashboardController.updateDashboardOption()
2017-01-06 00:04:13,425 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/webjars/{fileName: .*}  =>  ninja.AssetsController.serveWebJars()
2017-01-06 00:04:13,425 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/{fileName: .*}          =>  ninja.AssetsController.serveStatic()
2017-01-06 00:04:13,426 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getData                 =>  controllers.MyGadgetController.getDataGadget()
2017-01-06 00:04:13,426 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /gadget/save                    =>  controllers.MyGadgetController.insertOrUpdateGadget()
2017-01-06 00:04:13,426 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/gadgets                 =>  controllers.MyGadgetController.getGadgetsInDashboardId()
2017-01-06 00:04:13,426 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getStoryInEpic          =>  controllers.MyGadgetController.getStoryInEpic()
2017-01-06 00:04:13,427 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product                        =>  controllers.ProductController.productPage()
2017-01-06 00:04:13,427 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteProduct          =>  controllers.ProductController.deleteProduct()
2017-01-06 00:04:13,427 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertProduct          =>  controllers.ProductController.addProduct()
2017-01-06 00:04:13,428 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteCycle            =>  controllers.ProductController.deleteCycle()
2017-01-06 00:04:13,428 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertCycle            =>  controllers.ProductController.addCycle()
2017-01-06 00:04:13,428 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product/getall                 =>  controllers.ProductController.getAllProduct()
2017-01-06 00:04:13,428 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getEpicLinks                   =>  controllers.EpicController.getEpicLinks()
2017-01-06 00:04:13,428 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getassignee                    =>  controllers.AssigneeController.getAssigneeList()
2017-01-06 00:04:13,429 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listcycle                      =>  controllers.AssigneeController.getListCycleName()
2017-01-06 00:04:13,429 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /cycleExisting                  =>  controllers.AssigneeController.getListExistingCycle()
2017-01-06 00:04:13,429 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listproject                    =>  controllers.MyGadgetController.getProjectList()
2017-01-06 00:04:13,429 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /.*                             =>  controllers.ApplicationController.index()
2017-01-06 00:04:13,430 INFO [Scanner-0] n.NinjaDefault [NinjaDefault.java:441] 
 _______  .___ _______        ____.  _____   
 \      \ |   |\      \      |    | /  _  \  
 /   |   \|   |/   |   \     |    |/  /_\  \ 
/    |    \   /    |    \/\__|    /    |    \  http://www.ninjaframework.org
\____|__  /___\____|__  /\________\____|__  /  @ninjaframework
     web\/framework   \/                  \/   5.8.0

2017-01-06 00:04:13,431 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:53] Starting Ninja application...
2017-01-06 00:04:13,434 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:86] Ninja application started in 3ms
2017-01-06 00:05:14,720 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:93] Stopping Ninja application...
2017-01-06 00:05:14,727 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:97] Ninja application stopped in 7ms
2017-01-06 00:05:17,494 INFO [Scanner-0] n.u.NinjaModeHelper [NinjaModeHelper.java:90] Ninja is running in mode dev
2017-01-06 00:05:17,539 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:245] Successfully configured Logback.
2017-01-06 00:05:17,541 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:165] Enabling Ninja classic configuration
2017-01-06 00:05:18,306 INFO [Scanner-0] n.u.SwissKnife [SwissKnife.java:77] Could not load file conf/messages_en.properties (not a bad thing necessarily, but I am returing null)
2017-01-06 00:05:18,307 INFO [Scanner-0] n.i.MessagesImpl [MessagesImpl.java:205] Did not find conf/messages_en.properties but it was specified in application.conf. Using default language instead.
2017-01-06 00:05:18,395 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:116] -------------------------------------------------------------------
2017-01-06 00:05:18,395 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:117] Registered response template engines
2017-01-06 00:05:18,396 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:118] -------------------------------------------------------------------
2017-01-06 00:05:18,396 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/javascript  =>  ninja.template.TemplateEngineJsonP
2017-01-06 00:05:18,397 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/json        =>  ninja.template.TemplateEngineJson
2017-01-06 00:05:18,397 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/xml         =>  ninja.template.TemplateEngineXml
2017-01-06 00:05:18,397 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/html               =>  ninja.template.TemplateEngineFreemarker
2017-01-06 00:05:18,398 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/plain              =>  ninja.template.TemplateEngineText
2017-01-06 00:05:18,482 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1184] Using default implementation for ThreadExecutor
2017-01-06 00:05:18,488 INFO [Scanner-0] o.q.s.SimpleThreadPool [SimpleThreadPool.java:268] Job execution threads will use class loader of thread: Scanner-0
2017-01-06 00:05:18,523 INFO [Scanner-0] o.q.c.SchedulerSignalerImpl [SchedulerSignalerImpl.java:61] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2017-01-06 00:05:18,524 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:240] Quartz Scheduler v.2.2.1 created.
2017-01-06 00:05:18,528 INFO [Scanner-0] o.q.s.RAMJobStore [RAMJobStore.java:155] RAMJobStore initialized.
2017-01-06 00:05:18,544 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:305] Scheduler meta-data: Quartz Scheduler (v2.2.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2017-01-06 00:05:18,545 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1339] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2017-01-06 00:05:18,546 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1343] Quartz scheduler version: 2.2.1
2017-01-06 00:05:18,577 INFO [Scanner-0] h.s.SchedulerManagement [SchedulerManagement.java:49] started clear cache job
2017-01-06 00:05:18,588 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:109] ----------------------------------------------------------------------------
2017-01-06 00:05:18,589 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:110] Registered request bodyparser engines
2017-01-06 00:05:18,590 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:111] ----------------------------------------------------------------------------
2017-01-06 00:05:18,590 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/json                   =>  ninja.bodyparser.BodyParserEngineJson
2017-01-06 00:05:18,595 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/x-www-form-urlencoded  =>  ninja.bodyparser.BodyParserEnginePost
2017-01-06 00:05:18,595 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/xml                    =>  ninja.bodyparser.BodyParserEngineXml
2017-01-06 00:05:18,598 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:105] Ninja injector started in 1052 ms.
2017-01-06 00:05:18,713 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:425] ------------------------------------------------------------------------------------------------------
2017-01-06 00:05:18,713 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:426] Registered routes
2017-01-06 00:05:18,713 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:427] ------------------------------------------------------------------------------------------------------
2017-01-06 00:05:18,713 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /login                          =>  controllers.LoginLogoutController.login()
2017-01-06 00:05:18,714 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /login                          =>  controllers.LoginLogoutController.loginPost()
2017-01-06 00:05:18,714 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /logout                         =>  controllers.LoginLogoutController.logout()
2017-01-06 00:05:18,714 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getUserInfo                    =>  controllers.ApplicationController.getUserInfo()
2017-01-06 00:05:18,714 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getProjectList                 =>  controllers.ApplicationController.getProjectList()
2017-01-06 00:05:18,714 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getGadgetList                  =>  controllers.GadgetController.getGadgetList()
2017-01-06 00:05:18,714 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /addNewGadget                   =>  controllers.GadgetController.addNewGadget()
2017-01-06 00:05:18,714 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateGadget                   =>  controllers.GadgetController.updateGadget()
2017-01-06 00:05:18,714 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /clearCacheGadget               =>  controllers.GadgetController.clearCacheGadget()
2017-01-06 00:05:18,715 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteGadget                   =>  controllers.GadgetController.deleteGadget()
2017-01-06 00:05:18,715 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /showSonarStatisticGadget       =>  controllers.GadgetController.showSonarStatisticGadget()
2017-01-06 00:05:18,715 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getIAComponents                =>  controllers.ApplicationController.getIAComponents()
2017-01-06 00:05:18,715 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getMetrics                     =>  controllers.ApplicationController.getMetricList()
2017-01-06 00:05:18,715 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getReleaseList                 =>  controllers.ApplicationController.getReleaseList()
2017-01-06 00:05:18,715 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getPeriodList                  =>  controllers.ApplicationController.getPeriodList()
2017-01-06 00:05:18,716 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getCruProjectList              =>  controllers.OverdueReviewReportController.getCruProjectList()
2017-01-06 00:05:18,716 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release                        =>  controllers.ConfigurationController.release()
2017-01-06 00:05:18,716 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release/ialist/{name}          =>  controllers.ConfigurationController.releaseURL()
2017-01-06 00:05:18,716 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release                        =>  controllers.ConfigurationController.releasePost()
2017-01-06 00:05:18,716 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/update                 =>  controllers.ConfigurationController.releaseUpdate()
2017-01-06 00:05:18,717 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/delete                 =>  controllers.ConfigurationController.releaseDelete()
2017-01-06 00:05:18,717 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /metric                         =>  controllers.ConfigurationController.metric()
2017-01-06 00:05:18,717 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric                         =>  controllers.ConfigurationController.metricPost()
2017-01-06 00:05:18,717 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/update                  =>  controllers.ConfigurationController.metricUpdate()
2017-01-06 00:05:18,717 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/delete                  =>  controllers.ConfigurationController.metricDelete()
2017-01-06 00:05:18,718 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /dashboard/new                  =>  controllers.DashboardController.new_dashboard()
2017-01-06 00:05:18,718 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /dashboard/new                  =>  controllers.DashboardController.new_dashboard_post()
2017-01-06 00:05:18,718 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteDashboard                =>  controllers.DashboardController.deleteDashboard()
2017-01-06 00:05:18,718 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardInfo               =>  controllers.DashboardController.getDashboardInfo()
2017-01-06 00:05:18,718 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardList               =>  controllers.DashboardController.getDashboardList()
2017-01-06 00:05:18,718 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateDashboardOption          =>  controllers.DashboardController.updateDashboardOption()
2017-01-06 00:05:18,718 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/webjars/{fileName: .*}  =>  ninja.AssetsController.serveWebJars()
2017-01-06 00:05:18,719 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/{fileName: .*}          =>  ninja.AssetsController.serveStatic()
2017-01-06 00:05:18,719 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getData                 =>  controllers.MyGadgetController.getDataGadget()
2017-01-06 00:05:18,719 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /gadget/save                    =>  controllers.MyGadgetController.insertOrUpdateGadget()
2017-01-06 00:05:18,719 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/gadgets                 =>  controllers.MyGadgetController.getGadgetsInDashboardId()
2017-01-06 00:05:18,719 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getStoryInEpic          =>  controllers.MyGadgetController.getStoryInEpic()
2017-01-06 00:05:18,719 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product                        =>  controllers.ProductController.productPage()
2017-01-06 00:05:18,720 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteProduct          =>  controllers.ProductController.deleteProduct()
2017-01-06 00:05:18,720 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertProduct          =>  controllers.ProductController.addProduct()
2017-01-06 00:05:18,720 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteCycle            =>  controllers.ProductController.deleteCycle()
2017-01-06 00:05:18,720 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertCycle            =>  controllers.ProductController.addCycle()
2017-01-06 00:05:18,720 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product/getall                 =>  controllers.ProductController.getAllProduct()
2017-01-06 00:05:18,720 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getEpicLinks                   =>  controllers.EpicController.getEpicLinks()
2017-01-06 00:05:18,721 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getassignee                    =>  controllers.AssigneeController.getAssigneeList()
2017-01-06 00:05:18,721 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listcycle                      =>  controllers.AssigneeController.getListCycleName()
2017-01-06 00:05:18,721 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /cycleExisting                  =>  controllers.AssigneeController.getListExistingCycle()
2017-01-06 00:05:18,721 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listproject                    =>  controllers.MyGadgetController.getProjectList()
2017-01-06 00:05:18,721 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /.*                             =>  controllers.ApplicationController.index()
2017-01-06 00:05:18,722 INFO [Scanner-0] n.NinjaDefault [NinjaDefault.java:441] 
 _______  .___ _______        ____.  _____   
 \      \ |   |\      \      |    | /  _  \  
 /   |   \|   |/   |   \     |    |/  /_\  \ 
/    |    \   /    |    \/\__|    /    |    \  http://www.ninjaframework.org
\____|__  /___\____|__  /\________\____|__  /  @ninjaframework
     web\/framework   \/                  \/   5.8.0

2017-01-06 00:05:18,722 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:53] Starting Ninja application...
2017-01-06 00:05:18,724 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:86] Ninja application started in 2ms
2017-01-06 00:05:28,454 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:93] Stopping Ninja application...
2017-01-06 00:05:28,462 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:97] Ninja application stopped in 8ms
2017-01-06 00:05:31,178 INFO [Scanner-0] n.u.NinjaModeHelper [NinjaModeHelper.java:90] Ninja is running in mode dev
2017-01-06 00:05:31,223 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:245] Successfully configured Logback.
2017-01-06 00:05:31,225 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:165] Enabling Ninja classic configuration
2017-01-06 00:05:31,949 INFO [Scanner-0] n.u.SwissKnife [SwissKnife.java:77] Could not load file conf/messages_en.properties (not a bad thing necessarily, but I am returing null)
2017-01-06 00:05:31,949 INFO [Scanner-0] n.i.MessagesImpl [MessagesImpl.java:205] Did not find conf/messages_en.properties but it was specified in application.conf. Using default language instead.
2017-01-06 00:05:32,005 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:116] -------------------------------------------------------------------
2017-01-06 00:05:32,005 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:117] Registered response template engines
2017-01-06 00:05:32,005 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:118] -------------------------------------------------------------------
2017-01-06 00:05:32,006 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/javascript  =>  ninja.template.TemplateEngineJsonP
2017-01-06 00:05:32,006 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/json        =>  ninja.template.TemplateEngineJson
2017-01-06 00:05:32,006 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/xml         =>  ninja.template.TemplateEngineXml
2017-01-06 00:05:32,006 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/html               =>  ninja.template.TemplateEngineFreemarker
2017-01-06 00:05:32,007 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/plain              =>  ninja.template.TemplateEngineText
2017-01-06 00:05:32,059 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1184] Using default implementation for ThreadExecutor
2017-01-06 00:05:32,063 INFO [Scanner-0] o.q.s.SimpleThreadPool [SimpleThreadPool.java:268] Job execution threads will use class loader of thread: Scanner-0
2017-01-06 00:05:32,087 INFO [Scanner-0] o.q.c.SchedulerSignalerImpl [SchedulerSignalerImpl.java:61] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2017-01-06 00:05:32,088 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:240] Quartz Scheduler v.2.2.1 created.
2017-01-06 00:05:32,090 INFO [Scanner-0] o.q.s.RAMJobStore [RAMJobStore.java:155] RAMJobStore initialized.
2017-01-06 00:05:32,091 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:305] Scheduler meta-data: Quartz Scheduler (v2.2.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2017-01-06 00:05:32,092 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1339] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2017-01-06 00:05:32,092 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1343] Quartz scheduler version: 2.2.1
2017-01-06 00:05:32,104 INFO [Scanner-0] h.s.SchedulerManagement [SchedulerManagement.java:49] started clear cache job
2017-01-06 00:05:32,110 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:109] ----------------------------------------------------------------------------
2017-01-06 00:05:32,111 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:110] Registered request bodyparser engines
2017-01-06 00:05:32,111 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:111] ----------------------------------------------------------------------------
2017-01-06 00:05:32,112 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/json                   =>  ninja.bodyparser.BodyParserEngineJson
2017-01-06 00:05:32,112 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/x-www-form-urlencoded  =>  ninja.bodyparser.BodyParserEnginePost
2017-01-06 00:05:32,112 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/xml                    =>  ninja.bodyparser.BodyParserEngineXml
2017-01-06 00:05:32,115 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:105] Ninja injector started in 886 ms.
2017-01-06 00:05:32,660 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:425] ------------------------------------------------------------------------------------------------------
2017-01-06 00:05:32,661 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:426] Registered routes
2017-01-06 00:05:32,661 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:427] ------------------------------------------------------------------------------------------------------
2017-01-06 00:05:32,661 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /login                          =>  controllers.LoginLogoutController.login()
2017-01-06 00:05:32,661 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /login                          =>  controllers.LoginLogoutController.loginPost()
2017-01-06 00:05:32,661 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /logout                         =>  controllers.LoginLogoutController.logout()
2017-01-06 00:05:32,661 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getUserInfo                    =>  controllers.ApplicationController.getUserInfo()
2017-01-06 00:05:32,662 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getProjectList                 =>  controllers.ApplicationController.getProjectList()
2017-01-06 00:05:32,662 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getGadgetList                  =>  controllers.GadgetController.getGadgetList()
2017-01-06 00:05:32,662 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /addNewGadget                   =>  controllers.GadgetController.addNewGadget()
2017-01-06 00:05:32,662 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateGadget                   =>  controllers.GadgetController.updateGadget()
2017-01-06 00:05:32,662 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /clearCacheGadget               =>  controllers.GadgetController.clearCacheGadget()
2017-01-06 00:05:32,662 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteGadget                   =>  controllers.GadgetController.deleteGadget()
2017-01-06 00:05:32,662 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /showSonarStatisticGadget       =>  controllers.GadgetController.showSonarStatisticGadget()
2017-01-06 00:05:32,663 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getIAComponents                =>  controllers.ApplicationController.getIAComponents()
2017-01-06 00:05:32,663 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getMetrics                     =>  controllers.ApplicationController.getMetricList()
2017-01-06 00:05:32,663 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getReleaseList                 =>  controllers.ApplicationController.getReleaseList()
2017-01-06 00:05:32,663 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getPeriodList                  =>  controllers.ApplicationController.getPeriodList()
2017-01-06 00:05:32,663 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getCruProjectList              =>  controllers.OverdueReviewReportController.getCruProjectList()
2017-01-06 00:05:32,663 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release                        =>  controllers.ConfigurationController.release()
2017-01-06 00:05:32,663 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release/ialist/{name}          =>  controllers.ConfigurationController.releaseURL()
2017-01-06 00:05:32,663 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release                        =>  controllers.ConfigurationController.releasePost()
2017-01-06 00:05:32,664 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/update                 =>  controllers.ConfigurationController.releaseUpdate()
2017-01-06 00:05:32,664 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/delete                 =>  controllers.ConfigurationController.releaseDelete()
2017-01-06 00:05:32,664 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /metric                         =>  controllers.ConfigurationController.metric()
2017-01-06 00:05:32,664 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric                         =>  controllers.ConfigurationController.metricPost()
2017-01-06 00:05:32,664 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/update                  =>  controllers.ConfigurationController.metricUpdate()
2017-01-06 00:05:32,664 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/delete                  =>  controllers.ConfigurationController.metricDelete()
2017-01-06 00:05:32,664 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /dashboard/new                  =>  controllers.DashboardController.new_dashboard()
2017-01-06 00:05:32,665 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /dashboard/new                  =>  controllers.DashboardController.new_dashboard_post()
2017-01-06 00:05:32,665 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteDashboard                =>  controllers.DashboardController.deleteDashboard()
2017-01-06 00:05:32,665 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardInfo               =>  controllers.DashboardController.getDashboardInfo()
2017-01-06 00:05:32,665 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardList               =>  controllers.DashboardController.getDashboardList()
2017-01-06 00:05:32,665 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateDashboardOption          =>  controllers.DashboardController.updateDashboardOption()
2017-01-06 00:05:32,665 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/webjars/{fileName: .*}  =>  ninja.AssetsController.serveWebJars()
2017-01-06 00:05:32,666 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/{fileName: .*}          =>  ninja.AssetsController.serveStatic()
2017-01-06 00:05:32,666 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getData                 =>  controllers.MyGadgetController.getDataGadget()
2017-01-06 00:05:32,666 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /gadget/save                    =>  controllers.MyGadgetController.insertOrUpdateGadget()
2017-01-06 00:05:32,666 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/gadgets                 =>  controllers.MyGadgetController.getGadgetsInDashboardId()
2017-01-06 00:05:32,667 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getStoryInEpic          =>  controllers.MyGadgetController.getStoryInEpic()
2017-01-06 00:05:32,667 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product                        =>  controllers.ProductController.productPage()
2017-01-06 00:05:32,667 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteProduct          =>  controllers.ProductController.deleteProduct()
2017-01-06 00:05:32,667 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertProduct          =>  controllers.ProductController.addProduct()
2017-01-06 00:05:32,667 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteCycle            =>  controllers.ProductController.deleteCycle()
2017-01-06 00:05:32,668 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertCycle            =>  controllers.ProductController.addCycle()
2017-01-06 00:05:32,668 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product/getall                 =>  controllers.ProductController.getAllProduct()
2017-01-06 00:05:32,668 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getEpicLinks                   =>  controllers.EpicController.getEpicLinks()
2017-01-06 00:05:32,669 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getassignee                    =>  controllers.AssigneeController.getAssigneeList()
2017-01-06 00:05:32,669 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listcycle                      =>  controllers.AssigneeController.getListCycleName()
2017-01-06 00:05:32,669 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /cycleExisting                  =>  controllers.AssigneeController.getListExistingCycle()
2017-01-06 00:05:32,669 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listproject                    =>  controllers.MyGadgetController.getProjectList()
2017-01-06 00:05:32,670 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /.*                             =>  controllers.ApplicationController.index()
2017-01-06 00:05:32,671 INFO [Scanner-0] n.NinjaDefault [NinjaDefault.java:441] 
 _______  .___ _______        ____.  _____   
 \      \ |   |\      \      |    | /  _  \  
 /   |   \|   |/   |   \     |    |/  /_\  \ 
/    |    \   /    |    \/\__|    /    |    \  http://www.ninjaframework.org
\____|__  /___\____|__  /\________\____|__  /  @ninjaframework
     web\/framework   \/                  \/   5.8.0

2017-01-06 00:05:32,671 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:53] Starting Ninja application...
2017-01-06 00:05:32,673 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:86] Ninja application started in 2ms
2017-01-06 00:05:49,482 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:93] Stopping Ninja application...
2017-01-06 00:05:49,489 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:97] Ninja application stopped in 7ms
2017-01-06 00:05:52,088 INFO [Scanner-0] n.u.NinjaModeHelper [NinjaModeHelper.java:90] Ninja is running in mode dev
2017-01-06 00:05:52,130 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:245] Successfully configured Logback.
2017-01-06 00:05:52,133 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:165] Enabling Ninja classic configuration
2017-01-06 00:05:52,802 INFO [Scanner-0] n.u.SwissKnife [SwissKnife.java:77] Could not load file conf/messages_en.properties (not a bad thing necessarily, but I am returing null)
2017-01-06 00:05:52,802 INFO [Scanner-0] n.i.MessagesImpl [MessagesImpl.java:205] Did not find conf/messages_en.properties but it was specified in application.conf. Using default language instead.
2017-01-06 00:05:52,857 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:116] -------------------------------------------------------------------
2017-01-06 00:05:52,858 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:117] Registered response template engines
2017-01-06 00:05:52,858 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:118] -------------------------------------------------------------------
2017-01-06 00:05:52,858 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/javascript  =>  ninja.template.TemplateEngineJsonP
2017-01-06 00:05:52,858 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/json        =>  ninja.template.TemplateEngineJson
2017-01-06 00:05:52,859 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/xml         =>  ninja.template.TemplateEngineXml
2017-01-06 00:05:52,859 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/html               =>  ninja.template.TemplateEngineFreemarker
2017-01-06 00:05:52,859 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/plain              =>  ninja.template.TemplateEngineText
2017-01-06 00:05:52,903 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1184] Using default implementation for ThreadExecutor
2017-01-06 00:05:52,905 INFO [Scanner-0] o.q.s.SimpleThreadPool [SimpleThreadPool.java:268] Job execution threads will use class loader of thread: Scanner-0
2017-01-06 00:05:52,929 INFO [Scanner-0] o.q.c.SchedulerSignalerImpl [SchedulerSignalerImpl.java:61] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2017-01-06 00:05:52,931 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:240] Quartz Scheduler v.2.2.1 created.
2017-01-06 00:05:52,933 INFO [Scanner-0] o.q.s.RAMJobStore [RAMJobStore.java:155] RAMJobStore initialized.
2017-01-06 00:05:52,934 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:305] Scheduler meta-data: Quartz Scheduler (v2.2.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2017-01-06 00:05:52,935 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1339] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2017-01-06 00:05:52,935 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1343] Quartz scheduler version: 2.2.1
2017-01-06 00:05:52,949 INFO [Scanner-0] h.s.SchedulerManagement [SchedulerManagement.java:49] started clear cache job
2017-01-06 00:05:52,952 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:109] ----------------------------------------------------------------------------
2017-01-06 00:05:52,953 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:110] Registered request bodyparser engines
2017-01-06 00:05:52,953 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:111] ----------------------------------------------------------------------------
2017-01-06 00:05:52,954 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/json                   =>  ninja.bodyparser.BodyParserEngineJson
2017-01-06 00:05:52,954 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/x-www-form-urlencoded  =>  ninja.bodyparser.BodyParserEnginePost
2017-01-06 00:05:52,954 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/xml                    =>  ninja.bodyparser.BodyParserEngineXml
2017-01-06 00:05:52,957 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:105] Ninja injector started in 821 ms.
2017-01-06 00:05:53,046 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:425] ------------------------------------------------------------------------------------------------------
2017-01-06 00:05:53,046 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:426] Registered routes
2017-01-06 00:05:53,046 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:427] ------------------------------------------------------------------------------------------------------
2017-01-06 00:05:53,046 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /login                          =>  controllers.LoginLogoutController.login()
2017-01-06 00:05:53,047 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /login                          =>  controllers.LoginLogoutController.loginPost()
2017-01-06 00:05:53,047 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /logout                         =>  controllers.LoginLogoutController.logout()
2017-01-06 00:05:53,047 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getUserInfo                    =>  controllers.ApplicationController.getUserInfo()
2017-01-06 00:05:53,047 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getProjectList                 =>  controllers.ApplicationController.getProjectList()
2017-01-06 00:05:53,047 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getGadgetList                  =>  controllers.GadgetController.getGadgetList()
2017-01-06 00:05:53,047 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /addNewGadget                   =>  controllers.GadgetController.addNewGadget()
2017-01-06 00:05:53,047 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateGadget                   =>  controllers.GadgetController.updateGadget()
2017-01-06 00:05:53,048 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /clearCacheGadget               =>  controllers.GadgetController.clearCacheGadget()
2017-01-06 00:05:53,048 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteGadget                   =>  controllers.GadgetController.deleteGadget()
2017-01-06 00:05:53,048 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /showSonarStatisticGadget       =>  controllers.GadgetController.showSonarStatisticGadget()
2017-01-06 00:05:53,048 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getIAComponents                =>  controllers.ApplicationController.getIAComponents()
2017-01-06 00:05:53,048 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getMetrics                     =>  controllers.ApplicationController.getMetricList()
2017-01-06 00:05:53,048 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getReleaseList                 =>  controllers.ApplicationController.getReleaseList()
2017-01-06 00:05:53,048 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getPeriodList                  =>  controllers.ApplicationController.getPeriodList()
2017-01-06 00:05:53,049 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getCruProjectList              =>  controllers.OverdueReviewReportController.getCruProjectList()
2017-01-06 00:05:53,049 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release                        =>  controllers.ConfigurationController.release()
2017-01-06 00:05:53,049 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release/ialist/{name}          =>  controllers.ConfigurationController.releaseURL()
2017-01-06 00:05:53,049 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release                        =>  controllers.ConfigurationController.releasePost()
2017-01-06 00:05:53,049 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/update                 =>  controllers.ConfigurationController.releaseUpdate()
2017-01-06 00:05:53,049 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/delete                 =>  controllers.ConfigurationController.releaseDelete()
2017-01-06 00:05:53,049 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /metric                         =>  controllers.ConfigurationController.metric()
2017-01-06 00:05:53,050 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric                         =>  controllers.ConfigurationController.metricPost()
2017-01-06 00:05:53,050 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/update                  =>  controllers.ConfigurationController.metricUpdate()
2017-01-06 00:05:53,050 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/delete                  =>  controllers.ConfigurationController.metricDelete()
2017-01-06 00:05:53,050 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /dashboard/new                  =>  controllers.DashboardController.new_dashboard()
2017-01-06 00:05:53,050 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /dashboard/new                  =>  controllers.DashboardController.new_dashboard_post()
2017-01-06 00:05:53,051 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteDashboard                =>  controllers.DashboardController.deleteDashboard()
2017-01-06 00:05:53,051 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardInfo               =>  controllers.DashboardController.getDashboardInfo()
2017-01-06 00:05:53,051 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardList               =>  controllers.DashboardController.getDashboardList()
2017-01-06 00:05:53,051 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateDashboardOption          =>  controllers.DashboardController.updateDashboardOption()
2017-01-06 00:05:53,051 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/webjars/{fileName: .*}  =>  ninja.AssetsController.serveWebJars()
2017-01-06 00:05:53,052 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/{fileName: .*}          =>  ninja.AssetsController.serveStatic()
2017-01-06 00:05:53,052 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getData                 =>  controllers.MyGadgetController.getDataGadget()
2017-01-06 00:05:53,052 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /gadget/save                    =>  controllers.MyGadgetController.insertOrUpdateGadget()
2017-01-06 00:05:53,052 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/gadgets                 =>  controllers.MyGadgetController.getGadgetsInDashboardId()
2017-01-06 00:05:53,052 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getStoryInEpic          =>  controllers.MyGadgetController.getStoryInEpic()
2017-01-06 00:05:53,053 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product                        =>  controllers.ProductController.productPage()
2017-01-06 00:05:53,053 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteProduct          =>  controllers.ProductController.deleteProduct()
2017-01-06 00:05:53,053 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertProduct          =>  controllers.ProductController.addProduct()
2017-01-06 00:05:53,053 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteCycle            =>  controllers.ProductController.deleteCycle()
2017-01-06 00:05:53,053 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertCycle            =>  controllers.ProductController.addCycle()
2017-01-06 00:05:53,053 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product/getall                 =>  controllers.ProductController.getAllProduct()
2017-01-06 00:05:53,054 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getEpicLinks                   =>  controllers.EpicController.getEpicLinks()
2017-01-06 00:05:53,054 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getassignee                    =>  controllers.AssigneeController.getAssigneeList()
2017-01-06 00:05:53,054 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listcycle                      =>  controllers.AssigneeController.getListCycleName()
2017-01-06 00:05:53,054 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /cycleExisting                  =>  controllers.AssigneeController.getListExistingCycle()
2017-01-06 00:05:53,054 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listproject                    =>  controllers.MyGadgetController.getProjectList()
2017-01-06 00:05:53,054 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /.*                             =>  controllers.ApplicationController.index()
2017-01-06 00:05:53,055 INFO [Scanner-0] n.NinjaDefault [NinjaDefault.java:441] 
 _______  .___ _______        ____.  _____   
 \      \ |   |\      \      |    | /  _  \  
 /   |   \|   |/   |   \     |    |/  /_\  \ 
/    |    \   /    |    \/\__|    /    |    \  http://www.ninjaframework.org
\____|__  /___\____|__  /\________\____|__  /  @ninjaframework
     web\/framework   \/                  \/   5.8.0

2017-01-06 00:05:53,056 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:53] Starting Ninja application...
2017-01-06 00:05:53,058 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:86] Ninja application started in 1ms
2017-01-06 00:07:02,390 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:93] Stopping Ninja application...
2017-01-06 00:07:02,400 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:97] Ninja application stopped in 10ms
2017-01-06 00:07:05,443 INFO [Scanner-0] n.u.NinjaModeHelper [NinjaModeHelper.java:90] Ninja is running in mode dev
2017-01-06 00:07:05,496 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:245] Successfully configured Logback.
2017-01-06 00:07:05,498 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:165] Enabling Ninja classic configuration
2017-01-06 00:07:06,294 INFO [Scanner-0] n.u.SwissKnife [SwissKnife.java:77] Could not load file conf/messages_en.properties (not a bad thing necessarily, but I am returing null)
2017-01-06 00:07:06,295 INFO [Scanner-0] n.i.MessagesImpl [MessagesImpl.java:205] Did not find conf/messages_en.properties but it was specified in application.conf. Using default language instead.
2017-01-06 00:07:06,355 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:116] -------------------------------------------------------------------
2017-01-06 00:07:06,355 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:117] Registered response template engines
2017-01-06 00:07:06,356 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:118] -------------------------------------------------------------------
2017-01-06 00:07:06,356 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/javascript  =>  ninja.template.TemplateEngineJsonP
2017-01-06 00:07:06,356 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/json        =>  ninja.template.TemplateEngineJson
2017-01-06 00:07:06,357 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] application/xml         =>  ninja.template.TemplateEngineXml
2017-01-06 00:07:06,357 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/html               =>  ninja.template.TemplateEngineFreemarker
2017-01-06 00:07:06,357 INFO [Scanner-0] n.t.TemplateEngineManagerImpl [TemplateEngineManagerImpl.java:123] text/plain              =>  ninja.template.TemplateEngineText
2017-01-06 00:07:06,404 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1184] Using default implementation for ThreadExecutor
2017-01-06 00:07:06,407 INFO [Scanner-0] o.q.s.SimpleThreadPool [SimpleThreadPool.java:268] Job execution threads will use class loader of thread: Scanner-0
2017-01-06 00:07:06,438 INFO [Scanner-0] o.q.c.SchedulerSignalerImpl [SchedulerSignalerImpl.java:61] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2017-01-06 00:07:06,439 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:240] Quartz Scheduler v.2.2.1 created.
2017-01-06 00:07:06,441 INFO [Scanner-0] o.q.s.RAMJobStore [RAMJobStore.java:155] RAMJobStore initialized.
2017-01-06 00:07:06,443 INFO [Scanner-0] o.q.c.QuartzScheduler [QuartzScheduler.java:305] Scheduler meta-data: Quartz Scheduler (v2.2.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2017-01-06 00:07:06,443 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1339] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2017-01-06 00:07:06,444 INFO [Scanner-0] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1343] Quartz scheduler version: 2.2.1
2017-01-06 00:07:06,458 INFO [Scanner-0] h.s.SchedulerManagement [SchedulerManagement.java:49] started clear cache job
2017-01-06 00:07:06,464 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:109] ----------------------------------------------------------------------------
2017-01-06 00:07:06,464 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:110] Registered request bodyparser engines
2017-01-06 00:07:06,465 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:111] ----------------------------------------------------------------------------
2017-01-06 00:07:06,465 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/json                   =>  ninja.bodyparser.BodyParserEngineJson
2017-01-06 00:07:06,465 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/x-www-form-urlencoded  =>  ninja.bodyparser.BodyParserEnginePost
2017-01-06 00:07:06,466 INFO [Scanner-0] n.b.BodyParserEngineManagerImpl [BodyParserEngineManagerImpl.java:116] application/xml                    =>  ninja.bodyparser.BodyParserEngineXml
2017-01-06 00:07:06,467 INFO [Scanner-0] n.Bootstrap [Bootstrap.java:105] Ninja injector started in 965 ms.
2017-01-06 00:07:06,575 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:425] ------------------------------------------------------------------------------------------------------
2017-01-06 00:07:06,575 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:426] Registered routes
2017-01-06 00:07:06,576 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:427] ------------------------------------------------------------------------------------------------------
2017-01-06 00:07:06,576 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /login                          =>  controllers.LoginLogoutController.login()
2017-01-06 00:07:06,576 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /login                          =>  controllers.LoginLogoutController.loginPost()
2017-01-06 00:07:06,576 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /logout                         =>  controllers.LoginLogoutController.logout()
2017-01-06 00:07:06,576 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getUserInfo                    =>  controllers.ApplicationController.getUserInfo()
2017-01-06 00:07:06,576 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getProjectList                 =>  controllers.ApplicationController.getProjectList()
2017-01-06 00:07:06,576 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getGadgetList                  =>  controllers.GadgetController.getGadgetList()
2017-01-06 00:07:06,576 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /addNewGadget                   =>  controllers.GadgetController.addNewGadget()
2017-01-06 00:07:06,576 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateGadget                   =>  controllers.GadgetController.updateGadget()
2017-01-06 00:07:06,576 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /clearCacheGadget               =>  controllers.GadgetController.clearCacheGadget()
2017-01-06 00:07:06,576 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteGadget                   =>  controllers.GadgetController.deleteGadget()
2017-01-06 00:07:06,576 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /showSonarStatisticGadget       =>  controllers.GadgetController.showSonarStatisticGadget()
2017-01-06 00:07:06,576 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getIAComponents                =>  controllers.ApplicationController.getIAComponents()
2017-01-06 00:07:06,577 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getMetrics                     =>  controllers.ApplicationController.getMetricList()
2017-01-06 00:07:06,577 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getReleaseList                 =>  controllers.ApplicationController.getReleaseList()
2017-01-06 00:07:06,577 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getPeriodList                  =>  controllers.ApplicationController.getPeriodList()
2017-01-06 00:07:06,577 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getCruProjectList              =>  controllers.OverdueReviewReportController.getCruProjectList()
2017-01-06 00:07:06,577 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release                        =>  controllers.ConfigurationController.release()
2017-01-06 00:07:06,578 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /release/ialist/{name}          =>  controllers.ConfigurationController.releaseURL()
2017-01-06 00:07:06,578 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release                        =>  controllers.ConfigurationController.releasePost()
2017-01-06 00:07:06,578 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/update                 =>  controllers.ConfigurationController.releaseUpdate()
2017-01-06 00:07:06,578 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /release/delete                 =>  controllers.ConfigurationController.releaseDelete()
2017-01-06 00:07:06,578 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /metric                         =>  controllers.ConfigurationController.metric()
2017-01-06 00:07:06,578 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric                         =>  controllers.ConfigurationController.metricPost()
2017-01-06 00:07:06,579 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/update                  =>  controllers.ConfigurationController.metricUpdate()
2017-01-06 00:07:06,579 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /metric/delete                  =>  controllers.ConfigurationController.metricDelete()
2017-01-06 00:07:06,579 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /dashboard/new                  =>  controllers.DashboardController.new_dashboard()
2017-01-06 00:07:06,579 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /dashboard/new                  =>  controllers.DashboardController.new_dashboard_post()
2017-01-06 00:07:06,579 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /deleteDashboard                =>  controllers.DashboardController.deleteDashboard()
2017-01-06 00:07:06,580 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardInfo               =>  controllers.DashboardController.getDashboardInfo()
2017-01-06 00:07:06,580 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /getDashboardList               =>  controllers.DashboardController.getDashboardList()
2017-01-06 00:07:06,581 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /updateDashboardOption          =>  controllers.DashboardController.updateDashboardOption()
2017-01-06 00:07:06,582 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/webjars/{fileName: .*}  =>  ninja.AssetsController.serveWebJars()
2017-01-06 00:07:06,584 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /assets/{fileName: .*}          =>  ninja.AssetsController.serveStatic()
2017-01-06 00:07:06,585 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getData                 =>  controllers.MyGadgetController.getDataGadget()
2017-01-06 00:07:06,586 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /gadget/save                    =>  controllers.MyGadgetController.insertOrUpdateGadget()
2017-01-06 00:07:06,586 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/gadgets                 =>  controllers.MyGadgetController.getGadgetsInDashboardId()
2017-01-06 00:07:06,586 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /gadget/getStoryInEpic          =>  controllers.MyGadgetController.getStoryInEpic()
2017-01-06 00:07:06,586 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product                        =>  controllers.ProductController.productPage()
2017-01-06 00:07:06,587 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteProduct          =>  controllers.ProductController.deleteProduct()
2017-01-06 00:07:06,587 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertProduct          =>  controllers.ProductController.addProduct()
2017-01-06 00:07:06,587 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/deleteCycle            =>  controllers.ProductController.deleteCycle()
2017-01-06 00:07:06,587 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] POST /product/insertCycle            =>  controllers.ProductController.addCycle()
2017-01-06 00:07:06,587 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /product/getall                 =>  controllers.ProductController.getAllProduct()
2017-01-06 00:07:06,588 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getEpicLinks                   =>  controllers.EpicController.getEpicLinks()
2017-01-06 00:07:06,588 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /getassignee                    =>  controllers.AssigneeController.getAssigneeList()
2017-01-06 00:07:06,588 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listcycle                      =>  controllers.AssigneeController.getListCycleName()
2017-01-06 00:07:06,588 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /cycleExisting                  =>  controllers.AssigneeController.getListExistingCycle()
2017-01-06 00:07:06,588 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /listproject                    =>  controllers.MyGadgetController.getProjectList()
2017-01-06 00:07:06,589 INFO [Scanner-0] n.RouterImpl [RouterImpl.java:433] GET  /.*                             =>  controllers.ApplicationController.index()
2017-01-06 00:07:06,590 INFO [Scanner-0] n.NinjaDefault [NinjaDefault.java:441] 
 _______  .___ _______        ____.  _____   
 \      \ |   |\      \      |    | /  _  \  
 /   |   \|   |/   |   \     |    |/  /_\  \ 
/    |    \   /    |    \/\__|    /    |    \  http://www.ninjaframework.org
\____|__  /___\____|__  /\________\____|__  /  @ninjaframework
     web\/framework   \/                  \/   5.8.0

2017-01-06 00:07:06,590 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:53] Starting Ninja application...
2017-01-06 00:07:06,592 INFO [Scanner-0] n.l.LifecycleServiceImpl [LifecycleServiceImpl.java:86] Ninja application started in 2ms
2017-01-06 00:07:41,323 INFO [qtp1186254299-350] o.m.d.cluster [SLF4JLogger.java:71] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2017-01-06 00:07:41,384 INFO [qtp1186254299-350] o.m.d.cluster [SLF4JLogger.java:71] No server chosen by ReadPreferenceServerSelector{readPreference=primary} from cluster description ClusterDescription{type=UNKNOWN, connectionMode=SINGLE, all=[ServerDescription{address=localhost:27017, type=UNKNOWN, state=CONNECTING}]}. Waiting for 30000 ms before timing out
2017-01-06 00:07:41,394 INFO [cluster-ClusterId{value='586e7d5d18e1821138207eb0', description='null'}-localhost:27017] o.m.d.connection [SLF4JLogger.java:71] Opened connection [connectionId{localValue:1, serverValue:83}] to localhost:27017
2017-01-06 00:07:41,396 INFO [cluster-ClusterId{value='586e7d5d18e1821138207eb0', description='null'}-localhost:27017] o.m.d.cluster [SLF4JLogger.java:71] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 1, 5]}, minWireVersion=0, maxWireVersion=4, maxDocumentSize=16777216, roundTripTimeNanos=784913}
2017-01-06 00:07:41,403 INFO [qtp1186254299-350] o.m.d.connection [SLF4JLogger.java:71] Opened connection [connectionId{localValue:2, serverValue:84}] to localhost:27017
2017-01-06 00:07:50,733 INFO [qtp1186254299-351] o.m.d.cluster [SLF4JLogger.java:71] Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2017-01-06 00:07:50,736 INFO [qtp1186254299-351] o.m.d.cluster [SLF4JLogger.java:71] No server chosen by ReadPreferenceServerSelector{readPreference=primary} from cluster description ClusterDescription{type=UNKNOWN, connectionMode=SINGLE, all=[ServerDescription{address=127.0.0.1:27017, type=UNKNOWN, state=CONNECTING}]}. Waiting for 30000 ms before timing out
2017-01-06 00:07:50,744 INFO [cluster-ClusterId{value='586e7d6618e1821138207eb1', description='null'}-127.0.0.1:27017] o.m.d.connection [SLF4JLogger.java:71] Opened connection [connectionId{localValue:3, serverValue:85}] to 127.0.0.1:27017
2017-01-06 00:07:50,745 INFO [cluster-ClusterId{value='586e7d6618e1821138207eb1', description='null'}-127.0.0.1:27017] o.m.d.cluster [SLF4JLogger.java:71] Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 1, 5]}, minWireVersion=0, maxWireVersion=4, maxDocumentSize=16777216, roundTripTimeNanos=537257}
2017-01-06 00:07:50,750 INFO [qtp1186254299-351] o.m.d.connection [SLF4JLogger.java:71] Opened connection [connectionId{localValue:4, serverValue:86}] to 127.0.0.1:27017
2017-01-06 00:07:50,753 INFO [qtp1186254299-351] c.DashboardController [DashboardController.java:131] DASHBOARDS [{"owner":"hcongle","name":"abc","privacy":{"share":["Everyone"],"status":"public"},"id":"586e67bb18e18285bc408671"}]
2017-01-06 00:07:50,760 INFO [qtp1186254299-351] o.m.d.connection [SLF4JLogger.java:71] Closed connection [connectionId{localValue:4, serverValue:86}] to 127.0.0.1:27017 because the pool has been closed.
2017-01-06 00:07:50,848 INFO [qtp1186254299-350] o.m.d.cluster [SLF4JLogger.java:71] Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2017-01-06 00:07:50,851 INFO [qtp1186254299-350] o.m.d.cluster [SLF4JLogger.java:71] No server chosen by ReadPreferenceServerSelector{readPreference=primary} from cluster description ClusterDescription{type=UNKNOWN, connectionMode=SINGLE, all=[ServerDescription{address=127.0.0.1:27017, type=UNKNOWN, state=CONNECTING}]}. Waiting for 30000 ms before timing out
2017-01-06 00:07:50,861 INFO [cluster-ClusterId{value='586e7d6618e1821138207eb2', description='null'}-127.0.0.1:27017] o.m.d.connection [SLF4JLogger.java:71] Opened connection [connectionId{localValue:5, serverValue:87}] to 127.0.0.1:27017
2017-01-06 00:07:50,862 INFO [cluster-ClusterId{value='586e7d6618e1821138207eb2', description='null'}-127.0.0.1:27017] o.m.d.cluster [SLF4JLogger.java:71] Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 1, 5]}, minWireVersion=0, maxWireVersion=4, maxDocumentSize=16777216, roundTripTimeNanos=657738}
2017-01-06 00:07:50,872 INFO [qtp1186254299-350] o.m.d.connection [SLF4JLogger.java:71] Opened connection [connectionId{localValue:6, serverValue:88}] to 127.0.0.1:27017
2017-01-06 00:07:50,875 INFO [qtp1186254299-350] o.m.d.connection [SLF4JLogger.java:71] Closed connection [connectionId{localValue:6, serverValue:88}] to 127.0.0.1:27017 because the pool has been closed.
